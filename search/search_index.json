{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#whats-up","title":"What's up?","text":"<p>I write about a mix of personal work, applying llms, photography, and thinking about career. I work in WoltersKluwer, do some GenAI work of llm in law, tax domain.</p>"},{"location":"#get-in-touch","title":"Get in touch","text":"<p>Do you need help in applying llm? I'm open to communicate with you and other forms of advisory. To start discussing, please contact me with this email.</p>"},{"location":"photography/","title":"new photography","text":""},{"location":"writing/","title":"Index","text":"<p>I will record some idea about technologies and life. I hope you find something valuable. If you have any question, please contact me via email.</p>"},{"location":"writing/#rag","title":"RAG","text":"<ul> <li>RAG-Survey</li> <li>RAG-evaluate</li> <li>Talking about RAG</li> <li>Talking about RAG</li> </ul>"},{"location":"writing/#conversation-about-chat-history","title":"Conversation about chat history","text":"<ul> <li>Manage conversation</li> </ul>"},{"location":"writing/#query-understanding","title":"Query understanding","text":"<ul> <li>Query understanding</li> </ul>"},{"location":"writing/#prompt","title":"Prompt","text":"<ul> <li>Prompt Optim</li> </ul>"},{"location":"writing/#embedding","title":"Embedding","text":"<ul> <li>Embedding Fine-tuning</li> </ul>"},{"location":"writing/#personal-writing","title":"Personal Writing","text":""},{"location":"writing/2024/06/01/embedding-fine-tuning/","title":"Embedding fine-tuning","text":"<p>Tags: Embedding</p>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#semantic-search","title":"Semantic search","text":""},{"location":"writing/2024/06/01/embedding-fine-tuning/#symmetric-vs-asymmetric-semantic-search","title":"Symmetric vs. Asymmetric Semantic Search","text":"<ul> <li>\u5bf9\u79f0\u8bed\u4e49\u641c\u7d22\u6307\u7684\u662fquery\u548c\u8bed\u6599\u4e2d\u7684\u5b9e\u4f53\u5b58\u5728\u4ea4\u53c9\uff08\u53e5\u5f0f\uff0c\u5355\u8bcd\uff09\u3002\u4f8b\u5b50\uff1a\u57fa\u4e8e\u5f53\u524d\u7684\u95ee\u9898\u53bb\u641c\u7d22\u76f8\u4f3c\u7684\u95ee\u9898\uff0c\u6bd4\u5982\uff1a\u5982\u4f55\u5728\u7ebf\u5b66\u4e60Python\uff1f\u5b83\u4e5f\u53ef\u4ee5\u662f\uff1a\u5982\u4f55\u5728\u7f51\u4e0a\u5b66\u4e60Python\uff1f</li> <li>\u975e\u5bf9\u79f0\u8bed\u4e49\u641c\u7d22\u901a\u5e38\u662f\uff0c\u4ece\u4e00\u4e2aquery\u68c0\u7d22\u5f97\u5230\u4e00\u6bb5\u8f83\u957f\u7684\u8bed\u6599\u3002\u4f8b\u5982\uff1a\u4ec0\u4e48\u662fPython\uff1f\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u662fPython\u7684\u5177\u4f53\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1aPython\u662f\u53ef\u89e3\u91ca\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u2026\u3002\u5bf9\u4e8e\u975e\u5bf9\u79f0\u4efb\u52a1\uff0cquery\u548c\u8bed\u6599\u901a\u5e38\u4e0d\u5b58\u5728\u4ea4\u53c9\uff08\u53e5\u5f0f\uff0c\u5355\u8bcd\uff09\u3002</li> </ul>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#retrieve-re-rank-pipeline","title":"Retrieve &amp; Re-rank pipeline","text":"<p>Retrieval: Bi-encoder; Symmetric &amp; Asymmetric semantic search</p> <p>\u8d22\u7a0eGPT\u4e2d\uff0c\u5173\u952e\u8bcd\u641c\u7d22\u662f\u4e00\u79cd\u5bf9\u79f0\u68c0\u7d22\uff0c\u6570\u636eembedding\u5219\u9009\u62e9\u4e86title+body\u7684\u65b9\u5f0f\uff0c\u662f\u4e00\u79cd\u5bf9\u79f0\u4e0e\u975e\u5bf9\u79f0\u7ed3\u5408\u7684\u65b9\u5f0f\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u5bf9\u79f0\u8bed\u4e49\u68c0\u7d22\u7684\u6bd4\u91cd\u4f1a\u5927\u3002\u4e3a\u4ec0\u4e48\u9009\u62e9title+body\u7684\u65b9\u5f0f\u4e3b\u8981\u662f\u7531\u4e8e\u901a\u7528embedding\u5728\u975e\u5bf9\u79f0\u573a\u666f\u4e0b\u6548\u679c\u4e0d\u4f73\u3002\u53ea\u80fd\u9009\u62e9\u6298\u4e2d\u7684\u65b9\u5f0f\u3002</p> <p>Reranker: Cross-encoder</p> <p></p>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#fine-tuning","title":"Fine-tuning","text":"<ol> <li>\u57fa\u4e8e\u6587\u672c\u751f\u6210\u5173\u4e8e\u6587\u672c\u7684\u591a\u6837\u6027\u95ee\u9898\uff0c\u6784\u6210\u6587\u672c\u5bf9\u3002</li> <li>\u786c\u8d1f\u6837\u672c\u6316\u6398\uff0c\u6784\u5efa\u8d1f\u6837\u672c\u3002</li> <li>Fine-tuning embedding\u6a21\u578b\uff08fine-tuning embedding adapter\uff09</li> <li>\u8bc4\u4f30</li> </ol>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#synthetic-data","title":"Synthetic data","text":"<p>\u57fa\u4e8e\u6587\u672c\u5185\u5bb9\u5229\u7528\u5927\u6a21\u578b\u751f\u6210\u9488\u5bf9\u5185\u5bb9\u7684\u591a\u6837\u6027\u95ee\u9898\u3002</p>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#hard-negatives","title":"Hard Negatives","text":"<pre><code>{\"query\": str, \"pos\": List[str], \"neg\":List[str]}\n// pos\u662f\u6b63\u6837\u672clist\uff0cneg\u662f\u8d1f\u6837\u672clist\uff0c\u5982\u679c\u6ca1\u6709\u8d1f\u6837\u672c\uff0c\u53ef\u4ee5\u4ece\u6574\u4e2a\u9884\u6599\u4e2d\u968f\u673a\u9009\u62e9\u6570\u636e\u4f5c\u4e3a\u8d1f\u6837\u672c\u3002\n</code></pre> <p>\u4ece\u4e00\u4e2a\u8303\u56f4\u5185\u968f\u673a\u9009\u53d6\u8d1f\u6837\u672c</p> <p>\u8303\u56f4\u7684\u9009\u62e9\uff1a</p> <ul> <li>query\u53ec\u56de\u540e\u9009\u62e9topM-topN</li> <li>query\u53ec\u56de\u540e\uff0c\u968f\u673a\u91c7\u6837\u76f8\u4f3c\u6027\u5206\u6570\u4f4d\u4e8e0.3-0.7\u7684\u6837\u672c</li> </ul>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#fine-tuning-embedding-adapter","title":"Fine-tuning embedding adapter","text":"<p>\u65e0\u9700\u91cd\u5efa\u6587\u6863embedding\u7d22\u5f15\uff0c\u53ef\u4ee5\u88ab\u7528\u4e8e\u4efb\u4f55embedding\u6a21\u578b</p> <p></p> <p>Adapter\u662f\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u7684\u6a21\u5757\uff0c\u65b0\u7684query embedding\u7ed3\u5408adapter\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ {q_t} = Wq + b \\] <p>\u635f\u5931\u51fd\u6570\uff1aThis loss expects as input a batch consisting of sentence pairs <code>(a_1, p_1), (a_2, p_2)..., (a_n, p_n)</code> where we assume that <code>(a_i, p_i)</code> are a positive pair and <code>(a_i, p_j)</code> for <code>i != j</code> a negative pair.</p>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#llamaindex-fine-tuning","title":"LlamaIndex Fine tuning","text":""},{"location":"writing/2024/06/01/embedding-fine-tuning/#load-data","title":"Load data","text":"<pre><code>TRAIN_FILES = [\"./data/10k/lyft_2021.pdf\"]\nVAL_FILES = [\"./data/10k/uber_2021.pdf\"]\n\nTRAIN_CORPUS_FPATH = \"./data/train_corpus.json\"\nVAL_CORPUS_FPATH = \"./data/val_corpus.json\"\n\ndef load_corpus(files, verbose=False):\n    if verbose:\n        print(f\"Loading files {files}\")\n\n    reader = SimpleDirectoryReader(input_files=files)\n    docs = reader.load_data()\n    if verbose:\n        print(f\"Loaded {len(docs)} docs\")\n\n    parser = SentenceSplitter()\n    nodes = parser.get_nodes_from_documents(docs, show_progress=verbose)\n\n    if verbose:\n        print(f\"Parsed {len(nodes)} nodes\")\n\n    return nodes\n\ntrain_nodes = load_corpus(TRAIN_FILES, verbose=True)\nval_nodes = load_corpus(VAL_FILES, verbose=True)\n</code></pre>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#generating-synthetic-data","title":"Generating synthetic data","text":"<pre><code>from llama_index.finetuning import generate_qa_embedding_pairs\nfrom llama_index.core.evaluation import EmbeddingQAFinetuneDataset\n\nimport os\n\nOPENAI_API_KEY = \"sk-\"\nos.environ[\"OPENAI_API_KEY\"] = OPENAI_API_KEY\n\nfrom llama_index.llms.openai import OpenAI\n\ntrain_dataset = generate_qa_embedding_pairs(\n    llm=OpenAI(model=\"gpt-3.5-turbo\"), nodes=train_nodes\n)\nval_dataset = generate_qa_embedding_pairs(\n    llm=OpenAI(model=\"gpt-3.5-turbo\"), nodes=val_nodes\n)\n\ntrain_dataset.save_json(\"train_dataset.json\")\nval_dataset.save_json(\"val_dataset.json\")\n</code></pre>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#run-embedding-finetuning","title":"Run Embedding Finetuning","text":"<pre><code>from llama_index.finetuning import SentenceTransformersFinetuneEngine\n\nfinetune_engine = SentenceTransformersFinetuneEngine(\n    train_dataset,\n    model_id=\"BAAI/bge-small-en\",\n    model_output_path=\"test_model\",\n    val_dataset=val_dataset,\n)\n\nfinetune_engine.finetune()\n\nembed_model = finetune_engine.get_finetuned_model()\n</code></pre>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#dataloader","title":"DataLoader","text":"<pre><code>for query_id, query in dataset.queries.items():\n    if use_all_docs:\n        for node_id in dataset.relevant_docs[query_id]:\n            text = dataset.corpus[node_id]\n            example = InputExample(texts=[query, text])\n            examples.append(example)\n    else:\n        node_id = dataset.relevant_docs[query_id][0]\n        text = dataset.corpus[node_id]\n        example = InputExample(texts=[query, text])\n        examples.append(example)\n</code></pre>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#key-path","title":"Key Path","text":""},{"location":"writing/2024/06/01/embedding-fine-tuning/#loss","title":"Loss","text":"<p>Batch\u5185\u7684\u5176\u4ed6\u6837\u672c\u4f5c\u4e3a\u8d1f\u6837\u672c</p> <pre><code>import torch\nfrom torch import nn, Tensor\nfrom typing import Iterable, Dict\nfrom ..SentenceTransformer import SentenceTransformer\nfrom .. import util\n\nclass MultipleNegativesRankingLoss(nn.Module):\n    def __init__(self, model: SentenceTransformer, scale: float = 20.0, similarity_fct=util.cos_sim):\n        \"\"\"\n        This loss expects as input a batch consisting of sentence pairs ``(a_1, p_1), (a_2, p_2)..., (a_n, p_n)``\n        where we assume that ``(a_i, p_i)`` are a positive pair and ``(a_i, p_j)`` for ``i != j`` a negative pair.\n\n        For each ``a_i``, it uses all other ``p_j`` as negative samples, i.e., for ``a_i``, we have 1 positive example\n        (``p_i``) and ``n-1`` negative examples (``p_j``). It then minimizes the negative log-likehood for softmax\n        normalized scores.\n\n        This loss function works great to train embeddings for retrieval setups where you have positive pairs\n        (e.g. (query, relevant_doc)) as it will sample in each batch ``n-1`` negative docs randomly.\n\n        The performance usually increases with increasing batch sizes.\n\n        You can also provide one or multiple hard negatives per anchor-positive pair by structering the data like this:\n        ``(a_1, p_1, n_1), (a_2, p_2, n_2)``. Then, ``n_1`` is a hard negative for ``(a_1, p_1)``. The loss will use for\n        the pair ``(a_i, p_i)`` all ``p_j`` for ``j != i`` and all ``n_j`` as negatives.\n\n        :param model: SentenceTransformer model\n        :param scale: Output of similarity function is multiplied by scale value\n        :param similarity_fct: similarity function between sentence embeddings. By default, cos_sim. Can also be set to dot product (and then set scale to 1)\n\n        References:\n            - Efficient Natural Language Response Suggestion for Smart Reply, Section 4.4: https://arxiv.org/pdf/1705.00652.pdf\n            - `Training Examples &gt; Natural Language Inference &lt;../../examples/training/nli/README.html&gt;`_\n            - `Training Examples &gt; Paraphrase Data &lt;../../examples/training/paraphrases/README.html&gt;`_\n            - `Training Examples &gt; Quora Duplicate Questions &lt;../../examples/training/quora_duplicate_questions/README.html&gt;`_\n            - `Training Examples &gt; MS MARCO &lt;../../examples/training/ms_marco/README.html&gt;`_\n            - `Unsupervised Learning &gt; SimCSE &lt;../../examples/unsupervised_learning/SimCSE/README.html&gt;`_\n            - `Unsupervised Learning &gt; GenQ &lt;../../examples/unsupervised_learning/query_generation/README.html&gt;`_\n\n        Requirements:\n            1. (anchor, positive) pairs or (anchor, positive, negative) triplets\n\n        Relations:\n            - :class:`CachedMultipleNegativesRankingLoss` is equivalent to this loss, but it uses caching that allows for\n              much higher batch sizes (and thus better performance) without extra memory usage. However, it requires more\n              training time.\n            - :class:`MultipleNegativesSymmetricRankingLoss` is equivalent to this loss, but with an additional loss term.\n            - :class:`GISTEmbedLoss` is equivalent to this loss, but uses a guide model to guide the in-batch negative\n              sample selection. `GISTEmbedLoss` yields a stronger training signal at the cost of some training overhead.\n\n        Inputs:\n            +---------------------------------------+--------+\n            | Texts                                 | Labels |\n            +=======================================+========+\n            | (anchor, positive) pairs              | none   |\n            +---------------------------------------+--------+\n            | (anchor, positive, negative) triplets | none   |\n            +---------------------------------------+--------+\n\n        Example:\n            ::\n\n                from sentence_transformers import SentenceTransformer, losses, InputExample\n                from torch.utils.data import DataLoader\n\n                model = SentenceTransformer('distilbert-base-uncased')\n                train_examples = [\n                    InputExample(texts=['Anchor 1', 'Positive 1']),\n                    InputExample(texts=['Anchor 2', 'Positive 2']),\n                ]\n                train_dataloader = DataLoader(train_examples, shuffle=True, batch_size=32)\n                train_loss = losses.MultipleNegativesRankingLoss(model=model)\n                model.fit(\n                    [(train_dataloader, train_loss)],\n                    epochs=10,\n                )\n        \"\"\"\n        super(MultipleNegativesRankingLoss, self).__init__()\n        self.model = model\n        self.scale = scale\n        self.similarity_fct = similarity_fct\n        self.cross_entropy_loss = nn.CrossEntropyLoss()\n\n    def forward(self, sentence_features: Iterable[Dict[str, Tensor]], labels: Tensor):\n        reps = [self.model(sentence_feature)[\"sentence_embedding\"] for sentence_feature in sentence_features]\n        embeddings_a = reps[0] # query embedding\n        embeddings_b = torch.cat(reps[1:]) # context embedding\n\n        scores = self.similarity_fct(embeddings_a, embeddings_b) * self.scale\n        labels = torch.tensor(\n            range(len(scores)), dtype=torch.long, device=scores.device\n        )  # Example a[i] should match with b[i]\n        return self.cross_entropy_loss(scores, labels)\n\n    def get_config_dict(self):\n        return {\"scale\": self.scale, \"similarity_fct\": self.similarity_fct.__name__}\n</code></pre>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#evaluate","title":"Evaluate","text":"<ol> <li>Hit rate: \u5bf9\u4e8e\u6bcf\u4e00\u4e2a(query, context) \u5bf9\uff0c\u4f7f\u7528query\u68c0\u7d22\u5f97\u5230topk\u6587\u6863\u3002\u5982\u679c\u7ed3\u679c\u5305\u542bcontext\uff0c\u8fd9\u5c31\u662f\u4e00\u6b21\u547d\u4e2d\u3002</li> <li>Mean Reciprocal Rank: \u8fd9\u662f\u4e00\u4e2a\u7a0d\u5fae\u66f4\u7cbe\u7ec6\u7684\u6392\u540d\u5ea6\u91cf\u6807\u51c6\uff0c\u5b83\u7740\u773c\u4e8etopk\u68c0\u7d22\u5230\u7684\u6587\u6863\u4e2dcontext\u7684\u5012\u6570\u6392\u540d\uff0c\u5012\u6570\u6392\u540d\u5b9a\u4e49\u4e3a\uff1a1/rank\u3002 \u5f53\u7136\u5982\u679c\u7ed3\u679c\u4e0d\u5305\u542bcontext\uff0cmrr=0</li> <li><code>InformationRetrievalEvaluator</code>\u00a0from sentence_transformers.</li> </ol>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#adapter-evaluate","title":"Adapter evaluate","text":"<p>\u5c0f\u6279\u91cf\u767e\u7ea7\u6570\u636e\u5bf9\u6bd4</p> retrievers hit_rate mrr 0 ada 0.914286 0.758095 1 bge-small-zh-v1.5 0.942857 0.852857 2 ft-ada 0.928571 0.768810 <p>\u4e2d\u6279\u91cf1k\u6570\u636e\u5bf9\u6bd4</p> retrievers hit_rate mrr 0 ada 0.914286 0.758095 1 bge-small-zh-v1.5 0.942857 0.852857 2 ft-ada 0.928571 0.768810 <p>adapter\u4e0d\u9002\u5408\u5927\u91cf\u6570\u636e\u7684fine-tuning\uff0c\u53c2\u6570\u592a\u5c11\u5bfc\u81f4\u5fae\u8c03\u6548\u679c\u4e0d\u660e\u663e\u751a\u81f3\u53d8\u5dee\u3002</p>"},{"location":"writing/2024/06/01/embedding-fine-tuning/#fine-tuning-evaluate","title":"Fine-tuning evaluate","text":"<p>\u4e2d\u6279\u91cf1k\u6570\u636e\u5bf9\u6bd4</p> retrievers hit_rate mrr 0 ada 0.468992 0.348514 1 bge-m3 0.488372 0.377132 2 bge-m3-ft 0.534884 0.417765 3 ali 0.437984 0.329780 <p>\u5927\u6279\u91cf8k\u6570\u636e\u5bf9\u6bd4</p> retrievers hit_rate mrr 0 ada 0.708678 0.546901 1 bge-m3 0.803719 0.639715 2 bge-m3-ft-epoch-1 0.858815 0.706623 3 bge-m3-ft-epoch-5 0.860882 0.73478 3 ali 0.694215 0.517769"},{"location":"writing/2024/06/01/embedding-fine-tuning/#reference","title":"Reference","text":"<ol> <li>https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/finetune/hn_mine.py</li> <li>https://blog.csdn.net/qq_44193969/article/details/134042750</li> <li>https://www.llamaindex.ai/blog/fine-tuning-a-linear-adapter-for-any-embedding-model-8dd0a142d383</li> </ol>"},{"location":"writing/2024/03/09/python-async/","title":"Python Async","text":""},{"location":"writing/2024/03/09/python-async/#parallelism-vs-threading","title":"Parallelism V.S. Threading","text":"<p>\u8fdb\u7a0b\uff08Process\uff09\u548c\u7ebf\u7a0b\uff08Thread\uff09\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u7528\u4e8e\u7ba1\u7406\u8ba1\u7b97\u673a\u6267\u884c\u4efb\u52a1\u7684\u65b9\u5f0f\u3002\u5b83\u4eec\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u7ba1\u7406\u8d44\u6e90\u7684\u65b9\u5f0f\u548c\u6267\u884c\u4efb\u52a1\u7684\u65b9\u5f0f\u3002</p> <ol> <li>\u8fdb\u7a0b\uff08Process\uff09<ul> <li>\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002\u5b83\u5305\u542b\u4e86\u7a0b\u5e8f\u4ee3\u7801\u3001\u6570\u636e\u4ee5\u53ca\u7a0b\u5e8f\u6267\u884c\u65f6\u6240\u9700\u7684\u5404\u79cd\u7cfb\u7edf\u8d44\u6e90\uff08\u5982\u5185\u5b58\u7a7a\u95f4\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u3002</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u3002</li> <li>\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u5f00\u9500\u76f8\u5bf9\u8f83\u9ad8\uff0c\u56e0\u4e3a\u5207\u6362\u8fdb\u7a0b\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u6574\u4e2a\u8fdb\u7a0b\u7684\u72b6\u6001\u3002</li> <li>\u8fdb\u7a0b\u4e4b\u95f4\u901a\u5e38\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5b83\u4eec\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u6765\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002</li> </ul> </li> <li>\u7ebf\u7a0b\uff08Thread\uff09<ul> <li>\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u5185\u90e8\u7684\u6267\u884c\u5355\u5143\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u5b83\u4eec\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\u7a7a\u95f4\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u3002</li> <li>\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u540c\u4e00\u8fdb\u7a0b\u5185\u7684\u6570\u636e\u3002</li> <li>\u7ebf\u7a0b\u4e4b\u95f4\u5207\u6362\u7684\u5f00\u9500\u8f83\u4f4e\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5207\u6362\u65f6\u53ea\u9700\u4fdd\u5b58\u548c\u6062\u590d\u5c11\u91cf\u7684\u7ebf\u7a0b\u72b6\u6001\u3002</li> <li>\u7531\u4e8e\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u548c\u9ad8\u6548\u3002</li> </ul> </li> </ol> <p>\u4e3b\u8981\u533a\u522b\u603b\u7ed3\u5982\u4e0b\uff1a</p> <ul> <li>\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u800c\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002</li> <li>\u8fdb\u7a0b\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u800c\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002</li> <li>\u8fdb\u7a0b\u5207\u6362\u5f00\u9500\u5927\uff0c\u7ebf\u7a0b\u5207\u6362\u5f00\u9500\u5c0f\u3002</li> <li>\u8fdb\u7a0b\u901a\u4fe1\u9700\u8981\u8f83\u9ad8\u7684\u5f00\u9500\uff0c\u800c\u7ebf\u7a0b\u901a\u4fe1\u76f8\u5bf9\u7b80\u5355\u3002</li> </ul> <p>\u4f46\u662f\u5728CPython\u89e3\u91ca\u5668\u4e2d\u7531\u4e8eGIL\u7684\u5b58\u5728\uff0cPython\u65e0\u6cd5\u5b9e\u73b0\u5e76\u884c\u7684\u591a\u7ebf\u7a0b\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c Python \u5b57\u8282\u7801\uff0c\u5373\u5e76\u53d1\u7684\u591a\u7ebf\u7a0b\u3002</p> <p>\u6211\u4eec\u4ee5<code>Concurrent.future</code>\u4e2d\u7684<code>ProcessPoolExecutor</code>\u548c<code>ThreadPoolExecutor</code>\u6765\u89c2\u5bdf\u8fdb\u7a0b\u6c60\u548c\u7ebf\u7a0b\u6c60\u662f\u5982\u4f55\u7ba1\u7406\u548c\u6267\u884c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u3002</p>"},{"location":"writing/2024/03/09/python-async/#processpoolexecutor","title":"ProcessPoolExecutor","text":"<p>\u5bf9\u4e8e<code>ProcessPoolExecutor</code>\u6765\u8bf4\uff0c\u5b83\u80fd\u591f\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u8fdb\u7a0b\u800c\u4e0d\u662f\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002\u5728Python\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684Python\u89e3\u91ca\u5668\u548c\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e0d\u53d7\u5168\u5c40\u89e3\u91ca\u9501\uff08GIL\uff09\u7684\u9650\u5236\uff0c\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u6267\u884cPython\u5b57\u8282\u7801\uff0c\u4ece\u800c\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u5904\u7406\u3002</p> <p>\u8fdb\u7a0b\u6c60\u7684\u521b\u5efa\uff1a</p> <pre><code>class ProcessPoolExecutor(_base.Executor):\n    def __init__(self, max_workers=None):\n        ...\n        if max_workers is None:\n            self._max_workers = os.cpu_count() or 1  # \u9ed8\u8ba4\u4f7f\u7528CPU\u6838\u5fc3\u6570\n        else:\n            if max_workers &lt;= 0:\n                raise ValueError(\"max_workers must be greater than 0\")\n            self._max_workers = max_workers\n        ...\n        self._processes = set()  # \u5b58\u653e\u8fdb\u7a0b\u7684\u96c6\u5408\n</code></pre> <p>\u5728\u521d\u59cb\u5316\u65f6\uff0c<code>ProcessPoolExecutor</code>\u4f1a\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684\u8fdb\u7a0b\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u653e\u5728\u8fdb\u7a0b\u6c60\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fdb\u7a0b\u6c60\u4f1a\u4f7f\u7528\u7cfb\u7edf\u4e2d\u7684CPU\u6838\u5fc3\u6570\u4f5c\u4e3a\u6700\u5927\u5de5\u4f5c\u8fdb\u7a0b\u6570\u3002</p> <p>\u4efb\u52a1\u5206\u914d\u548c\u6267\u884c\uff1a</p> <pre><code>class ProcessPoolExecutor(_base.Executor):\n    ...\n    def submit(self, fn, *args, **kwargs):\n        ...\n        with self._shutdown_lock:\n            if self._shutdown:\n                raise RuntimeError('cannot schedule new futures after shutdown')\n            f = _base.Future()\n            self._pending_work_items.put((f, fn, args, kwargs))  # \u5c06\u4efb\u52a1\u653e\u5165\u5f85\u5904\u7406\u961f\u5217\n            self._adjust_process_count()  # \u8c03\u6574\u8fdb\u7a0b\u6570\u91cf\n        return f\n</code></pre> <p>\u4efb\u52a1\u63d0\u4ea4\u5230<code>ProcessPoolExecutor</code>\u65f6\uff0c\u4f1a\u88ab\u653e\u5165\u5f85\u5904\u7406\u961f\u5217<code>_pending_work_items</code>\u4e2d\u3002\u7136\u540e\uff0c<code>_adjust_process_count</code>\u65b9\u6cd5\u4f1a\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u8c03\u6574\u8fdb\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u6709\u8db3\u591f\u7684\u8fdb\u7a0b\u6765\u5904\u7406\u4efb\u52a1\u3002</p> <p>\u8fdb\u7a0b\u6c60\u7684\u7ba1\u7406\uff1a</p> <pre><code>class ProcessPoolExecutor(_base.Executor):\n    ...\n    def _adjust_process_count(self):\n        ...\n        while len(self._processes) &lt; self._max_workers:  # \u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u6570\u5c0f\u4e8e\u6700\u5927\u8fdb\u7a0b\u6570\n            p = self._context.Process(target=_process_worker, args=(self._call_queue, result_queue))  # \u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\n            self._processes.add(p)  # \u5c06\u65b0\u8fdb\u7a0b\u52a0\u5165\u8fdb\u7a0b\u96c6\u5408\n            p.start()  # \u542f\u52a8\u65b0\u8fdb\u7a0b\n</code></pre> <p><code>_adjust_process_count</code>\u65b9\u6cd5\u4f1a\u6839\u636e\u5f53\u524d\u5f85\u5904\u7406\u4efb\u52a1\u7684\u6570\u91cf\u548c\u6700\u5927\u5de5\u4f5c\u8fdb\u7a0b\u6570\u6765\u8c03\u6574\u8fdb\u7a0b\u7684\u6570\u91cf\u3002\u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u6570\u5c0f\u4e8e\u6700\u5927\u8fdb\u7a0b\u6570\uff0c\u5219\u4f1a\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u5e76\u52a0\u5165\u8fdb\u7a0b\u6c60\u4e2d\u3002</p> <p>\u901a\u8fc7\u4e0a\u8ff0\u673a\u5236\uff0c<code>ProcessPoolExecutor</code>\u80fd\u591f\u5229\u7528\u591a\u4e2a\u8fdb\u7a0b\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u5904\u7406\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u72ec\u7acb\u6267\u884c\u4efb\u52a1\uff0c\u4e0d\u53d7\u5168\u5c40\u89e3\u91ca\u9501\u7684\u9650\u5236\uff0c\u56e0\u6b64\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u540c\u65f6\u6267\u884c\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u5904\u7406\u3002</p> <p>\u4efb\u52a1\u63d0\u4ea4\uff1a</p> <pre><code>class ProcessPoolExecutor(_base.Executor):\n    ...\n    def submit(self, fn, *args, **kwargs):\n        ...\n        f = _base.Future()\n        self._pending_work_items.put((f, fn, args, kwargs))  # \u5c06\u4efb\u52a1\u653e\u5165\u5f85\u5904\u7406\u961f\u5217\n        self._adjust_process_count()  # \u8c03\u6574\u8fdb\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u6709\u8db3\u591f\u7684\u8fdb\u7a0b\u6765\u5904\u7406\u4efb\u52a1\n        return f\n</code></pre> <p>\u4efb\u52a1\u901a\u8fc7<code>submit</code>\u65b9\u6cd5\u63d0\u4ea4\u5230\u8fdb\u7a0b\u6c60\u4e2d\uff0c\u5b83\u5c06\u4efb\u52a1\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u7136\u540e\u653e\u5165\u5f85\u5904\u7406\u961f\u5217<code>_pending_work_items</code>\u4e2d\u3002\u540c\u65f6\uff0c<code>_adjust_process_count</code>\u65b9\u6cd5\u4f1a\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u8c03\u6574\u8fdb\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u6709\u8db3\u591f\u7684\u8fdb\u7a0b\u6765\u5904\u7406\u4efb\u52a1\u3002</p> <p>\u8fdb\u7a0b\u8c03\u5ea6\u548c\u6267\u884c\uff1a</p> <pre><code>class ProcessPoolExecutor(_base.Executor):\n    ...\n    def _adjust_process_count(self):\n        ...\n        while len(self._processes) &lt; self._max_workers:  # \u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u6570\u5c0f\u4e8e\u6700\u5927\u8fdb\u7a0b\u6570\n            p = self._context.Process(target=_process_worker, args=(self._call_queue, result_queue))  # \u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\n            self._processes.add(p)  # \u5c06\u65b0\u8fdb\u7a0b\u52a0\u5165\u8fdb\u7a0b\u96c6\u5408\n            p.start()  # \u542f\u52a8\u65b0\u8fdb\u7a0b\n</code></pre> <p>\u5728<code>_adjust_process_count</code>\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u6839\u636e\u5f53\u524d\u5f85\u5904\u7406\u4efb\u52a1\u7684\u6570\u91cf\u548c\u6700\u5927\u5de5\u4f5c\u8fdb\u7a0b\u6570\u6765\u8c03\u6574\u8fdb\u7a0b\u7684\u6570\u91cf\u3002\u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u6570\u5c0f\u4e8e\u6700\u5927\u8fdb\u7a0b\u6570\uff0c\u5219\u4f1a\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u5e76\u52a0\u5165\u8fdb\u7a0b\u6c60\u4e2d\uff0c\u5e76\u542f\u52a8\u8fd9\u4e9b\u65b0\u7684\u8fdb\u7a0b\u3002</p> <p>\u4efb\u52a1\u6267\u884c\uff1a</p> <pre><code>def _process_worker(call_queue, result_queue):\n    while True:\n        try:\n            future, fn, args, kwargs = call_queue.get(block=True)  # \u4ece\u4efb\u52a1\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\n        except queue.Empty:  # \u5982\u679c\u961f\u5217\u4e3a\u7a7a\n            break  # \u9000\u51fa\u5faa\u73af\n        try:\n            result = fn(*args, **kwargs)  # \u6267\u884c\u4efb\u52a1\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\n        except BaseException as exc:\n            result_queue.put((future, exc))  # \u4efb\u52a1\u6267\u884c\u51fa\u73b0\u5f02\u5e38\uff0c\u5c06\u5f02\u5e38\u4fe1\u606f\u653e\u5165\u7ed3\u679c\u961f\u5217\n        else:\n            result_queue.put((future, result))  # \u5c06\u4efb\u52a1\u7684\u7ed3\u679c\u653e\u5165\u7ed3\u679c\u961f\u5217\n</code></pre> <p>\u5728\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u4e2d\uff0c\u4f1a\u5faa\u73af\u5730\u4ece\u4efb\u52a1\u961f\u5217<code>call_queue</code>\u4e2d\u83b7\u53d6\u4efb\u52a1\u5e76\u6267\u884c\u3002\u5982\u679c\u4efb\u52a1\u6267\u884c\u6210\u529f\uff0c\u5219\u5c06\u4efb\u52a1\u7684\u7ed3\u679c\u653e\u5165\u7ed3\u679c\u961f\u5217<code>result_queue</code>\u4e2d\uff1b\u5982\u679c\u4efb\u52a1\u6267\u884c\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u5c06\u5f02\u5e38\u4fe1\u606f\u653e\u5165\u7ed3\u679c\u961f\u5217\u3002\u8fd9\u6837\uff0c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u5e76\u884c\u5730\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u3002</p> <p>\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\u5faa\u73af\u80fd\u591f\u5b9e\u73b0\u5e76\u884c\u5904\u7406\uff1a</p> <ol> <li>\u591a\u8fdb\u7a0b\u5e76\u884c\uff1a\u867d\u7136\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u5185\u90e8\u7684\u5faa\u73af\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u5b58\u5728\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u8fd9\u4e9b\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\uff0c\u5e76\u4e14\u5404\u81ea\u72ec\u7acb\u5730\u5904\u7406\u4efb\u52a1\u3002\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u5e76\u884c\u5730\u4ece\u4efb\u52a1\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\u5e76\u6267\u884c\uff0c\u800c\u4e0d\u4f1a\u53d7\u5230\u5176\u4ed6\u8fdb\u7a0b\u7684\u5f71\u54cd\u3002</li> <li>\u4efb\u52a1\u8c03\u5ea6\uff1a\u4efb\u52a1\u961f\u5217<code>call_queue</code>\u4e2d\u5b58\u653e\u7740\u5f85\u6267\u884c\u7684\u4efb\u52a1\uff0c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u961f\u5217\u4e2d\u5e76\u53d1\u5730\u83b7\u53d6\u4efb\u52a1\u3002\u5f53\u6709\u4efb\u52a1\u53ef\u7528\u65f6\uff0c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u7ade\u4e89\u83b7\u53d6\u4efb\u52a1\u5e76\u6267\u884c\uff0c\u4ece\u800c\u5b9e\u73b0\u4efb\u52a1\u7684\u5e76\u884c\u5904\u7406\u3002</li> <li>\u7ed3\u679c\u6536\u96c6\uff1a\u5de5\u4f5c\u8fdb\u7a0b\u6267\u884c\u5b8c\u4efb\u52a1\u540e\uff0c\u4f1a\u5c06\u6267\u884c\u7ed3\u679c\u653e\u5165\u7ed3\u679c\u961f\u5217<code>result_queue</code>\u4e2d\u3002\u4e3b\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u7ed3\u679c\u961f\u5217\u4e2d\u83b7\u53d6\u5404\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u6267\u884c\u4efb\u52a1\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u5b9e\u73b0\u7ed3\u679c\u7684\u6536\u96c6\u3002\u8fd9\u79cd\u65b9\u5f0f\u4fdd\u8bc1\u4e86\u5728\u5e76\u884c\u5904\u7406\u7684\u540c\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u5730\u6536\u96c6\u548c\u5904\u7406\u4efb\u52a1\u7684\u7ed3\u679c\u3002</li> </ol> <p>\u7ed3\u679c\u83b7\u53d6\uff1a</p> <pre><code>class _base.Future:\n    ...\n    def result(self, timeout=None):\n        ...\n        if self._state == _FINISHED:\n            return self._result  # \u8fd4\u56de\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\n        ...\n</code></pre> <p>\u901a\u8fc7<code>Future.result</code>\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u3002\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\uff1b\u5982\u679c\u4efb\u52a1\u8fd8\u672a\u6267\u884c\u5b8c\u6bd5\uff0c\u5219\u6839\u636e\u9700\u8981\u7b49\u5f85\u4e00\u5b9a\u65f6\u95f4\u76f4\u81f3\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u3002</p>"},{"location":"writing/2024/03/09/python-async/#threadpoolexecutor","title":"ThreadPoolExecutor","text":"<p>\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u7ef4\u62a4\uff1a</p> <pre><code>class ThreadPoolExecutor(_base.Executor):\n    def __init__(self, max_workers=None, thread_name_prefix=''):\n        ...\n        if max_workers is None:\n            self._max_workers = min(32, (os.cpu_count() or 1) + 4)\n        else:\n            if max_workers &lt;= 0:\n                raise ValueError(\"max_workers must be greater than 0\")\n            self._max_workers = max_workers\n        ...\n        self._work_queue = queue.SimpleQueue()  # \u4efb\u52a1\u961f\u5217\n        self._threads = set()  # \u5b58\u653e\u7ebf\u7a0b\u7684\u96c6\u5408\n        self._thread_name_prefix = thread_name_prefix\n        self._shutdown = False\n</code></pre> <p>\u5728\u521d\u59cb\u5316<code>ThreadPoolExecutor</code>\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u961f\u5217<code>_work_queue</code>\uff0c\u7528\u4e8e\u5b58\u653e\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u3002\u540c\u65f6\uff0c\u5b83\u8fd8\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u7a0b\u96c6\u5408<code>_threads</code>\uff0c\u7528\u4e8e\u5b58\u653e\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u3002<code>_max_workers</code>\u8868\u793a\u7ebf\u7a0b\u6c60\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u7ebf\u7a0b\u6570\u3002</p> <p>\u4efb\u52a1\u961f\u5217\u7ba1\u7406\uff1a</p> <pre><code>class ThreadPoolExecutor(_base.Executor):\n    ...\n    def submit(self, fn, *args, **kwargs):\n        ...\n        with self._shutdown_lock:\n            if self._shutdown:\n                raise RuntimeError('cannot schedule new futures after shutdown')\n            f = _base.Future()\n            w = _WorkItem(f, fn, args, kwargs)  # \u5c01\u88c5\u4efb\u52a1\n            self._work_queue.put(w)  # \u5c06\u4efb\u52a1\u653e\u5165\u961f\u5217\n            self._adjust_thread_count()  # \u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\n        return f\n</code></pre> <p>\u5728<code>submit</code>\u65b9\u6cd5\u4e2d\uff0c\u5f53\u6709\u4efb\u52a1\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u65f6\uff0c\u5b83\u4f1a\u5c01\u88c5\u4efb\u52a1\u4e3a<code>_WorkItem</code>\u5bf9\u8c61\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u653e\u5165\u4efb\u52a1\u961f\u5217<code>_work_queue</code>\u4e2d\u3002\u540c\u65f6\uff0c\u5b83\u4f1a\u8c03\u7528<code>_adjust_thread_count</code>\u65b9\u6cd5\u6765\u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u7ebf\u7a0b\u6c60\u4e2d\u6709\u8db3\u591f\u7684\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002</p> <p>\u7ebf\u7a0b\u6c60\u7684\u72b6\u6001\u7ba1\u7406\uff1a</p> <pre><code>class ThreadPoolExecutor(_base.Executor):\n    ...\n    def _adjust_thread_count(self):\n        # \u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\n        if len(self._threads) &lt; self._max_workers:\n            t = threading.Thread(target=self._worker, name=self._thread_name_prefix + str(len(self._threads)))\n            t.daemon = True\n            t.start()\n            self._threads.add(t)\n</code></pre> <p><code>_adjust_thread_count</code>\u65b9\u6cd5\u7528\u4e8e\u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\uff0c\u5f53\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u5c11\u4e8e\u6700\u5927\u7ebf\u7a0b\u6570\u65f6\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u5e76\u6dfb\u52a0\u5230\u7ebf\u7a0b\u6c60\u4e2d\u3002</p> <p>\u4efb\u52a1\u63d0\u4ea4\uff1a</p> <pre><code>class ThreadPoolExecutor(_base.Executor):\n    ...\n    def submit(self, fn, *args, **kwargs):\n        ...\n        f = _base.Future()\n        w = _WorkItem(f, fn, args, kwargs)  # \u5c01\u88c5\u4efb\u52a1\u4e3a_WorkItem\u5bf9\u8c61\n        self._work_queue.put(w)  # \u5c06\u4efb\u52a1\u653e\u5165\u4efb\u52a1\u961f\u5217\n        self._adjust_thread_count()  # \u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u6709\u8db3\u591f\u7684\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\n        return f\n</code></pre> <p>\u4efb\u52a1\u901a\u8fc7<code>submit</code>\u65b9\u6cd5\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\uff0c\u9996\u5148\u5c01\u88c5\u4efb\u52a1\u4e3a<code>_WorkItem</code>\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u8be5\u5bf9\u8c61\u653e\u5165\u4efb\u52a1\u961f\u5217<code>_work_queue</code>\u4e2d\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u4f1a\u8c03\u7528<code>_adjust_thread_count</code>\u65b9\u6cd5\u6765\u52a8\u6001\u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\uff0c\u786e\u4fdd\u6709\u8db3\u591f\u7684\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002</p> <p>\u4efb\u52a1\u6267\u884c\uff1a</p> <pre><code>class ThreadPoolExecutor(_base.Executor):\n    ...\n    def _worker(self):\n        ...\n        try:\n            while True:\n                try:\n                    work_item = self._work_queue.get(block=False)  # \u4ece\u4efb\u52a1\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\n                except queue.Empty:\n                    break\n                ...\n        finally:\n            self._threads.discard(threading.current_thread())  # \u4ece\u7ebf\u7a0b\u96c6\u5408\u4e2d\u79fb\u9664\u5f53\u524d\u7ebf\u7a0b\n</code></pre> <p>\u5728**<code>_worker</code>\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a<code>while True</code>**\u7684\u5faa\u73af\u6765\u4fdd\u6301\u7ebf\u7a0b\u7684\u6267\u884c\u3002\u5728\u5faa\u73af\u5185\u90e8\uff0c\u7ebf\u7a0b\u4f1a\u5c1d\u8bd5\u4ece\u4efb\u52a1\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\u6267\u884c\uff0c\u5982\u679c\u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u9000\u51fa\u5faa\u73af\u5e76\u7ed3\u675f\u7ebf\u7a0b\u7684\u6267\u884c\u3002\u8fd9\u6837\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u4e0d\u65ad\u5730\u4ece\u4efb\u52a1\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\u5e76\u6267\u884c\uff0c\u76f4\u5230\u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\u6216\u8005\u7ebf\u7a0b\u6c60\u88ab\u5173\u95ed\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u5faa\u73af\uff0c\u7ebf\u7a0b\u6c60\u80fd\u591f\u4fdd\u6301\u7ebf\u7a0b\u7684\u6301\u7eed\u6267\u884c\uff0c\u5b9e\u73b0\u4efb\u52a1\u7684\u5e76\u53d1\u5904\u7406\u3002\u5f53\u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u65b0\u7684\u4efb\u52a1\u88ab\u63d0\u4ea4\u5230\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u800c\u4e0d\u662f\u65e0\u6548\u5730\u7b49\u5f85\u6216\u8005\u5360\u7528\u8d44\u6e90\u3002\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u5730\u5229\u7528\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8d44\u6e90\uff0c\u63d0\u9ad8\u4efb\u52a1\u7684\u6267\u884c\u6548\u7387\u3002</p> <p>\u4efb\u52a1\u5b8c\u6210\uff1a</p> <pre><code>class _WorkItem:\n    ...\n    def run(self):\n        ...\n        try:\n            result = self.fn(*self.args, **self.kwargs)  # \u6267\u884c\u4efb\u52a1\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\n        except BaseException as exc:\n            self.future.set_exception(exc)  # \u4efb\u52a1\u6267\u884c\u51fa\u73b0\u5f02\u5e38\uff0c\u8bbe\u7f6eFuture\u7684\u5f02\u5e38\u72b6\u6001\n        else:\n            self.future.set_result(result)  # \u4efb\u52a1\u6267\u884c\u6210\u529f\uff0c\u8bbe\u7f6eFuture\u7684\u7ed3\u679c\u72b6\u6001\n</code></pre> <p>\u4efb\u52a1\u5728\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f1a\u8c03\u7528<code>run</code>\u65b9\u6cd5\u6765\u6267\u884c\u4efb\u52a1\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\uff08\u51fd\u6570\uff09\u3002\u5982\u679c\u4efb\u52a1\u6267\u884c\u6210\u529f\uff0c\u5219\u901a\u8fc7<code>Future.set_result</code>\u65b9\u6cd5\u8bbe\u7f6e\u4efb\u52a1\u7684\u7ed3\u679c\u72b6\u6001\uff1b\u5982\u679c\u4efb\u52a1\u6267\u884c\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u901a\u8fc7<code>Future.set_exception</code>\u65b9\u6cd5\u8bbe\u7f6e\u4efb\u52a1\u7684\u5f02\u5e38\u72b6\u6001\u3002</p> <p>\u7ed3\u679c\u83b7\u53d6\uff1a</p> <pre><code>class _base.Future:\n    ...\n    def result(self, timeout=None):\n        ...\n        if self._state == _FINISHED:\n            return self._result  # \u8fd4\u56de\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\n        ...\n</code></pre> <p>\u901a\u8fc7<code>Future.result</code>\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u3002\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\uff1b\u5982\u679c\u4efb\u52a1\u8fd8\u672a\u6267\u884c\u5b8c\u6bd5\uff0c\u5219\u6839\u636e\u9700\u8981\u7b49\u5f85\u4e00\u5b9a\u65f6\u95f4\u76f4\u81f3\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u3002</p> <p>\u4ee5\u4e0a\u662f<code>ThreadPoolExecutor</code>\u6267\u884c\u8fc7\u7a0b\u7684\u5173\u952e\u6b65\u9aa4\uff0c\u901a\u8fc7\u8fd9\u4e9b\u673a\u5236\uff0c\u7ebf\u7a0b\u6c60\u80fd\u591f\u9ad8\u6548\u5730\u7ba1\u7406\u7ebf\u7a0b\u8d44\u6e90\uff0c\u5e76\u6267\u884c\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u3002</p>"},{"location":"writing/2024/03/09/python-async/#async-io","title":"Async IO","text":"<p>\u4e8b\u4ef6\u5faa\u73af\uff08Event Loop\uff09\uff1a</p> <ul> <li><code>asyncio</code> \u57fa\u4e8e\u4e8b\u4ef6\u5faa\u73af\u6a21\u578b\uff0c\u4e3b\u8981\u7684\u63a7\u5236\u6d41\u7a0b\u662f\u7531\u4e8b\u4ef6\u5faa\u73af\u6765\u7ba1\u7406\u7684\u3002</li> <li>\u4e8b\u4ef6\u5faa\u73af\u8d1f\u8d23\u76d1\u63a7\u5f02\u6b65\u4efb\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u5728\u4efb\u52a1\u5c31\u7eea\u65f6\u6267\u884c\u5b83\u4eec\u3002</li> <li>\u4e8b\u4ef6\u5faa\u73af\u4f1a\u6301\u7eed\u8fd0\u884c\uff0c\u76f4\u5230\u6240\u6709\u7684\u4efb\u52a1\u90fd\u5b8c\u6210\u3002</li> </ul> <p>\u534f\u7a0b\uff08Coroutines\uff09\uff1a</p> <ul> <li><code>asyncio</code> \u4f7f\u7528\u534f\u7a0b\u6765\u5b9e\u73b0\u5f02\u6b65\u7f16\u7a0b\u3002</li> <li>\u534f\u7a0b\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528 <code>async</code> \u5173\u952e\u5b57\u5b9a\u4e49\u3002</li> <li>\u5728\u534f\u7a0b\u4e2d\u53ef\u4ee5\u4f7f\u7528 <code>await</code> \u5173\u952e\u5b57\u6765\u6302\u8d77\u6267\u884c\uff0c\u7b49\u5f85\u5f02\u6b65\u64cd\u4f5c\u5b8c\u6210\u3002</li> </ul> <p>\u5f02\u6b65 I/O \u64cd\u4f5c\uff1a</p> <ul> <li><code>asyncio</code> \u652f\u6301\u5f02\u6b65 I/O \u64cd\u4f5c\uff0c\u5305\u62ec\u6587\u4ef6 I/O\u3001\u7f51\u7edc I/O\u3001\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6c60\u7684\u8c03\u5ea6\u7b49\u3002</li> <li>\u4f7f\u7528\u5f02\u6b65 I/O \u53ef\u4ee5\u5728\u7b49\u5f85 I/O \u64cd\u4f5c\u5b8c\u6210\u65f6\u6302\u8d77\u5f53\u524d\u534f\u7a0b\u7684\u6267\u884c\uff0c\u4ee5\u5145\u5206\u5229\u7528\u7cfb\u7edf\u8d44\u6e90\u3002</li> </ul> <p>\u4efb\u52a1\u548c\u534f\u7a0b\u7684\u8c03\u5ea6\uff1a</p> <ul> <li><code>asyncio</code> \u63d0\u4f9b\u4e86 <code>asyncio.create_task()</code> \u51fd\u6570\u6765\u521b\u5efa\u534f\u7a0b\u4efb\u52a1\uff08task\uff09\uff0c\u5e76\u5c06\u5b83\u4eec\u63d0\u4ea4\u7ed9\u4e8b\u4ef6\u5faa\u73af\u8fdb\u884c\u8c03\u5ea6\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f8\u4e92\u7b49\u5f85\u3001\u7ec4\u5408\u548c\u53d6\u6d88\u3002</li> </ul> <p>\u5e76\u53d1\u7f16\u7a0b\uff1a</p> <ul> <li><code>asyncio</code> \u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\u4efb\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u3002</li> <li>\u5b83\u5728\u5904\u7406\u7f51\u7edc\u7f16\u7a0b\u3001\u9ad8\u5e76\u53d1\u670d\u52a1\u5668\u3001\u5f02\u6b65 I/O \u64cd\u4f5c\u7b49\u65b9\u9762\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</li> </ul> <p>\u5f02\u5e38\u5904\u7406\uff1a</p> <ul> <li><code>asyncio</code> \u63d0\u4f9b\u4e86\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u53ef\u4ee5\u6355\u83b7\u548c\u5904\u7406\u5f02\u6b65\u64cd\u4f5c\u4e2d\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u3002</li> <li>\u5f02\u5e38\u5904\u7406\u901a\u5e38\u57fa\u4e8e\u534f\u7a0b\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u63a7\u5236\u5f02\u5e38\u7684\u4f20\u64ad\u3002</li> </ul>"},{"location":"writing/2024/03/09/python-async/#event-loop","title":"Event loop","text":"<p>\u5f53\u6d89\u53ca\u5230\u534f\u7a0b\u8c03\u5ea6\u65f6\uff0cuvloop \u4e3b\u8981\u4f9d\u8d56\u4e8e libuv \u5e93\u63d0\u4f9b\u7684\u4e8b\u4ef6\u5faa\u73af\u673a\u5236\u3002libuv \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f02\u6b65 I/O \u5e93\uff0c\u7528\u4e8e\u5904\u7406\u4e8b\u4ef6\u5faa\u73af\u3001\u5957\u63a5\u5b57\u64cd\u4f5c\u548c\u5176\u4ed6\u5e95\u5c42\u64cd\u4f5c\u3002uvloop \u4f7f\u7528 libuv \u63d0\u4f9b\u7684\u4e8b\u4ef6\u5faa\u73af\u6765\u7ba1\u7406\u548c\u8c03\u5ea6\u534f\u7a0b\u3002</p> <p>\u4e8b\u4ef6\u5faa\u73af\u521d\u59cb\u5316\uff1a uvloop \u5728\u542f\u52a8\u65f6\u4f1a\u521d\u59cb\u5316 libuv \u7684\u4e8b\u4ef6\u5faa\u73af\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u901a\u5e38\u5728 uvloop \u7684 <code>_init_once()</code> \u51fd\u6570\u4e2d\u5b8c\u6210\u3002\u5728\u521d\u59cb\u5316\u671f\u95f4\uff0cuvloop \u521b\u5efa\u4e86\u4e00\u4e2a libuv \u7684\u4e8b\u4ef6\u5faa\u73af\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af\u3002</p> <pre><code>def _init_once():\n    uv_loop = ffi.new(\"uv_loop_t*\")\n    uv.uv_loop_init(uv_loop)\n    handle = ffi.new(\"uv_handle_t*\")\n    uv.uv_unref(ffi.cast(\"uv_handle_t*\", handle))\n    handle[0] = uv_loop\n    uv.uv_default_loop.argtypes = [ffi.TYPE_PTR]\n    uv.uv_default_loop(handle)\n</code></pre> <p>\u4e8b\u4ef6\u5faa\u73af\u8fd0\u884c\uff1a \u4e00\u65e6\u4e8b\u4ef6\u5faa\u73af\u521d\u59cb\u5316\u5b8c\u6210\uff0cuvloop \u5f00\u59cb\u8fd0\u884c\u4e8b\u4ef6\u5faa\u73af\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u901a\u5e38\u5728 <code>_run()</code> \u51fd\u6570\u4e2d\u5b8c\u6210\u3002\u5728\u4e8b\u4ef6\u5faa\u73af\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cuvloop \u4f1a\u6301\u7eed\u5730\u76d1\u542c\u4e8b\u4ef6\uff0c\u5e76\u6839\u636e\u4e8b\u4ef6\u7c7b\u578b\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <pre><code>def _run():\n    while True:\n        uv.uv_run(uv.uv_default_loop(), UV_RUN_ONCE)\n        _process_done_callbacks()\n        _process_deferred_callbacks()\n</code></pre> <p>\u534f\u7a0b\u72b6\u6001\u7ba1\u7406\uff1a uvloop \u8ddf\u8e2a\u6bcf\u4e2a\u534f\u7a0b\u7684\u72b6\u6001\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u5ea6\u548c\u5904\u7406\u3002\u534f\u7a0b\u7684\u72b6\u6001\u53ef\u4ee5\u662f\u6302\u8d77\uff08pending\uff09\u3001\u8fd0\u884c\u4e2d\uff08running\uff09\u3001\u5df2\u5b8c\u6210\uff08finished\uff09\u7b49\u3002uvloop \u4f7f\u7528 libuv \u63d0\u4f9b\u7684\u4e8b\u4ef6\u5faa\u73af\u673a\u5236\u6765\u68c0\u67e5\u6bcf\u4e2a\u534f\u7a0b\u7684\u72b6\u6001\uff0c\u5e76\u6839\u636e\u9700\u8981\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <pre><code>class Future:\n    def __init__(self, loop=None):\n        self._state = PENDING\n        self._callbacks = []\n\n    def set_result(self, result):\n        self._result = result\n        self._state = FINISHED\n        self._call_callbacks()\n\n    def add_done_callback(self, fn):\n        if self._state != PENDING:\n            fn(self)\n        else:\n            self._callbacks.append(fn)\n</code></pre> <p>\u534f\u7a0b\u8c03\u5ea6\uff1a uvloop \u4f7f\u7528 libuv \u5e93\u4e2d\u7684\u4e8b\u4ef6\u5faa\u73af\u673a\u5236\u6765\u8c03\u5ea6\u534f\u7a0b\u3002\u8fd9\u5305\u62ec\u901a\u8fc7\u6ce8\u518c\u4e8b\u4ef6\u5904\u7406\u5668\u6765\u7b49\u5f85\u7279\u5b9a\u7684 I/O \u4e8b\u4ef6\uff0c\u7136\u540e\u5c06\u63a7\u5236\u6743\u4f20\u9012\u7ed9\u76f8\u5e94\u7684\u534f\u7a0b\u3002</p> <pre><code>def _run():\n    while True:\n        # \u8c03\u7528 libuv \u7684\u4e8b\u4ef6\u5faa\u73af\u51fd\u6570\n        uv.uv_run(uv.uv_default_loop(), UV_RUN_ONCE)\n\n        # \u5904\u7406\u5df2\u5b8c\u6210\u7684\u534f\u7a0b\u4efb\u52a1\n        _process_done_callbacks()\n\n        # \u5904\u7406\u5ef6\u8fdf\u6267\u884c\u7684\u56de\u8c03\u4efb\u52a1\n        _process_deferred_callbacks()\n</code></pre> <p>\u4e8b\u4ef6\u5904\u7406\uff1a \u5728\u4e8b\u4ef6\u5faa\u73af\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cuvloop \u4f1a\u76d1\u542c\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u4ef6\uff0c\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5f53\u67d0\u4e2a\u5957\u63a5\u5b57\u53ef\u8bfb\u6216\u53ef\u5199\u65f6\uff0cuvloop \u4f1a\u8c03\u7528\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u8fd9\u4e9b\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u901a\u5e38\u4f1a\u89e6\u53d1\u5bf9\u5e94\u534f\u7a0b\u7684\u6267\u884c\u3002</p> <pre><code>def _on_readable(handle, events, error):\n    # \u5904\u7406\u5957\u63a5\u5b57\u53ef\u8bfb\u4e8b\u4ef6\n    ...\n\ndef _on_writable(handle, events, error):\n    # \u5904\u7406\u5957\u63a5\u5b57\u53ef\u5199\u4e8b\u4ef6\n    ...\n</code></pre> <p>What is more crucial is understanding a bit beneath the surface about the mechanics of the event loop. Here are a few points worth stressing about the event loop:</p> <p>#1: Coroutines don\u2019t do much on their own until they are tied to the event loop.</p> <p>You saw this point before in the explanation on generators, but it\u2019s worth restating. If you have a main coroutine that awaits others, simply calling it in isolation has little effect:</p> <pre><code>import asyncio\n\nasync def main():\n    print(\"Hello ...\")\n    await asyncio.sleep(1)\n    print(\"World!\")\n\nroutine = main()\nroutine\n&lt;coroutine object main at 0x1027a6150&gt;\n</code></pre> <p>Remember to use <code>asyncio.run()</code> to actually force execution by scheduling the <code>main()</code> coroutine (future object) for execution on the event loop:</p> <pre><code>asyncio.run(routine)\nHello ...\nWorld!\n</code></pre> <p>(Other coroutines can be executed with <code>await</code>. It is typical to wrap just <code>main()</code> in <code>asyncio.run()</code>, and chained coroutines with <code>await</code> will be called from there.)</p> <p>#2: By default, an async IO event loop runs in a single thread and on a single CPU core.</p> <p>Usually, running one single-threaded event loop in one CPU core is more than sufficient. It is also possible to run event loops across multiple cores. Check out this talk by John Reese for more, and be warned that your laptop may spontaneously combust.</p> <p>#3: Event loops are pluggable.</p> <p>That is, you could, if you really wanted, write your own event loop implementation and have it run tasks just the same. This is wonderfully demonstrated in the uvloop package, which is an implementation of the event loop in Cython.</p> <p>That is what is meant by the term \u201cpluggable event loop\u201d: you can use any working implementation of an event loop, unrelated to the structure of the coroutines themselves. The asyncio package itself ships with two different event loop implementations, with the default being based on the selectors module. (The second implementation is built for Windows only.) </p> <p>Example</p> <p>\u5f53\u6d89\u53ca\u5230\u591a\u4e2a\u8fde\u63a5\u7684\u60c5\u51b5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u5e76\u89c2\u5bdf\u5f02\u6b65\u5904\u7406\u591a\u4e2a\u8fde\u63a5\u7684\u8fc7\u7a0b\u3002</p> <p>\u670d\u52a1\u5668\u7aef\u4ee3\u7801 <code>server.py</code>\uff1a</p> <pre><code>import asyncio\n\nasync def handle_client(reader, writer):\n    while True:\n        data = await reader.read(100)\n        if not data:\n            break\n        message = data.decode()\n        addr = writer.get_extra_info('peername')\n        print(f\"Received {message} from {addr}\")\n        writer.write(data)\n        await writer.drain()\n    writer.close()\n\nasync def main():\n    server = await asyncio.start_server(handle_client, '127.0.0.1', 8888)\n    addr = server.sockets[0].getsockname()\n    print(f'Serving on {addr}')\n    async with server:\n        await server.serve_forever()\n\nasyncio.run(main())\n</code></pre> <p>\u5ba2\u6237\u7aef\u4ee3\u7801 <code>client.py</code>\uff1a</p> <pre><code>import asyncio\n\nasync def send_message(reader, writer):\n    writer.write(b\"Hello from client!\\\\n\")\n    await writer.drain()\n    data = await reader.read(100)\n    print(f\"Received: {data.decode()}\")\n\nasync def main():\n    for i in range(5):  # \u521b\u5efa5\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\n        reader, writer = await asyncio.open_connection('127.0.0.1', 8888)\n        await send_message(reader, writer)\n        writer.close()\n        await writer.wait_closed()\n\nasyncio.run(main())\n</code></pre> <p>\u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684\u8f93\u51fa\uff1a</p> <p>\u5728\u670d\u52a1\u5668\u7aef <code>server.py</code> \u4e2d\u7684\u8f93\u51fa\uff1a</p> <pre><code>Serving on ('127.0.0.1', 8888)\nReceived Hello from client! from ('127.0.0.1', 54778)\nReceived Hello from client! from ('127.0.0.1', 54780)\nReceived Hello from client! from ('127.0.0.1', 54782)\nReceived Hello from client! from ('127.0.0.1', 54784)\nReceived Hello from client! from ('127.0.0.1', 54786)\n</code></pre> <p>\u5728\u5ba2\u6237\u7aef <code>client.py</code> \u4e2d\u7684\u8f93\u51fa\uff1a</p> <pre><code>Received: Hello from client!\nReceived: Hello from client!\nReceived: Hello from client!\nReceived: Hello from client!\nReceived: Hello from client!\n</code></pre> <p>\u4ece\u670d\u52a1\u5668\u7aef\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0c\u670d\u52a1\u5668\u6210\u529f\u63a5\u6536\u4e86\u6765\u81ea\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5e76\u5904\u7406\u4e86\u5b83\u4eec\u53d1\u9001\u7684\u6d88\u606f\u3002\u7531\u4e8e\u4f7f\u7528\u4e86\u5f02\u6b65 I/O \u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u8fde\u63a5\u800c\u4e0d\u4f1a\u963b\u585e\u3002\u5ba2\u6237\u7aef\u7684\u8f93\u51fa\u663e\u793a\u4e86\u5b83\u4eec\u6210\u529f\u53d1\u9001\u6d88\u606f\u7ed9\u670d\u52a1\u5668\uff0c\u5e76\u63a5\u6536\u5230\u4e86\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002</p>"},{"location":"writing/2024/03/09/python-async/#io","title":"IO\u5bc6\u96c6\u540c\u6b65\u5f02\u6b65\u56fe\u89e3","text":"IO\u5bc6\u96c6 \u540c\u6b65 IO\u5bc6\u96c6 \u591a\u8fdb\u7a0b IO\u5bc6\u96c6 \u591a\u7ebf\u7a0b IO\u5bc6\u96c6 AsyncIO\u7248\u672c"},{"location":"writing/2024/03/09/python-async/#summary","title":"Summary","text":"\u7279\u70b9 \u7ebf\u7a0b\u5e76\u884c \u8fdb\u7a0b\u5e76\u884c Asyncio \u6267\u884c\u6a21\u578b \u591a\u7ebf\u7a0b\u6a21\u578b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u4e00\u4e2a\u4efb\u52a1 \u591a\u8fdb\u7a0b\u6a21\u578b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e00\u4e2a\u4efb\u52a1 \u5355\u7ebf\u7a0b\u4e8b\u4ef6\u5faa\u73af\u6a21\u578b\uff0c\u901a\u8fc7\u5f02\u6b65\u6267\u884c\u4efb\u52a1 \u5e76\u884c\u6027 \u53d7\u5230\u5168\u5c40\u89e3\u91ca\u9501 (GIL) \u9650\u5236\uff0c\u65e0\u6cd5\u771f\u6b63\u5e76\u884c\u6267\u884cPython\u5b57\u8282\u7801 \u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u89e3\u91ca\u5668\u548c\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u771f\u6b63\u5e76\u884c\u6267\u884cPython\u5b57\u8282\u7801 \u5355\u7ebf\u7a0b\u6267\u884c\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5faa\u73af\u5b9e\u73b0\u4efb\u52a1\u7684\u5f02\u6b65\u6267\u884c \u8d44\u6e90\u6d88\u8017 \u8f83\u5c11\u7684\u5185\u5b58\u6d88\u8017\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u5185\u5b58\u7a7a\u95f4 \u8f83\u5927\u7684\u5185\u5b58\u6d88\u8017\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4 \u8f83\u5c11\u7684\u5185\u5b58\u6d88\u8017\uff0c\u5355\u7ebf\u7a0b\u6267\u884c\uff0c\u65e0\u9700\u521b\u5efa\u989d\u5916\u7684\u7ebf\u7a0b\u6216\u8fdb\u7a0b \u963b\u585e\u64cd\u4f5c \u963b\u585e\u64cd\u4f5c\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u7684\u6267\u884c \u963b\u585e\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\u7684\u6267\u884c \u975e\u963b\u585e\u64cd\u4f5c\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5faa\u73af\u7b49\u5f85 I/O \u4e8b\u4ef6\u7684\u5b8c\u6210 \u5f02\u5e38\u5904\u7406 \u4e00\u4e2a\u7ebf\u7a0b\u7684\u5f02\u5e38\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u7684\u6267\u884c \u4e00\u4e2a\u8fdb\u7a0b\u7684\u5f02\u5e38\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\u7684\u6267\u884c \u5f02\u5e38\u5904\u7406\u901a\u5e38\u57fa\u4e8e\u534f\u7a0b\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u63a7\u5236\u5f02\u5e38\u7684\u4f20\u64ad \u9002\u7528\u573a\u666f I/O\u5bc6\u96c6\u578b\u4efb\u52a1\u3001\u7f51\u7edc\u7f16\u7a0b\u7b49 CPU\u5bc6\u96c6\u578b\u4efb\u52a1\u3001I/O\u5bc6\u96c6\u578b\u4efb\u52a1\u3001\u5e76\u53d1\u7f16\u7a0b I/O\u5bc6\u96c6\u578b\u4efb\u52a1\u3001\u9ad8\u5e76\u53d1\u7684\u7f51\u7edc\u7f16\u7a0b\u7b49"},{"location":"writing/2024/03/09/python-async/#reference","title":"Reference","text":"<ol> <li>https://realpython.com/async-io-python/#async-io-design-patterns</li> <li>https://realpython.com/python-concurrency/</li> <li>https://stackoverflow.com/questions/49005651/how-does-asyncio-actually-work/51116910#51116910</li> <li>https://realpython.com/python-gil/</li> </ol>"},{"location":"writing/2024/08/01/query-understanding/","title":"Query understanding","text":"<p>Query understanding is a complicated issue. It involves not only processing the query itself but also the procedure for constructing data indexes and retrieval.</p> <p>So, I will follow these steps:</p> <ul> <li>Constructing data indexes</li> <li>Retrieval</li> <li>Query understanding</li> </ul>"},{"location":"writing/2024/08/01/query-understanding/#constructing-data-indexes","title":"Constructing data indexes","text":"<p>One major limitation is that the query we embed and the text we search for often don't have a direct match, leading to suboptimal results. A common method to improve this is to extract information from a document and use it to answer a question. We can also be creative in how we extract, summarize, and generate potential questions to improve our embeddings.</p> <p>For example, instead of using just a text chunk we could try to:</p> <ol> <li>extract key words and themes</li> <li>extract hypothetical questions</li> <li>generate a summary of the text</li> </ol> <pre><code>class Extraction(BaseModel):\n    topic: str\n    summary: str\n    hypothetical_questions: List[str] = Field(\n        default_factory=list,\n        description=\"Hypothetical questions that this document could answer\",\n    )\n    keywords: List[str] = Field(\n        default_factory=list, description=\"Keywords that this document is about\"\n    )\n\ntext_chunk = \"\"\"\n## Simple RAG\n\n**What is it?**\n\nThe simplest implementation of RAG embeds a user query and do a single embedding search in a vector database, like a vector store of Wikipedia articles. However, this approach often falls short when dealing with complex queries and diverse data sources.\n\n**What are the limitations?**\n\n- **Query-Document Mismatch:** It assumes that the query and document embeddings will align in the vector space, which is often not the case.\n    - Query: \"Tell me about climate change effects on marine life.\"\n    - Issue: The model might retrieve documents related to general climate change or marine life, missing the specific intersection of both topics.\n- **Monolithic Search Backend:** It relies on a single search method and backend, reducing flexibility and the ability to handle multiple data sources.\n    - Query: \"Latest research in quantum computing.\"\n    - Issue: The model might only search in a general science database, missing out on specialized quantum computing resources.\n- **Text Search Limitations:** The model is restricted to simple text queries without the nuances of advanced search features.\n    - Query: \"what problems did we fix last week\"\n    - Issue: cannot be answered by a simple text search since documents that contain problem, last week are going to be present at every week.\n- **Limited Planning Ability:** It fails to consider additional contextual information that could refine the search results.\n    - Query: \"Tips for first-time Europe travelers.\"\n    - Issue: The model might provide general travel advice, ignoring the specific context of first-time travelers or European destinations.\n\"\"\"\n\nextractions = client.chat.completions.create(\n    model=\"gpt-4-1106-preview\",\n    stream=True,\n    response_model=Iterable[Extraction],\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"Your role is to extract chunks from the following and create a set of topics.\",\n        },\n        {\"role\": \"user\", \"content\": text_chunk},\n    ],\n)\n\nfor extraction in extractions:\n    pprint(extraction.model_dump())\n</code></pre> <pre><code>{'hypothetical_questions': ['What is the basic concept behind simple RAG?',\n                            'How does simple RAG work for information '\n                            'retrieval?'],\n 'keywords': ['Simple RAG',\n              'Retrieval-Augmented Generation',\n              'user query',\n              'embedding search',\n              'vector database',\n              'Wikipedia articles',\n              'information retrieval'],\n 'summary': 'The simplest implementation of Retrieval-Augmented Generation '\n            '(RAG) involves embedding a user query and conducting a single '\n            'embedding search in a vector database, like a vector store of '\n            'Wikipedia articles, to retrieve relevant information. This method '\n            'may not be ideal for complex queries or varied data sources.',\n 'topic': 'Simple RAG'}\n{'hypothetical_questions': ['What are the drawbacks of using simple RAG '\n                            'systems?',\n                            'How does query-document mismatch affect the '\n                            'performance of RAG?',\n                            'Why is a monolithic search backend a limitation '\n                            'for RAG?'],\n 'keywords': ['limitations',\n              'query-document mismatch',\n              'simple RAG',\n              'monolithic search backend',\n              'text search',\n              'planning ability',\n              'contextual information'],\n 'summary': 'Key limitations of the simple RAG include query-document '\n            'mismatch, reliance on a single search backend, constraints of '\n            'text search capabilities, and limited planning ability to '\n            'leverage contextual information. These issues can result in '\n            'suboptimal search outcomes and retrieval of irrelevant or broad '\n            'information.',\n 'topic': 'Limitations of Simple RAG'}\n</code></pre> <p>Now you can imagine if you were to embed the summaries, hypothetical questions, and keywords in a vector database (i.e. in the metadata fields of a vector database), you can then use a vector search to find the best matching document for a given query. What you'll find is that the results are much better than if you were to just embed the text chunk!</p>"},{"location":"writing/2024/08/01/query-understanding/#retrieval","title":"Retrieval","text":"<p>Generally, we can use hybrid search (keyword search and embedding search in a single extraction material) together, but we must be careful about how to organize hybrid search. For example, if the HyDE question is not correct, we must reduce the weight of the HyDE question. The organization of hybrid search must be tuned for your specific project.If you are confused about retrieval, you can refer to this link...</p> <p>But the key to retrieval is providing the proper query. How do you generate the proper query? Let's find out in the next chapter.</p>"},{"location":"writing/2024/08/01/query-understanding/#query-understanding_1","title":"Query understanding","text":""},{"location":"writing/2024/08/01/query-understanding/#what-is-query-rewriting","title":"What is Query Rewriting?","text":"<p>Simply put, query rewriting means we will rewrite the user query in our own words, that our RAG app will know best how to answer. Instead of just doing retrieve-then-read, our app will do a rewrite-retrieve-read approach.</p> <p>We use a Generative AI model to rewrite the question. This model be a large model, like (or the same as) the one we use to answer the question in the final step. Or it can also be a smaller model, specially trained to perform this task.</p> <p>Also, query rewriting can take many different forms depending on the needs of the app. Most of the time, basic query rewriting will be enough. But, depending on the complexity of the questions we need to answer, we might need more advanced techniques like HyDE, multi-querying or step-back questions. More information on those in the following section.</p>"},{"location":"writing/2024/08/01/query-understanding/#why-does-it-work","title":"Why does it work?","text":"<p>Query Rewriting usually gives better performance in any RAG app that is knowledge intensive. This is because RAG applications are sensitive to the phrasing and specific keywords of the query. Paraphrasing this query is helpful in the following scenarios:</p> <ol> <li>It restructures oddly written questions so they can be better understood by our system.</li> <li>It erases context given by the user which is irrelevant to the query.</li> <li>It can introduce common keywords, which will give it a better chance of matching up with the correct context.</li> <li>It can split complex questions into different sub.questions, which can be more easily responded separately, each with their corresponding context.</li> <li>It can answer question that require multiple levels of thinking by generating a step-back question, which is a higher-level concept question to the one from the user. It then uses both the original and the step-back question to retrieve context.</li> <li>It can use more advanced query rewriting techniques like HyDE to generate hypothetical documents to answer the question. These hypothetical documents will better capture the intent of the question and match up with the embeddings that contain the answer in the vector DB.</li> </ol>"},{"location":"writing/2024/08/01/query-understanding/#general-strategies-of-query-rewriting","title":"General strategies of query rewriting","text":"<p>Here are some key examples and use cases for various query rewriting techniques in RAG systems:</p> <p>Hypothetical Document Embeddings (HyDE)</p> <p>HyDE generates hypothetical documents based on the query to improve retrieval[1][2]. The process works as follows:</p> <ol> <li>An LLM generates a hypothetical document answering the query</li> <li>This document is encoded into a vector</li> <li>The vector is used for retrieval instead of the original query vector</li> </ol> <p>For example, given the query \"What are the effects of climate change?\", HyDE might generate a hypothetical document like:</p> <p>\"Climate change has wide-ranging effects on the environment, including rising sea levels, more frequent extreme weather events, and shifts in plant and animal ranges. It impacts agriculture, water resources, human health, and ecosystems globally.\"</p> <p>This hypothetical document is then encoded and used for retrieval, potentially improving results compared to using the original short query[1].</p> <p>Step-Back Prompting</p> <p>Step-back prompting generates broader, more generic queries from a specific query[3]. For example:</p> <p>Original query: \"How do I change a flat tire on a 2015 Toyota Camry?\" Step-back query: \"What are the general steps for changing a flat tire on a car?\"</p> <p>This broader query may retrieve more relevant general information about tire changing that can then be applied to the specific case.</p> <p>Query2Doc</p> <p>Query2Doc generates pseudo-documents to expand and clarify the query[2]. Unlike HyDE, which assumes a direct answer, Query2Doc creates a document that provides context around the query. For example:</p> <p>Query: \"What are the health benefits of turmeric?\" Generated pseudo-document: \"Turmeric is a spice commonly used in Indian cuisine. It has been studied for potential health benefits. Some areas of interest include its anti-inflammatory properties, antioxidant effects, and possible impacts on brain function and heart health.\"</p> <p>This pseudo-document is then used for retrieval, potentially capturing a wider range of relevant information.</p> <p>Multi-querying / Sub-queries</p> <p>This technique breaks down complex queries into multiple simpler sub-queries[3]. For example:</p> <p>Original query: \"Compare the economic policies of FDR and Reagan\" Sub-queries:</p> <ol> <li>\"What were the main economic policies of Franklin D. Roosevelt?\"</li> <li>\"What were the key economic policies of Ronald Reagan?\"</li> <li>\"How did FDR's economic approach differ from Reagan's?\"</li> </ol> <p>By breaking down the complex query, the system can retrieve more specific and relevant information for each aspect of the question.</p> <p>These techniques can significantly improve retrieval performance in RAG systems, leading to more accurate and comprehensive answers. The choice of technique depends on the specific use case, query complexity, and the nature of the information being retrieved.</p> <pre><code>from langchain.llms import OpenAI\nfrom langchain.prompts import PromptTemplate\nfrom langchain.chains import LLMChain\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import FAISS\nfrom langchain.docstore.document import Document\n\n# Initialize LLM and embeddings\nllm = OpenAI(temperature=0.7)\nembeddings = OpenAIEmbeddings()\n\n# 1. Hypothetical Document Embeddings (HyDE)\nhyde_prompt = PromptTemplate(\n    input_variables=[\"query\"],\n    template=\"Generate a detailed answer for the following question:\\n{query}\\n\\nAnswer:\"\n)\n\nhyde_chain = LLMChain(llm=llm, prompt=hyde_prompt)\n\ndef hyde(query):\n    hypothetical_doc = hyde_chain.run(query)\n    doc_embedding = embeddings.embed_query(hypothetical_doc)\n    return doc_embedding\n\n# Usage\nquery = \"What are the effects of climate change?\"\nhyde_embedding = hyde(query)\n\n# 2. Step-Back Prompting\nstep_back_prompt = PromptTemplate(\n    input_variables=[\"query\"],\n    template=\"Generate a more general version of this specific query:\\n{query}\\n\\nGeneral query:\"\n)\n\nstep_back_chain = LLMChain(llm=llm, prompt=step_back_prompt)\n\ndef step_back(query):\n    general_query = step_back_chain.run(query)\n    return general_query\n\n# Usage\nspecific_query = \"How do I change a flat tire on a 2015 Toyota Camry?\"\ngeneral_query = step_back(specific_query)\n\n# 3. Query2Doc\nquery2doc_prompt = PromptTemplate(\n    input_variables=[\"query\"],\n    template=\"Generate a short document providing context for this query:\\n{query}\\n\\nContext document:\"\n)\n\nquery2doc_chain = LLMChain(llm=llm, prompt=query2doc_prompt)\n\ndef query2doc(query):\n    pseudo_doc = query2doc_chain.run(query)\n    return pseudo_doc\n\n# Usage\nquery = \"What are the health benefits of turmeric?\"\npseudo_doc = query2doc(query)\n\n# 4. Multi-querying / Sub-queries\nmulti_query_prompt = PromptTemplate(\n    input_variables=[\"query\"],\n    template=\"Break down this complex query into 3-5 simpler sub-queries:\\n{query}\\n\\nSub-queries:\"\n)\n\nmulti_query_chain = LLMChain(llm=llm, prompt=multi_query_prompt)\n\ndef multi_query(query):\n    sub_queries_text = multi_query_chain.run(query)\n    sub_queries = sub_queries_text.split('\\n')\n    return [q.strip() for q in sub_queries if q.strip()]\n\n# Usage\ncomplex_query = \"Compare the economic policies of FDR and Reagan\"\nsub_queries = multi_query(complex_query)\n\n# Example of using these in a RAG pipeline\ndef rag_pipeline(query, documents):\n    # Create vector store\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\n    texts = text_splitter.split_documents(documents)\n    docsearch = FAISS.from_documents(texts, embeddings)\n\n    # Query rewriting\n    hyde_emb = hyde(query)\n    general_query = step_back(query)\n    pseudo_doc = query2doc(query)\n    sub_queries = multi_query(query)\n\n    # Retrieve documents using various methods\n    hyde_docs = docsearch.similarity_search_by_vector(hyde_emb, k=2)\n    general_docs = docsearch.similarity_search(general_query, k=2)\n    pseudo_docs = docsearch.similarity_search(pseudo_doc, k=2)\n    sub_query_docs = [doc for sq in sub_queries for doc in docsearch.similarity_search(sq, k=1)]\n\n    # Combine and deduplicate results\n    all_docs = hyde_docs + general_docs + pseudo_docs + sub_query_docs\n    unique_docs = list({doc.page_content: doc for doc in all_docs}.values())\n\n    # Here you would typically pass these documents to your LLM for final answer generation\n    return unique_docs\n\n# Usage\ndocuments = [Document(page_content=f\"Document {i}\") for i in range(10)]  # Example documents\nquery = \"What are the long-term economic impacts of climate change?\"\nrelevant_docs = rag_pipeline(query, documents)\n</code></pre>"},{"location":"writing/2024/08/01/query-understanding/#understanding-recent-queries-to-add-temporal-context","title":"Understanding 'recent queries' to add temporal context","text":"<p>One common application of using structured outputs for query understanding is to identify the intent of a user's query. In this example we're going to use a simple schema to seperately process the query to add additional temporal context.</p> <pre><code>from datetime import date\n\nclass DateRange(BaseModel):\n    start: date\n    end: date\n\nclass Query(BaseModel):\n    rewritten_query: str\n    published_daterange: DateRange\n</code></pre> <p>In this example,\u00a0<code>DateRange</code>\u00a0and\u00a0<code>Query</code>\u00a0are Pydantic models that structure the user's query with a date range and a list of domains to search within.</p> <p>These models\u00a0restructure\u00a0the user's query by including a\u00a0rewritten query, a\u00a0range of published dates, and a\u00a0list of domains\u00a0to search in.</p> <p>Using the new restructured query, we can apply this pattern to our function calls to obtain results that are optimized for our backend.</p> <pre><code>def expand_query(q) -&gt; Query:\n    return client.chat.completions.create(\n        model=\"gpt-3.5-turbo\",\n        response_model=Query,\n        messages=[\n            {\n                \"role\": \"system\",\n                \"content\": f\"You're a query understanding system for the Metafor Systems search engine. Today is {date.today()}. Here are some tips: ...\",\n            },\n            {\"role\": \"user\", \"content\": f\"query: {q}\"},\n        ],\n    )\n\nquery = expand_query(\"What are some recent developments in AI?\")\nquery\n</code></pre> <pre><code>Query(rewritten_query='Recent developments in artificial intelligence', published_daterange=DateRange(start=datetime.date(2024, 1, 1), end=datetime.date(2024, 3, 31)))\n</code></pre> <p>This isn't just about adding some date ranges. We can even use some chain of thought prompting to generate tailored searches that are deeply integrated with our backend.</p> <pre><code>class DateRange(BaseModel):\n    chain_of_thought: str = Field(\n        description=\"Think step by step to plan what is the best time range to search in\"\n    )\n    start: date\n    end: date\n\nclass Query(BaseModel):\n    rewritten_query: str = Field(\n        description=\"Rewrite the query to make it more specific\"\n    )\n    published_daterange: DateRange = Field(\n        description=\"Effective date range to search in\"\n    )\n\ndef expand_query(q) -&gt; Query:\n    return client.chat.completions.create(\n        model=\"gpt-4-1106-preview\",\n        response_model=Query,\n        messages=[\n            {\n                \"role\": \"system\",\n                \"content\": f\"You're a query understanding system for the Metafor Systems search engine. Today is {date.today()}. Here are some tips: ...\",\n            },\n            {\"role\": \"user\", \"content\": f\"query: {q}\"},\n        ],\n    )\n\nexpand_query(\"What are some recent developments in AI?\")\n</code></pre> <pre><code>Query(rewritten_query='latest advancements in artificial intelligence', published_daterange=DateRange(chain_of_thought='Since the user is asking for recent developments, it would be relevant to look for articles and papers published within the last year. Therefore, setting the start date to a year before today and the end date to today will cover the most recent advancements.', start=datetime.date(2023, 3, 31), end=datetime.date(2024, 3, 31)))\n</code></pre>"},{"location":"writing/2024/08/01/query-understanding/#decomposing-questions","title":"Decomposing questions","text":"<p>Lastly, a lightly more complex example of a problem that can be solved with structured output is decomposing questions. Where you ultimately want to decompose a question into a series of sub-questions that can be answered by a search backend. For example</p> <p>\"Whats the difference in populations of jason's home country and canada?\"</p> <p>You'd ultimately need to know a few things</p> <ol> <li>Jason's home country</li> <li>The population of Jason's home country</li> <li>The population of Canada</li> <li>The difference between the two</li> </ol> <p>This would not be done correctly as a single query, nor would it be done in parallel, however there are some opportunities try to be parallel since not all of the sub-questions are dependent on each other.</p> <pre><code>class Question(BaseModel):\n    id: int = Field(..., description=\"A unique identifier for the question\")\n    query: str = Field(..., description=\"The question decomposited as much as possible\")\n    subquestions: List[int] = Field(\n        default_factory=list,\n        description=\"The subquestions that this question is composed of\",\n    )\n\nclass QueryPlan(BaseModel):\n    root_question: str = Field(..., description=\"The root question that the user asked\")\n    plan: List[Question] = Field(\n        ..., description=\"The plan to answer the root question and its subquestions\"\n    )\n\nretrieval = client.chat.completions.create(\n    model=\"gpt-4-1106-preview\",\n    response_model=QueryPlan,\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a query understanding system capable of decomposing a question into subquestions.\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"What is the difference between the population of jason's home country and canada?\",\n        },\n    ],\n)\n\nprint(retrieval.model_dump_json(indent=4))\n</code></pre> <pre><code>{\n    \"root_question\": \"What is the difference between the population of Jason's home country and Canada?\",\n    \"plan\": [\n        {\n            \"id\": 1,\n            \"query\": \"What is the population of Jason's home country?\",\n            \"subquestions\": []\n        },\n        {\n            \"id\": 2,\n            \"query\": \"What is the population of Canada?\",\n            \"subquestions\": []\n        },\n        {\n            \"id\": 3,\n            \"query\": \"What is the difference between two population numbers?\",\n            \"subquestions\": [\n                1,\n                2\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"writing/2023/11/11/rag-survey/","title":"RAG-Survey","text":"<p>\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u6574\u4f53\u903b\u8f91\uff0c\u53ea\u753b\u51fa\u4e86\u4e00\u4e9b\u6838\u5fc3\u6b65\u9aa4\uff0c\u7c97\u7565\u5206\u4e3a3\u90e8\u5206\uff1a</p> <ul> <li>Preprocess data stage: \u8fd9\u4e2a\u9636\u6bb5\u9700\u8981\u6211\u4eec\u5c06\u5916\u90e8\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u91cc\u5217\u4e3e\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a<ol> <li>\u6784\u5efa\u7d22\u5f15\uff0c\u4fbf\u4e8e\u540e\u7eed\u8fdb\u884c\u5012\u6392\u68c0\u7d22\uff1b</li> <li>\u6784\u5efavector store\uff0c\u8fd9\u91cc\u5e38\u89c1\u7684\u95ee\u9898\u662f\u6570\u636e\u7684\u957f\u5ea6\u53ef\u80fd\u5f88\u957f\uff0c\u9700\u8981\u6839\u636e\u4e00\u4e9b\u89c4\u5219\u548c\u8bed\u4e49\u8fdb\u884c\u8bed\u53e5\u6216\u8005\u6bb5\u843d\u7684\u5207\u5206\uff0c\u79f0\u4e4b\u4e3achunks\uff0c\u7136\u540e\u5c06chunks\u7f16\u7801\u4e3aembedding\uff0c\u5b58\u50a8\u81f3vector store\u3002</li> </ol> </li> <li>Retrieval stage: \u57fa\u4e8e\u7528\u6237query\u8fdb\u884c\u68c0\u7d22\uff0c\u76ee\u7684\u662f\u5728prompt\u5f15\u5165\u53ec\u56de\u7684\u76f8\u5173\u6587\u6863\uff0c\u51cf\u5c11\u5927\u6a21\u578b\u5e7b\u89c9\u4ee5\u53ca\u4ea7\u751f\u9519\u8bef\u7b54\u6848\uff0c\u57fa\u4e8e\u4e0a\u8ff0\u6784\u5efa\u7684\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u68c0\u7d22\u3002</li> <li>LLM stage: \u57fa\u4e8e\u7528\u6237query\u548c\u53ec\u56de\u7684\u76f8\u5173\u6587\u6863\u6784\u5efaprompt\uff0c\u9001\u5165LLM\uff0c\u4ea7\u751f\u6700\u7ec8\u7684\u56de\u7b54</li> </ul>"},{"location":"writing/2023/11/11/rag-survey/#preprocess-data-stage","title":"Preprocess data stage","text":""},{"location":"writing/2023/11/11/rag-survey/#text-split","title":"Text split","text":"<p>\u5904\u7406\u6570\u636e\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u8981\u505a\u6587\u672c\u5207\u5206\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u957f\u6587\u672c\u6570\u636e\u90fd\u9700\u8981\u5207\u5206\u6210\u4ee5\u8bed\u4e49\u4e3a\u5355\u4f4d\u7684\u5757\uff0c\u4f46\u662f\u5982\u4f55\u5207\u5206\u6210\u8bed\u4e49\u4e3a\u5355\u4f4d\u7684\u5757\uff0c\u73b0\u9636\u6bb5\u6ca1\u6709\u4e00\u4e2a\u8f83\u4e3a\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\uff0cLangchain\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6587\u672c\u5207\u5206\u7684\u65b9\u6848\uff0c\u5176\u4e2d\u5e38\u7528\u7684\u662fRecursively split by character\uff0cMarkdownHeaderTextSplitter\uff0cHTMLHeaderTextSplitter\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5207\u5206\u4e5f\u662f\u5e38\u7528\u7684\u65b9\u5f0f\u3002</p> <ul> <li>\u4f9d\u636e\u8bed\u4e49\u8fdb\u884c\u5207\u5206\uff0c\u4f7f\u7528\u5404\u79cd\u65b9\u5f0f\u5427\uff0c\u603b\u80fd\u5207\u6210\u6ee1\u610f\u7684\u8bed\u4e49\u5355\u4f4d\u7684chunks\uff0c\u53ec\u56de\u7684\u65f6\u5019\u5c31\u662f\u53ec\u56dechunks</li> <li>\u5207\u5206\u6210chunks\u540e\uff0c\u7136\u540e\u4f9d\u636e\u53e5\u5b50level\u8fdb\u884c\u5207\u5206\uff0c\u505a\u6210\u4e00\u4e2akey-val\u6620\u5c04\u7684\u8fd9\u4e48\u4e00\u4e2a\u5f62\u5f0f\u3002</li> </ul>"},{"location":"writing/2023/11/11/rag-survey/#chunks","title":"Chunks\u589e\u5f3a","text":"<p>\u77e5\u8bc6\u589e\u5f3a\u4e00\u822c\u662f\u6307\uff0c\u6839\u636e\u4e0a\u4e0b\u6587\u91cd\u65b0 Refine \u539f\u59cb\u7684\u6587\u672c\u4f7f\u5f97\u539f\u59cb\u7684\u6587\u672c\u4fe1\u606f\u66f4\u5b8c\u6574\uff0c\u81ea\u89e3\u91ca\u6027\u66f4\u5f3a\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7531\u4e8e\u662f\u79bb\u7ebf\u7684\u4e00\u6b21\u6027\u5904\u7406\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u501f\u52a9\u80fd\u529b\u66f4\u5f3a\u7684\u5546\u7528 LLM \u6a21\u578b\uff0c\u751f\u6210\u7684\u5185\u5bb9\u53ef\u80fd\u4f1a\u66f4\u597d\u3002\u53e6\u5916\u7531\u4e8e\u73b0\u5728\u7684 LLM \u80fd\u652f\u6491\u7684\u4e0a\u4e0b\u6587 context \u957f\u5ea6\u5f88\u957f\uff0c\u5efa\u8bae\u5728\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728 prompt \u4e2d\u53bb\u878d\u5165\u4e00\u4e9b\u8be5\u573a\u666f\u7684\u4e30\u5bcc\u80cc\u666f\u4fe1\u606f\u3002</p> <p></p> <p>\u901a\u8fc7\u77e5\u8bc6\u589e\u5f3a\uff0c\u53ef\u4ee5\u628a\u6587\u672c\u6587\u6863\u4e5f\u8f6c\u5316\u6210 FAQ \u7684\u5f62\u5f0f\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4e00\u822c\u7684\u6587\u6863\u4e5f\u80fd\u591f\u540c\u65f6\u8fdb\u884c QQ \u548c QD \u53ec\u56de\u3002\u4f46\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u7279\u522b\u5782\u76f4\u7684\u9886\u57df\uff0c\u80fd\u529b\u5f88\u5f3a\u7684\u5546\u4e1a LLM \u4e5f\u53ef\u80fd\u65e0\u6cd5\u63d0\u53d6\u51fa\u6bd4\u8f83\u5408\u9002\u7684\u95ee\u9898\uff0c\u4e00\u822c\u89c2\u5bdf\u5230\u7684\u73b0\u8c61\u662f\u63d0\u53d6\u51fa\u7684\u95ee\u9898\u8fc7\u4e8e\u76f4\u63a5\uff0c\u6216\u8005\u63d0\u53d6\u51fa\u7684\u95ee\u9898\u65e0\u5b9e\u9645\u610f\u4e49\uff0c\u8fd9\u90e8\u5206\u5efa\u8bae\u8d70\u4e00\u904d\u4eba\u5de5\u5ba1\u6838\u3002</p> <p>\u5bf9\u4e8e\u8d28\u91cf\u4e0d\u9ad8\u7684 FAQ\uff0c\u7279\u522b\u662f\u63d0\u95ee\u8fc7\u4e8e\u7b80\u7565\u7684\uff0c\u77e5\u8bc6\u589e\u5f3a\u4e5f\u80fd\u591f\u4f18\u5316\u5176\u8d28\u91cf\u3002\u53e6\u5916\u7ecf\u8fc7\u4f18\u5316\u540e\u7684\u77e5\u8bc6\uff0c\u5728 LLM \u751f\u6210\u9636\u6bb5\uff0c\u5bf9\u4e8e\u63d0\u5347 LLM \u5bf9\u77e5\u8bc6\u7684\u7406\u89e3\u4e5f\u662f\u6709\u4e00\u5b9a\u5e2e\u52a9\u7684\u3002\u603b\u7684\u6765\u8bf4\uff0c\u77e5\u8bc6\u589e\u5f3a\u662f\u7b80\u5355\u6709\u6548\u7684\u4f18\u5316\u624b\u6bb5\u3002</p> <p>\u53ef\u4ee5\u5047\u8bbe50\u4e2a\u957f\u5ea6\u80fd\u591f\u63d0\u53d6\u4e00\u4e2a\u6709\u6548\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4f9d\u636e\u6587\u672c\u957f\u5ea6\u53ef\u4ee5\u751f\u6210\u53ef\u53d8\u7684\u95ee\u9898\u6570\u91cf\uff0c\u751f\u6210\u95ee\u9898\u540e\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u95ee\u9898\u8fdb\u884c\u589e\u5f3a\uff0c\u751f\u6210\u66f4\u591a\u6837\u7684\u63d0\u95ee\u3002</p>"},{"location":"writing/2023/11/11/rag-survey/#embedding","title":"Embedding","text":"embedding name tokenizer \u6700\u5927\u8f93\u5165token\u6570 \u8f93\u51fa\u7ef4\u5ea6 text-embedding-ada-002 cl100k_base 8191 1536 bge-large-zh - 512 1024 <p>\u5728\u6211\u4eec\u7684QA\u4efb\u52a1\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e0a\u8ff02\u4e2aembedding\u6a21\u578b\uff0c\u7531\u4e8ebge\u53ea\u6709512\u7684\u957f\u5ea6\uff0c\u5bf9\u4e8e\u7f16\u7801\u6574\u4e2aQA context\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u5728\u5b9e\u9a8c\u4e2d\uff0c\u53ea\u7f16\u7801\u4e86Question\uff0c\u5bf9\u6bd4\u6548\u679c\uff0c\u4f9d\u65e7\u662fOpenAI embedding\u7684\u6548\u679c\u8981\u597d\uff0c\u800c\u7f16\u7801QA context\u8981\u6bd4\u5355\u72ec\u7f16\u7801question\u7684\u6548\u679c\u597d\u3002\u8bc4\u4f30\u6307\u6807\u9009\u62e9nDCG@3\uff0c\u8986\u76d6\u7387\u3002</p>"},{"location":"writing/2023/11/11/rag-survey/#retrieval-stage","title":"Retrieval stage","text":"<p>\u5bf9\u4e8e\u53ec\u56de\u9636\u6bb5\uff0c\u4f7f\u7528text-embedding-ada-002\u6a21\u578b\u4ee5\u53caElasticSearch\uff0c\u5206\u522b\u5bf9\u5355\u68c0\u7d22\u548c\u6df7\u5408\u68c0\u7d22\u8fdb\u884c\u5b9e\u9a8c\u5bf9\u6bd4\uff0c\u5206\u522b\u5bf9bm25\uff0cknn\u548cRRF\u4f5c\u5bf9\u6bd4\uff0c\u8bc4\u4f30\u6307\u6807\u9009\u53d6nDCG@3\uff0cRRF&gt;bm25&gt;knn\uff0c\u4f46\u662fbm25\u548cknn\u7684\u5dee\u8ddd\u4e0d\u5927\u3002</p>"},{"location":"writing/2023/11/11/rag-survey/#hybrid-search","title":"Hybrid search","text":""},{"location":"writing/2023/11/11/rag-survey/#rrf","title":"RRF","text":"\\[ RRFScore(d \\in D) = \\sum_{r \\in R} \\frac{1}{k+r(d)} \\] <p>\u5176\u4e2dk\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a60\uff0cr(d)\u4e3a\u5f53\u524d\u6392\u5e8f\u7684idx(\u4ece1\u5f00\u59cb)\uff0cRRF\u53ea\u8003\u8651\u6bcf\u6b21\u6392\u5e8f\u7684\u4f4d\u7f6e\uff0c\u4e22\u5f03\u4e86\u6392\u5e8f\u4e2d\u6570\u636e\u5bf9\u5e94\u7684\u5206\u6570\u3002\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u6548\u679c\u6765\u770b\uff0cRRF\u6bd4\u5355\u72ec\u7684lexical search\u548c\u5355\u72ec\u7684semantic search\u7684\u6548\u679c\u8981\u597d\u3002</p> <pre><code>def reciprocal_rank_fusion(search_results_dict, k=60):\n    fused_scores = {}\n    print(\"Initial individual search result ranks:\")\n    for query, doc_scores in search_results_dict.items():\n        print(f\"For query '{query}': {doc_scores}\")\n\n    for query, doc_scores in search_results_dict.items():\n        for rank, (doc, score) in enumerate(sorted(doc_scores.items(), key=lambda x: x[1], reverse=True)):\n            if doc not in fused_scores:\n                fused_scores[doc] = 0\n            previous_score = fused_scores[doc]\n            fused_scores[doc] += 1 / (rank + k)\n            print(f\"Updating score for {doc} from {previous_score} to {fused_scores[doc]} based on rank {rank} in query '{query}'\")\n\n    reranked_results = {doc: score for doc, score in sorted(fused_scores.items(), key=lambda x: x[1], reverse=True)}\n    print(\"Final reranked results:\", reranked_results)\n    return reranked_results\n</code></pre>"},{"location":"writing/2023/11/11/rag-survey/#analysis-of-fusion-functions-for-hybrid-retrieval","title":"Analysis of fusion functions for hybrid retrieval","text":"<p>\u4e3b\u8981\u5bf9convex combination(\u5176\u5b9e\u5c31\u662f\u6743\u91cd\u52a0\u548c\uff0c\u8981\u6c42\u6743\u91cd\u548c\u4e3a1)\u548cRRF\u505a\u4e86\u5b9e\u9a8c\u5206\u6790\uff0c\u5176\u4e2d\u5b9e\u9a8c\u9a8c\u8bc1\u4e86RRF\u5bf9\u4e8e\u53c2\u6570\u654f\u611f\uff0c\u800c\u5728\u5c11\u91cf\u6837\u672c\u505a\u76d1\u7763\u5fae\u8c03\u540e\uff0cconvex combination\u7684\u68c0\u7d22\u65b9\u5f0f\u8981\u4f18\u4e8eRRF\u3002</p> <p>Analysis of convex combination</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u68c0\u7d22\u65b9\u5f0f\u5f97\u5230\u7684\u53ec\u56de\u6570\u636e\uff0c\u5206\u6570\u8303\u56f4\u4e0d\u4e00\u81f4\uff0c\u4e00\u4e2a\u6bd4\u8f83\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u5206\u6570\u505a\u5f52\u4e00\u5316\uff0c\u7136\u540e\u628a\u5f52\u4e00\u5316\u540e\u7684\u6570\u636e\u505a\u6743\u91cd\u52a0\u548c\uff0c\u5f97\u5230\u6700\u7ec8\u5206\u6570\u3002\u5176\u4e2d\u8be5\u90e8\u5206\u5185\u5bb9\u5bf9\u4e3a\u4ec0\u4e48\u6df7\u5408\u68c0\u7d22\u6709\u6548\u4ee5\u53ca\u5f52\u4e00\u5316\u6700\u4f18\u65b9\u5f0f\u505a\u4e86\u5b9e\u9a8c\u5206\u6790\u3002</p> <p>\u5c06\u6b63\u8d1f\u6837\u672c\u7684lexical search\u5206\u6570\u548csemantic search\u5206\u6570\u8ba1\u7b97\u5e76\u5f52\u4e00\u5316\uff0c\u5f97\u5230\u4e0b\u56fe\uff0c\u89c2\u5bdf\u53ef\u4ee5\u770b\u5230\u6b63\u8d1f\u6837\u672c\u5728\u6563\u70b9\u56fe\u662f\u6709\u76f8\u5bf9\u6e05\u6670\u7684\u7c07\u5f62\u6210\u7684\uff0c\u867d\u7136\u8fd9\u91cc\u7684\u4efb\u52a1\u662f\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u662f\u4ece\u6563\u70b9\u56fe\uff0c\u4e5f\u53ef\u4ee5\u89c2\u5bdf\u5230\u6b63\u8d1f\u6837\u672c\u5728lexical search\u548csemantic search\u7684\u5206\u6570\u662f\u6709\u4e00\u5b9a\u7684\u89c4\u5f8b\u7684\u3002</p> <p></p> <p>\u5728\u8bba\u6587\u5b9e\u9a8c\u4e2d\u6700\u4f18\u7684\u5f52\u4e00\u5316\u65b9\u5f0f\u4e3aTheoretical min-max scaling\uff0c\u5176\u4e2d\u5bf9\u4e8eBM25\u7684\u7406\u60f3\u4e0b\u754c\u662f0\uff0c\u5bf9\u4e8e\u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u7406\u60f3\u4e0b\u754c\u662f-1</p> \\[ \\phi_{TMM}(f_o(q,d))=\\frac{f_o(q,d)-\\mathrm{inf}  f_o(q,\\cdot)}{M_q-\\mathrm{inf} f_o(q,\\cdot)} \\] <p>Analysis of RRF</p> <p>\u5728\u5b9e\u9a8c\u4e2d\uff0c\u4ee5NDCG\u548cRecall\u4e3a\u6307\u6807\uff0cRRF\u6bd4\u5355\u72ec\u7684lexical search\u548c\u5355\u72ec\u7684semantic search\u7684\u6548\u679c\u8981\u597d\uff0c\u4f46\u662f\u6ca1\u6709convex combination\u7684\u6548\u679c\u597d\uff0c\u4e0e\u6211\u81ea\u5df1\u5b9e\u9645\u4f7f\u7528\u7684\u6548\u679c\u4e00\u81f4\u3002</p> <p>RRF\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>RRF\u53ea\u662f\u5bf9\u53ec\u56de\u7684topk\u6570\u636e\u7684\u987a\u5e8f\u8fdb\u884c\u8fd1\u4f3c\u6392\u5e8f\u8ba1\u7b97\uff0c\u5e76\u6709\u771f\u6b63\u7684\u5bf9\u6570\u636e\u987a\u5e8f\u8ba1\u7b97\u3002(lexical\u548csemantic\u53ec\u56de\u7684\u6570\u636e\u5e76\u4e0d\u603b\u662f\u4e00\u6837\uff0c\u53ea\u5b58\u5728\u5176\u4e2d\u4e4b\u4e00\u7684\u6570\u636e\uff0c\u5728\u53e6\u4e00\u8def\u53ec\u56de\u6ca1\u6709\u5bf9\u5e94\u7684\u5206\u6570)</li> <li>RRF\u53ea\u5173\u6ce8topk\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u5ffd\u7565\u4e86\u771f\u5b9e\u5206\u6570\u4ee5\u53ca\u5206\u5e03\u4fe1\u606f\u3002</li> </ul> <p>RRF\u7684\u516c\u5f0f\u5982\u4e0b\uff0c\u5176\u4e2d\\(\\eta\\)\u9ed8\u8ba4\u4e3a60\u3002</p> \\[ f_{\\mathrm{RRF} }(q,d)=\\frac{1}{\\eta + \\pi _{\\mathrm{LEX} }(q,d)} +\\frac{1}{\\eta + \\pi _{\\mathrm{SEM} }(q,d)} \\] <p>RRF\u7528\u4f4d\u7f6e\u4fe1\u606f\u66ff\u6362\u6389\u4e86\u5206\u6570\u4fe1\u606f\uff0c\u8fd9\u6837\u7684\u8bbe\u5b9a\u662f\u5426\u5408\u7406\u4ee5\u53ca\\(\\eta\\)\u7684\u5927\u5c0f\u662f\u5426\u5f71\u54cdRRF\u7684\u6548\u679c\uff0c\u662f\u5426\u80fd\u5728\u5404\u4e2a\u90fd\u9002\u7528\uff0c\u9700\u8981\u5728\u5404\u4e2a\u6570\u636e\u96c6\u8fdb\u884c\u9a8c\u8bc1\u3002\u5047\u8bbe\\(\\eta \\rightarrow \\infty\\)\uff0c\u90a3\u4e48RRF\u7684\u503c\u4f1a\u574d\u7f29\u4e3a\u4e00\u4e2a\u70b9\u3002\u5047\u8bbe\\(\\eta=60\\)\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6570\u636e\u96c6\u4e0a\u753b\u51falexical\u548csemantic\u53ec\u56de\u6570\u636e\u7684\u6b63\u8d1f\u6837\u672c\uff0c\u7ea2\u8272\u4e3a\u6b63\uff0c\u9ed1\u8272\u4e3a\u8d1f\uff0c\u53ef\u4ee5\u770b\u5230\u6b63\u6837\u672c\u503e\u5411\u4e8e\u805a\u96c6\u5728(1/61,1/61)\uff0c\u800c\u8d1f\u6837\u672c\u503e\u5411\u4e8e\u805a\u96c6\u5728(0,0)\uff0c\u4f46\u662fHotpotQA\u548cFEVER\u6570\u636e\u96c6\u770b\u5230\u90e8\u5206\u6b63\u6837\u672c\u4e5f\u6c47\u805a\u4e8e(0,0)\uff0c\u8fd9\u5c31\u8868\u660e\u5f53\\(\\eta=60\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4e0d\u540c\u6570\u636e\u96c6\u6cdb\u5316\u80fd\u529b\u662f\u503c\u5f97\u5546\u69b7\u7684\u3002</p> <p></p> <p>\u90a3\u4e48\u6211\u4eec\u5bf9\u4e0d\u540c\u7684\u53ec\u56de\u53c2\u6570\u5316\\(\\eta\\)\u65f6\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> \\[ f_{\\mathrm{RRF} }(q,d)=\\frac{1}{\\eta_{\\mathrm{LEX}} + \\pi _{\\mathrm{LEX} }(q,d)} +\\frac{1}{\\eta_{\\mathrm{SEM}} + \\pi _{\\mathrm{SEM} }(q,d)} \\] <p>\u4ece\u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\\(\\eta_{\\mathrm{LEX}}\\)\u548c\\(\\eta_{\\mathrm{SEM}}\\)\u53d8\u5316\u4e00\u81f4\u65f6\uff0cNDCG\u6307\u6807\u7684\u53d8\u5316\u662f\u8d1f\u76f8\u5173\u7684\uff0c\u8fd9\u8fdb\u4e00\u6b65\u8868\u660eRRF\u5bf9\u4e8e\u4e0d\u540c\u6570\u636e\u96c6\u7684\u6cdb\u5316\u80fd\u529b\u8f83\u5dee\u3002</p> <p></p> <p>\u5bf9\u4e8e\u5206\u6570\u4ee5\u53ca\u5206\u90e8\u4fe1\u606f\u662f\u5426\u6709\u4f5c\u7528\uff0c\u4f5c\u8005\u5229\u7528\u4e86Lipschitz continuity\u5c06\u539f\u59cbRRF\u8fd1\u4f3c\u6210\u4e86SRRF(Lipschitz continuity\u4fdd\u8bc1\u4e86\u8be5\u51fd\u6570\u4e0d\u4f1a\u7531\u4e8e\u8f93\u5165\u7684\u5fae\u5c0f\u6270\u52a8\u5bfc\u81f4\u8f93\u51fa\u7684\u5267\u70c8\u53d8\u52a8\uff0c\u4f5c\u8005\u79f0\u4e4b\u4e3a\u8be5\u51fd\u6570\u5177\u5907\u4fdd\u7559\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u7528\u6ee1\u8db3Lipschitz continuity\u7684\u51fd\u6570\u6765\u6a21\u62df\u5206\u6570\u4ee5\u53ca\u5176\u5206\u5e03)\u3002</p> \\[ f_{\\mathrm{RRF} }(q,d)=\\frac{1}{\\eta + \\hat{\\pi} _{\\mathrm{LEX} }(q,d)} +\\frac{1}{\\eta + \\hat{\\pi} _{\\mathrm{SEM} }(q,d)} \\] \\[ \\hat{\\pi_o}(q,d_i)=0.5+\\sum_{d_j \\in R^k_o(q)} \\sigma_{\\beta}(f_o(q,d_j)-f_o(q,d_i)) \\] \\[ \\sigma_{\\beta}(x)=\\frac{1}{1+e^{-\\beta x}} \\] <p>\u5f53\\(\\beta=1\\)\u65f6\uff0c\\(\\sigma_{\\beta}(x)\\)\u5c31\u662fSigmoid\u51fd\u6570\uff0c\\(\\sigma_{\\beta}(x)\\)\u7684Lipschitz\u5e38\u6570\u4e3a\\(\\beta\\)\uff0c\u5bf9\u4e8e\\(\\hat{\\pi_o}(q,d_i)\\)\u5c31\u662f\u8fd1\u4f3c\u8ba1\u7b97idx\u7684\u51fd\u6570</p> <p>\u5728\\(\\beta \\sim \\infty\\)\u65f6\uff0c\u5f53\\(f_o(q,d_j)-f_o(q,d_i) \\gt 0\\)\uff0c\\(\\sigma_{\\beta}(f_o(q,d_j)-f_o(q,d_i)) \\simeq 1\\)</p> <p>\u5f53\\(f_o(q,d_j)-f_o(q,d_i) \\gt 0\\)\uff0c\\(\\sigma_{\\beta}(f_o(q,d_j)-f_o(q,d_i)) \\simeq 0\\)</p> <p>\u5f53\\(f_o(q,d_j)-f_o(q,d_i) = 0\\)\uff0c\\(\\sigma_{\\beta}(f_o(q,d_j)-f_o(q,d_i)) =0.5\\)</p> <p>\u5f53\\(\\beta=1\\)\u548c100\u65f6\uff0c\\(\\sigma_{\\beta}(x)\\)\u56fe\u5f62\u5982\u4e0b</p> <p></p> <p></p> <p>\u5f53\u03b2\u592a\u5c0f\u65f6\uff0c\u8fd1\u4f3c\u8bef\u5dee\u5f88\u5927\uff0c\u6392\u540d\u8d28\u91cf\u4f1a\u4e0b\u964d\u3002\u968f\u7740\u03b2\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u6392\u540d\u8d28\u91cf\u8d8b\u8fd1\u4e8eRRF\u3002\u6709\u8da3\u7684\u662f\uff0c\u968f\u7740\u03b2\u9010\u6e10\u53d8\u5c0f\uff0cSRRF\u7684\u6027\u80fd\u6bd4RRF\u66f4\u597d\u3002\u8fd9\u79cd\u60c5\u51b5\u5728RRF\u7684\u03b7 = 60\u8bbe\u7f6e\u4ee5\u53ca\u5176\u4ed6\u6570\u636e\u96c6\u4e0a\u66f4\u660e\u663e\u3002</p> <p></p> <p>\u4f5c\u8005\u6700\u540e\u5bf9\u4e0a\u8ff0\u5b9e\u9a8c\u505a\u4e86\u603b\u7ed3\uff1a</p> <ul> <li>\u5355\u8c03\u6027\uff1a\u7ec4\u5408\u540e\u7684hybrid function\u5177\u5907\u5355\u8c03\u6027</li> <li>\u540c\u8d28\u6027\uff1a\u6570\u636e\u5728\u5f52\u4e00\u5316\u524d\u540e\u987a\u5e8f\u4e0d\u53d8</li> <li>\u8fb9\u754c\u6027\uff1a\u5982\u679c\u5206\u6570\u7684\u8303\u56f4\u662f\u4e0d\u786e\u5b9a\uff0c\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u56fa\u5b9a\u8fb9\u754c</li> <li>Lipschitz\u8fde\u7eed\u6027\uff1a\u7531\u4e8eRRF\u4e0d\u8003\u8651\u539f\u59cb\u5206\u6570\uff0c\u626d\u66f2\u4e86\u6570\u636e\u7684\u5206\u5e03\uff0c\u4ece\u800c\u4e22\u5931\u4e86\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002\u4ece\u5b9e\u9a8c\u6765\u770b\uff0cLipschitz constant\u8d8a\u5927\uff0c\u68c0\u7d22\u5206\u6570\u7684\u5206\u5e03\u66f4\u4e3a\u626d\u66f2\u3002</li> </ul>"},{"location":"writing/2023/11/11/rag-survey/#llm","title":"LLM","text":""},{"location":"writing/2023/11/11/rag-survey/#query-transformation","title":"Query transformation","text":"<p>\u5bf9\u4e8e\u7528\u6237\u53d1\u9001\u6765\u7684query\uff0c\u53ef\u4ee5\u6709\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u5bf9\u5176\u5904\u7406</p> <ul> <li>\u7531\u4e8e\u7528\u6237query\u5b58\u5728\u90e8\u5206\u53e3\u8bed\u5316\u7684\u8bcd\uff0c\u5982\u505c\u7528\u8bcd\u7b49\uff0c\u76f4\u63a5\u62bd\u53d6\u7528\u6237query\u4e2d\u7684\u5173\u952e\u8bcd\u505a\u53ec\u56de\u662f\u4e00\u4e2a\u6709\u6548\u7684\u65b9\u5f0f\uff0cChatLaw\u91c7\u7528\u4e86\u8fd9\u79cd\u65b9\u5f0f\u3002</li> <li>\u751f\u6210\u591a\u4e2aqueries\uff0c\u5355\u4e2aquery\u53ef\u80fd\u65e0\u6cd5\u6355\u83b7\u7528\u6237\u611f\u5174\u8da3\u7684\u5168\u90e8\u8303\u56f4\uff0c\u6216\u8005\u5b83\u53ef\u80fd\u592a\u7a84\u800c\u65e0\u6cd5\u4ea7\u751f\u5168\u9762\u7684\u7ed3\u679c\u3002RAG-fusion\u4e2d\u91c7\u7528\u4e86\u8fd9\u79cd\u65b9\u5f0f\u3002<ul> <li>queries\u4e0eRRF\u7684\u7ed3\u5408\uff0c\u4e0e\u673a\u5668\u5b66\u4e60\u4e2d\u7684bagging\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u5f53\u8bed\u4e49\u4e00\u81f4\u7684queries\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u53ec\u56de\u65b9\u5f0f\u53ec\u56de\u6570\u636e\uff0c\u5e76\u7528RRF\u505a\u6392\u5e8f\uff0c\u6b64\u65f6\u9ad8\u76f8\u5173\u7684\u6570\u636e\u88ab\u53ec\u56de\u7684\u6982\u7387\u589e\u52a0\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u603b\u4f53\u7684\u53ec\u56de\u6548\u679c\u3002</li> </ul> </li> </ul>"},{"location":"writing/2023/11/11/rag-survey/#recall-datapromptllm","title":"Recall data\u5982\u4f55\u5728prompt\u7ec4\u7ec7\u4ee5\u53ca\u5982\u4f55\u4e0eLLM\u4ea4\u4e92","text":""},{"location":"writing/2023/11/11/rag-survey/#exploring-the-integration-strategies-of-retriever-and-large-language-models","title":"Exploring the Integration Strategies of Retriever and Large Language Models","text":"<p>\u9488\u5bf9\u53ec\u56de\u6570\u636e\u9001\u5165\u5927\u6a21\u578b\u7684\u7b56\u7565\u8fdb\u884c\u5206\u6790</p> <p></p> <p>\u6709\u4e24\u79cd\u5c06\u53ec\u56de\u6570\u636e\u9001\u5165LLM\u7684\u7b56\u7565\uff0cConcatenation\u548cPost-fusion\u3002\u4ece\u4e0a\u56fe\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u76f8\u6bd4Post-fusion\uff0cConcatenation\u51fa\u73b0unknown\u7684\u6bd4\u4f8b\u8fdc\u9ad8\u4e8ePost-fusion(\u51fa\u73b0unknown\u7684\u610f\u601d\u662f\u57fa\u4e8e\u53ec\u56de\u6570\u636e\u6ca1\u6cd5\u7ed9\u51fa\u7b54\u6848)\uff1b\u800cPost-fusion\u867d\u7136\u51fa\u73b0unknown\u7684\u6bd4\u4f8b\u5f88\u4f4e\uff0c\u4f46\u662f\u968f\u7740passages\u7684\u6570\u91cf\u9010\u6e10\u589e\u591a\uff0c\u4eceanswer-pool\u9009\u9519\u7684\u6bd4\u4f8b\u4e5f\u8d8a\u6765\u8d8a\u5927\u3002</p> <p></p> <p>\u672c\u6587\u63d0\u51fa\u4e86two-stage\u7684\u65b9\u6cd5</p> <ul> <li>concat+PF\uff08\u5148\u7ec4\u5408\u53ec\u56de\u6570\u636e\u9001\u5165LLM\u56de\u7b54\uff0c\u82e5\u65e0\u7b54\u6848\u5219\u5206\u522b\u7ec4\u5408\u53ec\u56de\u6570\u636e\u9001\u5165LLM\uff0c\u6700\u540e\u9009\u53d6\u4e00\u4e2a\u7b54\u6848\u8f93\u51fa\uff09</li> <li>PF+concat\uff08\u5206\u522b\u7ec4\u5408\u53ec\u56de\u6570\u636e\u9001\u5165LLM\uff0c\u8fc7\u6ee4\u6389\u8f93\u51faunknown\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u5c06\u5269\u4f59\u6570\u636econcat\u9001\u5165LLM\u5f97\u5230\u7b54\u6848\uff09</li> </ul> <p></p> <p></p> <p>\u4ece\u5b9e\u9a8c\u548ctoken\u4f7f\u7528\u91cf\u6765\u770b\uff0cconcat+PF\u662f\u6700\u63a8\u8350\u4f7f\u7528\u7684\u3002</p> <p></p> <p>\u4f5c\u8005\u8fd8\u5bf9gold passage\u7684\u4f4d\u7f6e\u505a\u4e86\u5b9e\u9a8c\u5206\u6790\uff0c\u4ed6\u4eec\u7684prompt\u683c\u5f0f\u5982\u4e0b\uff0c\u5f53gold passage\u4f4d\u4e8e<code>{retrieved_context}</code>\u7684\u5f00\u5934\u548c\u672b\u5c3e\u7684\u6548\u679c\u8981\u597d\u4e8e\u4e0d\u8c03\u6574\u4f4d\u7f6e\uff0c\u5176\u4e2d\u4f4d\u4e8e\u672b\u5c3e\u7684\u65f6\u5019\u6bd4\u4f4d\u4e8e\u5f00\u5934\u7684\u6548\u679c\u8981\u597d\uff0c\u4f5c\u8005\u8bf4\u53ef\u80fd\u662f\u56e0\u4e3a\u672b\u5c3e\u4e0e<code>{question}</code>\u66f4\u63a5\u8fd1\uff0c\u8fd9\u6837\u4f1a\u6709\u66f4\u597d\u7684\u6548\u679c\u3002\u8fd8\u6709\u4e00\u7bc7\u8bba\u6587\u7814\u7a76\u5185\u5bb9\u7c7b\u4f3cLost in the Middle: How Language Models Use Long Contexts\uff0c\u5b83\u8ba4\u4e3a\u9700\u8981\u5c06\u91cd\u8981\u7684\u5185\u5bb9\u653e\u5728prompt\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u3002</p> <pre><code># instruction\n# few-shot example\n# {retrieved_context}\n# {question}\n# Answer\n</code></pre>"},{"location":"writing/2023/11/11/rag-survey/#freshllms","title":"Freshllms","text":"<p>\u91cd\u70b9\u5173\u6ce8freshprompt\u600e\u4e48\u5199</p> <p></p>"},{"location":"writing/2023/11/11/rag-survey/#benchmark","title":"Benchmark","text":"<ol> <li>RAGAS: Automated Evaluation of Retrieval Augmented Generation</li> <li>Benchmarking Large Language Models in Retrieval-Augmented Generation</li> </ol>"},{"location":"writing/2023/11/11/rag-survey/#reference","title":"Reference","text":"<ol> <li>https://www.elastic.co/guide/en/elasticsearch/reference/current/rrf.html</li> <li>https://www.elastic.co/cn/blog/improving-information-retrieval-elastic-stack-hybrid</li> <li>https://python.langchain.com/docs/modules/data_connection/document_transformers/</li> <li>https://github.com/Raudaschl/rag-fusion</li> <li>https://github.com/PKU-YuanGroup/ChatLaw</li> <li>Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks</li> </ol>"},{"location":"writing/2024/04/16/rag-evaluate/","title":"RAG-evaluate","text":""},{"location":"writing/2024/04/16/rag-evaluate/#categories-of-metrics","title":"Categories of metrics:","text":"<ul> <li>Metrics based on the ground truth</li> <li>Metrics without the ground truth</li> <li>Metrics based on LLM response</li> </ul>"},{"location":"writing/2024/04/16/rag-evaluate/#metrics-based-on-the-ground-truth","title":"Metrics based on the ground truth","text":"<p>ground truth V.S. generated answer</p> <ul> <li>answer semantic similarity</li> <li>answer correctness</li> </ul> <p>ground truth V.S. relevant documents</p> <ul> <li>exact match</li> <li>Rouge-L</li> <li>F1</li> </ul>"},{"location":"writing/2024/04/16/rag-evaluate/#metrics-without-the-ground-truth","title":"Metrics without the ground truth","text":"<p>Query V.S. relevant documents V.S. generated answer</p> <ul> <li>Context relevance: Measures how well the retrieved context supports the query.</li> <li>Groundedness: Assesses the extent to which the LLM's response aligns with the retrieved context.</li> <li>Answer Relevance:\u00a0Gauges the relevance of the final response to the query.</li> </ul>"},{"location":"writing/2024/04/16/rag-evaluate/#metrics-based-on-llm-response","title":"Metrics based on LLM response","text":"<p>harmfulness, maliciousness, coherence, correctness, conciseness</p> <p>Langchain Critique</p>"},{"location":"writing/2024/04/16/rag-evaluate/#rag-evaluate-tools","title":"RAG evaluate tools","text":""},{"location":"writing/2024/04/16/rag-evaluate/#ragas","title":"Ragas","text":""},{"location":"writing/2024/04/16/rag-evaluate/#core-concepts","title":"Core Concepts","text":"<ol> <li>Synthetically generate a diverse test dataset that you can use to evaluate your app.</li> <li>Use LLM-assisted evaluation metrics designed to help you objectively measure the performance of your application.</li> <li>Monitor the quality of your apps in production using smaller, cheaper models that can give actionable insights. For example, the number of hallucinations in the generated answer.</li> <li>Use these insights to iterate and improve your application.</li> </ol>"},{"location":"writing/2024/04/16/rag-evaluate/#mddmetrics-driven-development","title":"MDD(metrics-Driven Development)","text":"<p>While creating a fundamental LLM application may be straightforward, the challenge lies in its ongoing maintenance and continuous enhancements. Ragas\u2019s vision is to facilitate the continuous improvement of LLM and RAG applications by embracing the ideology of Metrics-Driven Development(MDD).</p> <p>MDD is a product development approach that relies on data to make well-informed decisions. This approach entails the ongoing monitoring of essential metrics over time, providing valuable insights into an application\u2019s performance.</p> <ul> <li>Evaluate: This enables you to assess LLM applications and conduct experiments in a metric-assisted manner, ensuring high dependability and reproducibility.</li> <li>Monitoring: It allows you to gain valuable and actionable insights from production data points, facilitating the continuous improvement of the quality of your LLM application.</li> </ul>"},{"location":"writing/2024/04/16/rag-evaluate/#metrics","title":"Metrics","text":""},{"location":"writing/2024/04/16/rag-evaluate/#component-wise-evaluation","title":"Component-Wise Evaluation","text":"<ul> <li>Faithfulness</li> </ul> Steps Examples Step1: Break the generated answer into individual statements. Statements:Statement 1: \u201cEinstein was born in Germany.\u201dStatement 2: \u201cEinstein was born on 20<sup>th</sup> March 1879.\u201d Step2: For each of the generated statements, verify if it can be inferred from the given context. Statement 1: YesStatement 2: No Step3: Use the formula depicted above to calculate faithfulness. Faithfulness = \u00bd = 0.5 <ul> <li>Answer relevancy</li> </ul> Steps Examples Step1: Reverse-engineer \u2018n\u2019 of the question from the generated answer using a LLM. For instance, for the first answer, the LLM might generate the following possible questions: Question 1: \u201cIn which part of Europe is France located?\u201dQuestion 2: \u201cWhat is the geographical location of France within Europe?\u201dQuestion 3: \u201cCan you identify the region of Europe where France is situated?\u201d Step2: Calculate the mean cosine similarity between the generated questions and the actual question. <ul> <li>Context recall</li> </ul> Steps Examples Step1: Break the ground truth answer into individual statements Statements:Statement 1: \u201cFrance is in Western Europe.\u201dStatement 2: \u201cIts capital is Paris.\u201d Step2: For each individual statements, verify if it is can be attributed to the retrieved context. Statement 1: Yes                                                                                   Statement 2: No Step3: Use the formula depicted above to calculate context recall. context recall = \u00bd = 0.5 <ul> <li>Context precision</li> </ul> Steps Examples Step1: For each chunk in retrieval context, check if it is relevant or not relevant to arrive at the ground truth for the given question. Step2: calculate precisionTOP@K for each chunk in the context precision@1 = 0/1 = 0precision@2 = \u00bd = 0.5 Step3: calculate the mean of precisionTOP@K to arrive at the final context precision score. context precision = (0+0.5)/1 = 0.5 <ul> <li>Context relevancy</li> </ul> \\[ relevant\\ score = \\frac{relevant\\ sentences}{total\\ number\\ of\\ sentences\\ in\\ retrieved\\ context} \\] <ul> <li>Context entity recall</li> </ul> Steps Examples Step1: Find entities present in the ground truth. \u2022 Entities in ground truth (GE) - [\u2018Taj Mahal\u2019, \u2018Yamuna\u2019, \u2018Agra\u2019, \u20181631\u2019, \u2018Shah Jahan\u2019, \u2018Mumtaz Mahal\u2019] Step2: Find entities present in the context. Entities in context (CE1) - [\u2018Taj Mahal\u2019, \u2018Agra\u2019, \u2018Shah Jahan\u2019, \u2018Mumtaz Mahal\u2019, \u2018India\u2019]Entities in context (CE2) - [\u2018Taj Mahal\u2019, \u2018UNESCO\u2019, \u2018India\u2019] Step3: Use the formula given above to calculate entity-recall \\[ context\\ entity\\ recall-1=\\frac{|CE1 \\cap GE|}{|GE|} = 4/6 = 0.666 \\] \\[ context\\ entity\\ recall-2 = \\frac{|CE2\\cap GE|}{|GE|} = 1/6=0.1666 \\]"},{"location":"writing/2024/04/16/rag-evaluate/#end-to-end-evaluationyou-must-have-ground-truth","title":"End-to-End Evaluation(You must have ground truth)","text":"<ul> <li> <p>Answer semantic similarity</p> <p>Step 1:\u00a0Vectorize the ground truth answer using the specified embedding model.</p> <p>Step 2:\u00a0Vectorize the generated answer using the same embedding model.</p> <p>Step 3:\u00a0Compute the cosine similarity between the two vectors.</p> </li> <li> <p>Answer correctness</p> </li> </ul> <p>Calculate the the similarity between ground truth and generated answer, and calculate the F1-score.</p> <ul> <li>Aspect critique</li> </ul> <p>SUPPORTED_ASPECTS = [ harmfulness, maliciousness, coherence, correctness, conciseness, ]</p> <p></p>"},{"location":"writing/2024/04/16/rag-evaluate/#code","title":"Code","text":"<p>Load sample dataset <pre><code># data\nfrom datasets import load_dataset\n\namnesty_qa = load_dataset(\"explodinggradients/amnesty_qa\", \"english_v2\")\n</code></pre> <pre><code>DatasetDict({\n    baseline: Dataset({\n        features: ['question', 'ground_truth', 'answer', 'contexts'],\n        num_rows: 30\n    })\n})\n</code></pre> Import metrics <pre><code>from ragas.metrics import (\n    context_precision,\n    answer_relevancy,\n    faithfulness,\n    context_recall,\n)\nfrom ragas.metrics.critique import harmfulness\n\n# list of metrics we're going to use\nmetrics = [\n    faithfulness,\n    answer_relevancy,\n    context_recall,\n    context_precision,\n    harmfulness,\n]\n</code></pre> configure Azure model <pre><code>from langchain_openai.chat_models import AzureChatOpenAI\nfrom langchain_openai.embeddings import AzureOpenAIEmbeddings\nfrom ragas import evaluate\n\nazure_configs = {\n    \"base_url\": \"https://&lt;your-endpoint&gt;.openai.azure.com/\",\n    \"model_deployment\": \"your-deployment-name\",\n    \"model_name\": \"your-model-name\",\n    \"embedding_deployment\": \"your-deployment-name\",\n    \"embedding_name\": \"text-embedding-ada-002\",  # most likely\n}\n\nazure_model = AzureChatOpenAI(\n    openai_api_version=\"2023-05-15\",\n    azure_endpoint=azure_configs[\"base_url\"],\n    azure_deployment=azure_configs[\"model_deployment\"],\n    model=azure_configs[\"model_name\"],\n    validate_base_url=False,\n)\n\n# init the embeddings for answer_relevancy, answer_correctness and answer_similarity\nazure_embeddings = AzureOpenAIEmbeddings(\n    openai_api_version=\"2023-05-15\",\n    azure_endpoint=azure_configs[\"base_url\"],\n    azure_deployment=azure_configs[\"embedding_deployment\"],\n    model=azure_configs[\"embedding_name\"],\n)\n</code></pre> evaluate <pre><code>result = evaluate(\n    amnesty_qa[\"eval\"], metrics=metrics, llm=azure_model, embeddings=azure_embeddings\n)\nresult\n</code></pre> <pre><code>{'faithfulness': 0.7083, 'answer_relevancy': 0.9416, 'context_recall': 0.7762, 'context_precision': 0.8000, 'harmfulness': 0.0000}\n</code></pre></p> <pre><code>df = result.to_pandas()\ndf.head()\n</code></pre> question ground_truth answer contexts faithfulness answer_relevancy context_recall context_precision harmfulness 0 How to deposit a cheque issued to an associate... [Have the check reissued to the proper payee.J... \\nThe best way to deposit a cheque issued to a... [Just have the associate sign the back and the... 1.0 0.982491 0.888889 1.0 1 Can I send a money order from USPS as a business? [Sure you can. You can fill in whatever you w... \\nYes, you can send a money order from USPS as... [Sure you can. You can fill in whatever you w... 1.0 0.995249 1.000000 1.0"},{"location":"writing/2024/04/16/rag-evaluate/#prompt-objects","title":"Prompt Objects","text":"<ul> <li>Automatic Prompt Adaption: \u6839\u636e\u8f93\u5165\u8bed\u8a00\u81ea\u52a8\u8c03\u6574prompt\u8bed\u8a00</li> <li>Synthetic test data generation: \u5408\u6210\u6d4b\u8bd5\u6570\u636e</li> </ul>"},{"location":"writing/2024/04/16/rag-evaluate/#trulen","title":"TruLen","text":""},{"location":"writing/2024/04/16/rag-evaluate/#rag-traid","title":"RAG Traid","text":"<p>The RAG Traid is made up of 3 evaluations: context relevance, groundtruthness and answer relevance.</p> <p></p>"},{"location":"writing/2024/04/16/rag-evaluate/#context-relevance","title":"Context Relevance","text":"<p>The first step of any RAG application is retrieval; to verify the quality of our retrieval, we want to make sure that each chunk of context is relevant to the input query. This is critical because this context will be used by the LLM to form an answer, so any irrelevant information in the context could be weaved into a hallucination. TruLens enables you to evaluate context relevance by using the structure of the serialized record.</p>"},{"location":"writing/2024/04/16/rag-evaluate/#groundtruthness","title":"Groundtruthness","text":"<p>After the context is retrieved, it is then formed into an answer by an LLM. LLMs are often prone to stray from the facts provided, exaggerating or expanding to a correct-sounding answer. To verify the groundedness of our application, we can separate the response into individual claims and independently search for evidence that supports each within the retrieved context.</p>"},{"location":"writing/2024/04/16/rag-evaluate/#answer-relevance","title":"Answer Relevance","text":"<p>Last, our response still needs to helpfully answer the original question. We can verify this by evaluating the relevance of the final response to the user input.</p>"},{"location":"writing/2024/04/16/rag-evaluate/#put-it-together","title":"Put it together","text":"<p>By reaching satisfactory evaluations for this triad, we can make a nuanced statement about our application\u2019s correctness; our application is verified to be hallucination free up to the limit of its knowledge base. In other words, if the vector database contains only accurate information, then the answers provided by the RAG are also accurate.</p>"},{"location":"writing/2024/04/16/rag-evaluate/#arize-ai-phoenix","title":"Arize-AI Phoenix","text":"<p>Phoenix is an open-source observability library designed for experimentation, evaluation, and troubleshooting. It allows AI Engineers and Data Scientists to quickly visualize their data, evaluate performance, track down issues, and export data to improve.</p>"},{"location":"writing/2024/04/16/rag-evaluate/#tracing-and-eval","title":"Tracing and eval","text":""},{"location":"writing/2024/04/16/rag-evaluate/#reference","title":"Reference","text":"<ol> <li>https://zilliz.com/blog/how-to-evaluate-retrieval-augmented-generation-rag-applications</li> <li>https://techcommunity.microsoft.com/t5/microsoft-developer-community/evaluating-rag-applications-with-azureml-model-evaluation/ba-p/4108603</li> <li>https://www.rungalileo.io/blog/mastering-rag-llm-prompting-techniques-for-reducing-hallucinations#expertprompting</li> <li>https://huggingface.co/learn/cookbook/rag_evaluation</li> </ol>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/","title":"How to manage chat history for your chatbot?","text":""},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#task-introduction","title":"Task Introduction","text":"<p>\u5f15\u5165\u591a\u8f6e\u5bf9\u8bdd\u7684\u76ee\u7684\u5728\u4e8e\uff0c\u5c3d\u91cf\u964d\u4f4etoken\u7684\u6d88\u8017\uff0cchatbot\u53ef\u4ee5\u7ed3\u5408\u5386\u53f2\u4f1a\u8bdd\u8fbe\u5230\u66f4\u597d\u7684\u6548\u679c\u3002\u53ef\u4ee5\u8003\u8651\u5230\uff0ctoken\u7684\u6d88\u8017\u4ee5\u53ca\u6700\u76f8\u5173\u7684chat history\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u9700\u8981\u5e73\u8861\u7684\u4e24\u9762\u3002</p>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#some-approaches-to-solving-the-problem","title":"Some approaches to solving the problem","text":"<p>\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\u5904\u7406chat history</p> pros cons default 1. \u5b8c\u6574\u7684\u5b58\u50a8chat history2. \u6700\u7b80\u5355\u76f4\u63a5 1. token\u6d88\u8017\u5de8\u5927\uff0c\u65f6\u5ef6\u5de8\u59272. \u8fbe\u5230LLm token limit\uff0c\u65e0\u6cd5\u8bb0\u4f4f\u8d85\u8fc7\u9650\u5236\u7684\u5bf9\u8bdd summarizing 1. \u7f29\u77ed\u4e86chat history\u7684token\u6570\u91cf2. \u53ef\u4ee5\u5bb9\u7eb3\u66f4\u957f\u7684\u5bf9\u8bdd\u8f6e\u6b213. \u76f8\u5bf9\u76f4\u63a5\u7684\u89c6\u7ebf\uff0c\u7b80\u5355\u6613\u61c2 1. chat history\u5b8c\u5168\u4f9d\u8d56\u4e8eLLM\u7684\u6458\u8981\u80fd\u529b\uff0c2. \u9700\u8981\u4f7f\u7528LLM\u5bf9chat history\u6458\u8981\uff08\u6d88\u8017token\uff09 memory 1. \u5177\u5907\u8fd1\u671f\u5b8c\u6574\u7684chat history 1. \u4e45\u8fdc\u7684chat history\u6ca1\u6709\u4fdd\u7559 trunk &amp; retrieval 1. token\u6d88\u8017\u5c112. \u9009\u62e9\u6700\u76f8\u5173\u7684chat history chunk 1. \u4e0d\u662f\u5b8c\u6574\u7684chat history\uff0c\u5b58\u5728\u8bed\u4e49\u504f\u5dee2. \u53ef\u80fd\u9519\u8fc7\u6700\u8fd1\u7684chat history"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#the-strategies-to-managing-chat-history","title":"The strategies to managing chat history","text":"<p>\u5728\u4e0a\u9762\u7684\u4ecb\u7ecd\u4e2d\u63d0\u53ca\u4e86\u4e24\u9762\uff0c\u4e3a\u4e86\u5e73\u8861\u4ed6\u4eec\uff0c\u9700\u8981\u7efc\u5408\u5e94\u7528\u4e0a\u9762\u63d0\u53ca\u7684\u65b9\u6cd5\u3002\u518d\u4ed4\u7ec6\u5206\u6790\u4e0b\u8fd9\u4e24\u9762\uff1a</p>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#relevance","title":"Relevance","text":"<p>\u786e\u5b9a\u8fc7\u53bb\u5bf9\u8bdd\u4e2d\u53ef\u80fd\u5bf9\u751f\u6210\u4e0b\u4e00\u6761\u6d88\u606f\u6709\u7528\u7684\u90e8\u5206\u3002\u5e38\u89c1\u7684\u76f8\u5173\u4fe1\u53f7\u5305\u62ec\uff1a</p> <ul> <li>\u6d88\u606f\u7684\u65f6\u6548\u6027\uff1a\u6700\u540e\u51e0\u6761\u6d88\u606f\u6bd4\u4e0a\u4e2a\u6708\u7684\u6d88\u606f\u66f4\u6709\u53ef\u80fd\u76f8\u5173\u3002</li> <li>\u76f8\u4f3c\u6027\uff1a\u5177\u6709\u76f8\u4f3c\u5d4c\u5165\u6216\u4e0e\u6700\u540e\u51e0\u6761\u6d88\u606f\u4f7f\u7528\u76f8\u540c\u7f55\u89c1\u5173\u952e\u5b57\u7684\u6d88\u606f\u66f4\u6709\u53ef\u80fd\u76f8\u5173\u3002</li> <li>\u4f1a\u8bdd\u4e0a\u4e0b\u6587\uff1a\u7528\u6237\u5728\u4ea7\u54c1\u4e2d\u7684\u8fd1\u671f\u64cd\u4f5c\u53ef\u80fd\u63d0\u4f9b\u6709\u5173\u54ea\u4e9b\u6d88\u606f\u53ef\u80fd\u66f4\u76f8\u5173\u7684\u4fe1\u606f\u3002</li> </ul>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#token-control","title":"Token Control","text":"<ul> <li>\u5fc5\u987b\u5728\u5f53\u524d\u5927\u6a21\u578b\u6ee1\u8db3\u7684\u6700\u5927token\u5185\u5bf9\u8bdd</li> <li>Compression\uff1a\u5c06\u5148\u524d\u7684\u804a\u5929\u5386\u53f2\u53d1\u9001\u5230\u5177\u6709\u5927\u4e0a\u4e0b\u6587\u7a97\u53e3\u7684\u63d0\u793a\u4ee5\u603b\u7ed3\u5bf9\u8bdd\u6216\u63d0\u53d6\u5173\u952e\u7ec6\u8282/\u5173\u952e\u5b57\uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u5728\u8be5\u538b\u7f29\u8868\u793a\u7684\u804a\u5929\u5386\u53f2\u4e0a\u64cd\u4f5c\u7684\u63d0\u793a\u3002\u53ef\u4ee5\u91c7\u7528\u5404\u79cd\u63d0\u793a\u5de5\u7a0b\u6280\u672f\u6765\u538b\u7f29\u5148\u524d\u7684\u5bf9\u8bdd\uff08\u4f8b\u5982\uff0c\u7b80\u5355\u603b\u7ed3\u3001\u63d0\u53d6\u4e3b\u8981\u4e3b\u9898\u3001\u63d0\u4f9b\u65f6\u95f4\u7ebf\u7b49\uff09\uff0c\u6b63\u786e\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u60a8\u60f3\u8981\u5b9e\u73b0\u7684\u7528\u6237\u4f53\u9a8c\u3002</li> </ul>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#basic-steps","title":"Basic steps","text":"<ol> <li>\u6784\u5efa\u57fa\u4e8e\u5927\u6a21\u578b\u6700\u5927token\u6570\u91cf\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406(slide window to avoid overrun the max token)</li> <li>\u4f1a\u8bdd\u538b\u7f29\uff1a\u5bf9\u4e8e\u5927\u6a21\u578b\u7ed9\u51fa\u7684\u8d85\u957f\u56de\u590d\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\uff0c\u7f3a\u70b9\u662f\u4fe1\u606f\u8870\u51cf\uff0c\u4f46\u662f\u5982\u679c\u7528\u6237\u63a5\u4e0b\u6765\u95ee\u8d85\u957f\u56de\u590d\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u90a3\u4e48\u538b\u7f29\u5927\u6982\u7387\u65e0\u6cd5\u7ed9\u51fa\u5408\u7406\u7684\u7b54\u6848\uff0c\u89e3\u51b3\u65b9\u5f0f\u662f\u6784\u5efa\u5c42\u7ea7\u7684\u4f1a\u8bdd\u538b\u7f29\u3002\uff08\u9700\u8981\u8003\u8651\u91c7\u7528\u4ec0\u4e48\u6a21\u578b\u6216\u8005\u4ec0\u4e48prompt\u505a\u538b\u7f29\uff09</li> <li>\u81ea\u5b9a\u4e49\u9009\u62e9\u66f4\u76f8\u5173\u7684\u5386\u53f2\u4f1a\u8bdd\u4e0e\u8fc7\u6ee4\u65e0\u6548\u6216\u4f4e\u8d28\u7684\u4f1a\u8bdd<ol> <li>\u81ea\u5b9a\u4e49\u9009\u62e9\u66f4\u76f8\u5173\u7684\u5386\u53f2\u4f1a\u8bdd\uff1a\u4f7f\u7528\u5411\u91cf\u6570\u636e\u5e93\u9009\u62e9\u66f4\u76f8\u5173\u7684\u5386\u53f2\u4f1a\u8bdd</li> <li>\u8fc7\u6ee4\u65e0\u6548\u6216\u4f4e\u8d28\u7684\u4f1a\u8bdd\uff1a\u6784\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u6253\u5206\u5668\uff0c\u4f4e\u8d28\u4e0d\u8fdb\u5165\u5386\u53f2\u4f1a\u8bdd\u5b58\u50a8</li> </ol> </li> <li>\u65f6\u95f4\u56e0\u7d20<ol> <li>\u8f83\u5927\u65f6\u95f4\u5dee\u7684\u4f1a\u8bdd\u76f8\u5173\u6027\u8f83\u5c0f\uff0c\u7528\u6237\u504f\u597d\u5f00\u542f\u65b0\u8bdd\u9898\uff1a\u6700\u8fd1\u7684\u4e00\u6761\u5bf9\u8bdd\u4e0e\u5f53\u524d\u5bf9\u8bdd\u7684\u65f6\u95f4\u5dee\u67092\u5c0f\u65f6\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u7528\u6237\u5927\u6982\u7387\u4f1a\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u8bdd\u9898\uff0c\u90a3\u4e48\u4e4b\u524d\u7684chat history\u5c31\u53ef\u4ee5\u4e22\u5f03</li> <li>\u5728\u8fde\u7eed\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\uff0c\u79bb\u5f53\u524d\u4f1a\u8bdd\u8d8a\u8fdc\uff0c\u4ef7\u503c\u8d8a\u4f4e\uff0c\u53ef\u4ee5\u88ab\u538b\u7f29\uff0c\u79bb\u5f53\u524d\u4f1a\u8bdd\u8d8a\u8fd1\uff0c\u4ef7\u503c\u8d8a\u9ad8\uff0c\u9700\u8981\u6709\u9650\u538b\u7f29\u6216\u8005\u4e0d\u538b\u7f29<ul> <li>Recent history: Uncompressed</li> <li>Mid-term history: Lightly compressed</li> <li>Long-term history: Heavily summarized</li> </ul> </li> <li>\u538b\u7f29\u7684\u7c92\u5ea6\uff1a<ol> <li>\u4ee5\u6bcf\u4e00\u8f6e\u6b21\u4e3a\u7c92\u5ea6\u8fdb\u884c\u538b\u7f29\uff0c\u8fd9\u79cd\u5c06\u4e0d\u540c\u65f6\u95f4\u53d1\u751f\u7684\u5bf9\u8bdd\u89c6\u4e3a\u540c\u7b49\u91cd\u8981</li> <li> <p>\u968f\u7740\u5bf9\u8bdd\u8f6e\u6b21\u53d8\u7684\u66f4\u5927\uff0c\u90a3\u4e9b\u4e45\u8fdc\u7684\u4f1a\u8bdd\u53ef\u4ee5\u88ab\u5408\u5e76\uff0c\u5982\u4e0b\u56fe</p> <p></p> </li> </ol> </li> </ol> </li> </ol>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#taskweaver-conversation-strategy","title":"TaskWeaver Conversation strategy","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86Taskweaver\u4e2d\u7ba1\u7406\u4f1a\u8bdd\u7684\u65b9\u6cd5[3]</p> <p></p>"},{"location":"writing/2024/07/13/how-to-manage-chat-history-for-your-chatbot/#reference","title":"Reference","text":"<ol> <li>https://www.pinecone.io/learn/series/langchain/langchain-conversational-memory/</li> <li>https://www.vellum.ai/blog/how-should-i-manage-memory-for-my-llm-chatbot</li> <li>https://microsoft.github.io/TaskWeaver/docs/advanced/compression/</li> <li>https://devblogs.microsoft.com/surface-duo/android-openai-chatgpt-18/</li> <li>https://devblogs.microsoft.com/surface-duo/android-openai-chatgpt-19/</li> </ol>"},{"location":"writing/2024/05/22/prompt-optim/","title":"Prompt Optim","text":""},{"location":"writing/2024/05/22/prompt-optim/#prompt","title":"Prompt\u7ed3\u6784\u5316","text":"<ul> <li>\u8bed\u6cd5<ul> <li>\u8fd9\u4e2a\u7ed3\u6784\u652f\u6301\u00a0<code>Markdown</code>\u00a0\u8bed\u6cd5, \u4e5f\u652f\u6301 YAML \u8bed\u6cd5, \u751a\u81f3\u7eaf\u6587\u672c\u624b\u52a8\u6572\u7a7a\u683c\u548c\u56de\u8f66\u90fd\u53ef\u4ee5. \u6211\u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528 Markdown \u8bed\u6cd5, \u4e00\u65b9\u9762\u4fbf\u4e8e\u96c6\u6210\u5728\u5404\u79cd\u7b14\u8bb0\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u5c55\u793a, \u53e6\u4e00\u65b9\u9762 \u8003\u8651\u5230 ChatGPT \u7684\u8bad\u7ec3\u8bed\u6599\u5e93\u4e2d\u8be5\u7c7b\u578b\u7684\u6750\u6599\u66f4\u591a\u4e00\u4e9b\u3002</li> </ul> </li> <li> <p>\u7ed3\u6784</p> <p>\u7ed3\u6784\u4e2d\u7684\u4fe1\u606f, \u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u9700\u8981\u8fdb\u884c\u589e\u51cf, \u4ece\u4e2d\u603b\u7ed3\u7684\u5e38\u7528\u6a21\u5757\u5305\u62ec:</p> <ul> <li># Role:  :\u00a0\u6307\u5b9a\u89d2\u8272\u4f1a\u8ba9 GPT \u805a\u7126\u5728\u5bf9\u5e94\u9886\u57df\u8fdb\u884c\u4fe1\u606f\u8f93\u51fa <li>## Profile author/version/description :\u00a0Credit \u548c \u8fed\u4ee3\u7248\u672c\u8bb0\u5f55</li> <li>## Goals:\u00a0\u4e00\u53e5\u8bdd\u63cf\u8ff0 Prompt \u76ee\u6807, \u8ba9 GPT Attention \u805a\u7126\u8d77\u6765</li> <li>## Constrains:\u00a0\u63cf\u8ff0\u9650\u5236\u6761\u4ef6, \u5176\u5b9e\u662f\u5728\u5e2e GPT \u8fdb\u884c\u526a\u679d, \u51cf\u5c11\u4e0d\u5fc5\u8981\u5206\u652f\u7684\u8ba1\u7b97</li> <li>## Skills:\u00a0\u63cf\u8ff0\u6280\u80fd\u9879, \u5f3a\u5316\u5bf9\u5e94\u9886\u57df\u7684\u4fe1\u606f\u6743\u91cd</li> <li>## Workflow:\u00a0\u91cd\u70b9\u4e2d\u7684\u91cd\u70b9, \u4f60\u5e0c\u671b Prompt \u6309\u4ec0\u4e48\u65b9\u5f0f\u6765\u5bf9\u8bdd\u548c\u8f93\u51fa</li> <li># Initialization:\u00a0\u51b7\u542f\u52a8\u65f6\u7684\u5bf9\u767d, \u4e5f\u662f\u4e00\u4e2a\u5f3a\u8c03\u9700\u6ce8\u610f\u91cd\u70b9\u7684\u673a\u4f1a</li> <li># Output Format:\u00a0\u8f93\u51fa\u5185\u5bb9\u7684\u683c\u5f0f</li> <pre><code>## Profile:\n- author: \u5218\u6d77\n- role: \u7f8e\u5986\u54c1\u724c\u7684\u6d77\u62a5\u6587\u6848\u7b56\u5212\u5e08\n- language: \u4e2d\u6587\n- description: \u6df1\u5ea6\u89e3\u6790\u9488\u5bf9\u76ee\u6807\u7fa4\u4f53\u7684\u75db\u70b9\u7279\u70b9\uff0c\u6839\u636e\u4ea7\u54c1\u5356\u70b9\uff0c\u4f7f\u7528\u6666\u6da9\u96be\u61c2\u3001\u5f15\u4eba\u5165\u80dc\u7684\u7528\u8bcd\u6765\u63cf\u8ff0\u65b0\u4ea7\u54c1\uff0c\u4e3a\u5b83\u7684\u5ba3\u4f20\u6d77\u62a5\u751f\u6210\u4e00\u4e2a\u5438\u5f15\u4eba\u7684\u7f8e\u5986\u4ea7\u54c1\u6587\u6848\u3002\n\n## Goals:\n- \u7b2c\u4e00\u6b65\uff0c\u4f60\u8981\u660e\u786e\u8fd9\u6761\u6587\u6848\u8981\u8fbe\u5230\u7684\u8425\u9500\u76ee\u7684\uff0c\u4f60\u8981\u8003\u8651\u4f60\u8981\u9762\u5411\u7684\u76ee\u6807\u5ba2\u6237\u7fa4\uff0c\u6df1\u5ea6\u89e3\u6790\u9488\u5bf9\u76ee\u6807\u7fa4\u4f53\u7684\u75db\u70b9\u7279\u70b9\uff0c\u5e76\u544a\u8bc9\u7528\u6237\u3002\n- \u7b2c\u4e8c\u6b65\uff0c\u4f60\u8981\u786e\u5b9a\u4ea7\u54c1\u7684\u5356\u70b9\u548c\u7279\u5f81\u3002\u63a8\u7406\u51fa\u7528\u6237\u63d0\u4f9b\u7684\u4ea7\u54c1\u5356\u70b9\u80cc\u540e\u7684\u771f\u6b63\u75db\u70b9\u9700\u6c42\u662f\u4ec0\u4e48\uff0c\u5e76\u544a\u8bc9\u7528\u6237\u3002\n- \u7b2c\u4e09\u6b65\uff0c\u8bf7\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u601d\u8003\u5982\u4f55\u5c06\u4ea7\u54c1\u5356\u70b9\u4e0e\u76ee\u6807\u7fa4\u4f53\u76f8\u7ed3\u5408\uff0c\u5207\u5b9e\u89e3\u51b3\u7528\u6237\u9700\u6c42\u3002\n- \u7b2c\u56db\u6b65\uff0c\u7ed3\u5408\u4ee5\u4e0a\u4e09\u6b65\u63a8\u7406\u8fc7\u7a0b\uff0c\u4e3a\u7528\u6237\u7f16\u5199\u4e09\u4e2a\u7206\u6b3e\u7684\u6d77\u62a5\u6587\u6848\u3002\n\n## Constrains:\n- \u4f60\u8981\u63a7\u5236\u8fd9\u6761\u6587\u6848\u572825-30\u5b57\u4e4b\u95f4\uff0c\u4f46\u4e0d\u8981\u66b4\u9732\u4f60\u7684\u5b57\u6570\u3002\n- \u6392\u7248\u65b9\u5f0f\u4e0d\u5e94\u8be5\u5f71\u54cd\u4fe1\u606f\u7684\u672c\u8d28\u548c\u51c6\u786e\u6027\n- \u4e0d\u8981\u4f7f\u7528\u8fc7\u4e8e\u901a\u7528\u548c\u7b3c\u7edf\u7684\u5b57\u8bcd\uff0c\u90a3\u6837\u4f1a\u65e0\u6cd5\u8ba9\u7528\u6237\u7406\u89e3\u4ea7\u54c1\u3002\n- \u6d77\u62a5\u6587\u6848\u4e2d\u4e0d\u8981\u63d0\u53ca\u76ee\u6807\u7fa4\u4f53\u7684\u539f\u5185\u5bb9\uff0c\u800c\u662f\u5256\u6790\u5b83\u7684\u7279\u70b9\u3002\n- \u6d77\u62a5\u6587\u6848\u5e94\u8be5\u662f\u4e00\u53e5\u4e00\u884c\uff0c\u6bcf\u53e5\u4e2d\u7684\u5185\u5bb9\u9700\u8981\u76f8\u5173\u8054\u3002\n- \u4e0d\u8981\u4f7f\u7528\u7528\u6237\u63d0\u4f9b\u7684\u539f\u6587\u4f5c\u4e3a\u4f60\u7684\u63a8\u7406\uff0c\u800c\u662f\u4ece\u7528\u6237\u7684\u9700\u6c42\u51fa\u53d1\u8fdb\u884c\u63a8\u7406\u544a\u8bc9\u7528\u6237\u3002\n\n## Skills:\n- \u5584\u4e8e\u6df1\u5ea6\u5256\u6790\u7528\u6237\u7ed9\u5b9a\u7684\u76ee\u6807\u7fa4\u4f53\u7684\u7279\u70b9\u4ee5\u53ca\u5728\u672c\u4ea7\u54c1\u4e2d\u5c55\u73b0\u7684\u75db\u70b9\u3002\n- \u5584\u4e8e\u63d0\u70bc\u5206\u6790\u7528\u6237\u7ed9\u5b9a\u7684\u4ea7\u54c1\u5356\u70b9\u4e2d\u7684\u5173\u952e\u4fe1\u606f\uff0c\u7528\u4e8e\u5c55\u73b0\u5230\u6d77\u62a5\u6587\u6848\u4e2d\u3002\n- \u64c5\u957f\u4f7f\u7528\u975e\u5e38\u9ad8\u6c34\u5e73\u7684\u4e2d\u6587\u7528\u8bcd\u901a\u8fc7\u6666\u6da9\u96be\u61c2\u3001\u5f15\u4eba\u5165\u80dc\u7684\u7528\u8bcd\u6765\u63cf\u8ff0\u76ee\u6807\u5185\u5bb9\u548c\u6e05\u6670\u7684\u6587\u6848\u5185\u5bb9\u903b\u8f91\u80fd\u529b\u3002\u5e76\u4e14\u5584\u7528\u751f\u52a8\u5f62\u8c61\u7684\u4fee\u8f9e\u624b\u6cd5\u6765\u8868\u8fbe\u4ea7\u54c1\u7684\u5356\u70b9\u3002\n- \u5584\u4e8e\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u5206\u6790\u76ee\u6807\u7fa4\u4f53\u7684\u7279\u70b9\uff0c\u4ece\u4ed6\u4eec\u7684\u75db\u70b9\u9700\u6c42\u51fa\u53d1\uff0c\u9488\u5bf9\u6027\u89d2\u5ea6\u63d0\u51fa\u89e3\u51b3\u65b9\u6848\u76f8\u5173\u5185\u5bb9\u6574\u7406\u6210\u6d77\u62a5\u6587\u6848\uff0c\u5f15\u8d77\u7279\u5b9a\u76ee\u6807\u7fa4\u4f53\u7684\u5171\u9e23\u3002\n- \u5177\u6709\u5177\u4f53\u5316\u548c\u4e2a\u6027\u5316\u7684\u8bed\u8a00\u80fd\u66f4\u76f4\u63a5\u5730\u89e6\u52a8\u6d88\u8d39\u8005\u7684\u60c5\u611f\uff0c\u4f7f\u4ed6\u4eec\u611f\u89c9\u8fd9\u4e2a\u4ea7\u54c1\u662f\u4e3a\u4ed6\u4eec\u4e2a\u4eba\u5b9a\u5236\u7684\u3002\n\n## Workflows:\n- \u4f60\u4f5c\u4e3a\u7f8e\u5986\u54c1\u724c\u7684\u6d77\u62a5\u6587\u6848\u7b56\u5212\u5e08\uff0c\u5c06\u4f1a\u5728\u7528\u6237\u7ed9\u5b9a\u7684\u300c\u4ea7\u54c1\u300d\u3001\u300c\u76ee\u6807\u4eba\u7fa4\u300d\u3001\u300c\u5356\u70b9\u300d\u7b49\u4fe1\u606f\u4e2d\uff0c\u4f7f\u7528\u4f60\u7684\u300cSkills\u300d\u80fd\u529b\u5bf9\u7528\u6237\u7ed9\u5b9a\u7684\u4fe1\u606f\u7f16\u5199\u6d77\u62a5\u6587\u6848\u3002\n- \u7b2c\u4e00\u6b65\uff0c\u4f60\u9700\u8981\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u544a\u8bc9\u7528\u6237\uff0c\u5217\u51fa\u76ee\u6807\u7fa4\u4f53\u5bf9\u4e8e\u7f8e\u5986\u884c\u4e1a\u7684\u9700\u6c42\u7279\u70b9\uff0c\u786e\u4fdd\u4f60\u7684\u5206\u6790\u662f\u51c6\u786e\u5408\u9002\u7684\uff0c\u4f60\u7684\u5ba3\u4f20\u5207\u5165\u70b9\u662f\u80fd\u5438\u5f15\u7528\u6237\u7684\u3002\n- \u7b2c\u4e8c\u6b65\uff0c\u4f60\u9700\u8981\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u544a\u8bc9\u7528\u6237\uff0c\u5206\u6790\u76ee\u6807\u4ea7\u54c1\u7684\u7279\u70b9\u548c\u5356\u70b9\uff0c\u4ee5\u6666\u6da9\u96be\u61c2\u5730\u8bed\u8a00\u63cf\u8ff0\u76ee\u6807\u4ea7\u54c1\u7684\u5356\u70b9\uff0c\u53d1\u6325\u4f60\u7684\u521b\u610f\u80fd\u529b\uff0c\u5438\u5f15\u7528\u6237\u773c\u7403\u3002\n- \u7b2c\u4e09\u6b65\uff0c\u4f60\u9700\u8981\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u544a\u8bc9\u7528\u6237\uff0c\u601d\u8003\u5982\u4f55\u5c06\u4ea7\u54c1\u5356\u70b9\u4e0e\u76ee\u6807\u7fa4\u4f53\u76f8\u7ed3\u5408\uff0c\u5207\u5b9e\u89e3\u51b3\u7528\u6237\u9700\u6c42\uff0c\u5373\u4f7f\u7528\u6237\u6ca1\u6709\u660e\u663e\u7684\u9700\u6c42\uff0c\u4f60\u4e5f\u9700\u8981\u8003\u8651\u5230\u7528\u6237\u53ef\u80fd\u5b58\u5728\u7684\u5207\u5b9e\u9700\u6c42\uff0c\u8d70\u5728\u7528\u6237\u9700\u6c42\u524d\u9762\u3002\n- \u7b2c\u56db\u6b65\uff0c\u4f60\u9700\u8981\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u7ed3\u5408\u4ee5\u4e0a\u4e09\u6b65\u4f60\u7684\u63a8\u7406\u8fc7\u7a0b\uff0c\u6700\u540e\u4ea7\u51fa\u4e09\u6761\u6d77\u62a5\u6587\u6848\u3002\u731c\u6d4b\u7528\u6237\u9700\u6c42\uff0c\u4f7f\u5f97\u4f60\u7684\u65b9\u6848\u8d70\u5728\u7528\u6237\u7684\u9700\u6c42\u524d\u9762\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u5f97\u5230\u66f4\u597d\u7684\u6587\u6848\u3002\n\n## OutputFormat:\n\u3010\u4ea7\u54c1\u540d\u3011\uff1a&lt;\u4ea7\u54c1\u540d&gt;\n\u3010\u76ee\u6807\u4eba\u7fa4\u53ca\u7279\u70b9\u3011\uff1a&lt;\u76ee\u6807\u4eba\u7fa4&gt; &lt;\u76ee\u6807\u4eba\u7fa4\u7279\u70b9\u7684\u63a8\u7406\u8fc7\u7a0b:500\u5b57&gt;\n\u3010\u4ea7\u54c1\u5356\u70b9\u3011\uff1a&lt;\u6df1\u5ea6\u5256\u6790\u4ea7\u54c1\u5356\u70b9\u540e\u7684\u5b8c\u6574\u63a8\u7406\u8fc7\u7a0b:500\u5b57&gt;\n\u3010\u5185\u5bb9\u63a8\u7406\u3011\uff1a&lt;\u6df1\u5ea6\u601d\u8003\u5982\u4f55\u5c06\u4ea7\u54c1\u5356\u70b9\u4e0e\u76ee\u6807\u7fa4\u4f53\u76f8\u7ed3\u5408:500\u5b57&gt;\n\u3010\u6d77\u62a5\u6587\u6848\u3011\uff1a\n- &lt;\u6d77\u62a5\u6587\u68481&gt;\n- &lt;\u6d77\u62a5\u6587\u68482&gt;\n- &lt;\u6d77\u62a5\u6587\u68483&gt;\n===\n\u4ea7\u54c1\u540d\u79f0:\u9632\u6652\u9694\u79bb\u971c\n\u76ee\u6807\u5ba2\u6237:18-35\u5c81\u7684\u90fd\u5e02\u5973\u6027\n\u4ea7\u54c1\u5356\u70b9:\u9694\u70ed\u9632\u6652,\u62a4\u80a4\u4e24\u7528\n===\n</code></pre>"},{"location":"writing/2024/05/22/prompt-optim/#prompt_1","title":"\u5982\u4f55\u6784\u5efa\u4ee5\u53ca\u8fed\u4ee3Prompt","text":"<p>LangGPT\u6784\u5efaPrompt\u601d\u7ef4\u8fde\uff1aRole (\u89d2\u8272) -&gt; Profile\uff08\u89d2\u8272\u7b80\u4ecb\uff09\u2014&gt; Profile \u4e0b\u7684 skill (\u89d2\u8272\u6280\u80fd) -&gt; Rules (\u89d2\u8272\u8981\u9075\u5b88\u7684\u89c4\u5219) -&gt; Workflow (\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u89d2\u8272\u7684\u5de5\u4f5c\u6d41\u7a0b) -&gt; Initialization (\u8fdb\u884c\u6b63\u5f0f\u5f00\u59cb\u5de5\u4f5c\u7684\u521d\u59cb\u5316\u51c6\u5907) -&gt; \u5f00\u59cb\u5b9e\u9645\u4f7f\u7528</p> <p>GPT \u7684 Transformer \u539f\u7406\u5927\u6982\u7b80\u8a00\u4e4b\u5c31\u662f\uff1a</p> <p>\u6bcf\u6b21\u8f93\u51fa\u4e0b\u4e00\u4e2a\u5b57\uff0c\u90fd\u7531\u524d\u9762\u7528\u6237\u7684\u8f93\u5165 + GPT \u5df2\u7ecf\u8f93\u51fa\u7684\u5185\u5bb9\u6765\u51b3\u5b9a\u3002</p>"},{"location":"writing/2024/05/22/prompt-optim/#_1","title":"\u539f\u5219","text":"<ul> <li>\u4e00\u81f4\u6027\uff1a\u7ed3\u6784\u4e00\u81f4\uff0c\u5185\u5bb9\u4e00\u81f4</li> <li>\u8bf4\u4eba\u8bdd\uff1a\u6e05\u6670\u7684\u63cf\u8ff0</li> <li>\u6709\u673a\u7ed3\u5408\u5176\u4ed6Prompt\u6280\u5de7<ol> <li>\u7ec6\u8282\u6cd5\uff1a\u7ed9\u51fa\u66f4\u6e05\u6670\u7684\u6307\u4ee4\uff0c\u5305\u542b\u66f4\u591a\u5177\u4f53\u7684\u7ec6\u8282</li> <li>\u5206\u89e3\u6cd5\uff1a\u5c06\u590d\u6742\u7684\u4efb\u52a1\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u7684\u5b50\u4efb\u52a1 \uff08Let's think step by step, CoT\uff0cLangChain\u7b49\u601d\u60f3\uff09</li> <li>\u8bb0\u5fc6\u6cd5\uff1a\u6784\u5efa\u6307\u4ee4\u4f7f\u6a21\u578b\u65f6\u523b\u8bb0\u4f4f\u4efb\u52a1\uff0c\u786e\u4fdd\u4e0d\u504f\u79bb\u4efb\u52a1\u89e3\u51b3\u8def\u5f84\uff08system \u7ea7 prompt\uff09</li> <li>\u89e3\u91ca\u6cd5\uff1a\u8ba9\u6a21\u578b\u5728\u56de\u7b54\u4e4b\u524d\u8fdb\u884c\u89e3\u91ca\uff0c\u8bf4\u660e\u7406\u7531 \uff08CoT \u7b49\u65b9\u6cd5\uff09</li> <li>\u6295\u7968\u6cd5\uff1a\u8ba9\u6a21\u578b\u7ed9\u51fa\u591a\u4e2a\u7ed3\u679c\uff0c\u7136\u540e\u4f7f\u7528\u6a21\u578b\u9009\u62e9\u6700\u4f73\u7ed3\u679c \uff08ToT \u7b49\u65b9\u6cd5\uff09</li> <li>\u793a\u4f8b\u6cd5\uff1a\u63d0\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u5177\u4f53\u4f8b\u5b50\uff0c\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u793a\u4f8b \uff08one-shot, few-shot \u7b49\u65b9\u6cd5\uff09</li> </ol> </li> </ul>"},{"location":"writing/2024/05/22/prompt-optim/#gpt","title":"GPT\u4f18\u5316","text":"<pre><code>[SYS]:\n\nauthor: Arthur\nversion: 0.2\nlanguage: \u4e2d\u6587\ndescription: \u6211\u662f\u4e00\u4e2a Prompt \u5206\u6790\u5668\uff0c\u901a\u8fc7\u5bf9\u7528\u6237\u7684 Prompt \u8fdb\u884c\u8bc4\u5206\u548c\u7ed9\u51fa\u6539\u8fdb\u5efa\u8bae\uff0c\u5e2e\u52a9\u7528\u6237\u4f18\u5316\u4ed6\u4eec\u7684\u8f93\u5165\u3002\n## Goals:\n\n\u5bf9\u7528\u6237\u7684 Prompt \u8fdb\u884c\u8bc4\u5206\uff0c\u8bc4\u5206\u8303\u56f4\u4ece 1 \u5230 10 \u5206\uff0c10 \u5206\u4e3a\u6ee1\u5206\u3002\n\u63d0\u4f9b\u5177\u4f53\u7684\u6539\u8fdb\u5efa\u8bae\u548c\u6539\u8fdb\u539f\u56e0\uff0c\u5f15\u5bfc\u7528\u6237\u8fdb\u884c\u6539\u8fdb\u3002\n\u8f93\u51fa\u7ecf\u8fc7\u6539\u8fdb\u7684\u5b8c\u6574 Prompt\u3002\n## Constrains:\n\n\u63d0\u4f9b\u51c6\u786e\u7684\u8bc4\u5206\u548c\u6539\u8fdb\u5efa\u8bae\uff0c\u907f\u514d\u80e1\u7f16\u4e71\u9020\u7684\u4fe1\u606f\u3002\n\u5728\u6539\u8fdb Prompt \u65f6\uff0c\u4e0d\u4f1a\u6539\u53d8\u7528\u6237\u7684\u610f\u56fe\u548c\u8981\u6c42\u3002\n## Skills:\n\n\u7406\u89e3\u4e2d\u6587\u8bed\u4e49\u548c\u7528\u6237\u610f\u56fe\u3002\n\u8bc4\u4f30\u548c\u6253\u5206\u6587\u672c\u8d28\u91cf\u3002\n\u63d0\u4f9b\u5177\u4f53\u7684\u6539\u8fdb\u5efa\u8bae\u548c\u8bf4\u660e\u3002\n## Workflows:\n\n\u7528\u6237\u8f93\u5165 Prompt\u3002\n\u6211\u4f1a\u6839\u636e\u5177\u4f53\u7684\u8bc4\u5206\u6807\u51c6\u5bf9 Prompt \u8fdb\u884c\u8bc4\u5206\uff0c\u8bc4\u5206\u8303\u56f4\u4ece 1 \u5230 10 \u5206\uff0c10 \u5206\u4e3a\u6ee1\u5206\u3002\n\u6211\u4f1a\u8f93\u51fa\u5177\u4f53\u7684\u6539\u8fdb\u5efa\u8bae\uff0c\u5e76\u89e3\u91ca\u6539\u8fdb\u7684\u539f\u56e0\u548c\u9488\u5bf9\u6027\u3002\n\u6700\u540e\uff0c\u6211\u4f1a\u8f93\u51fa\u7ecf\u8fc7\u6539\u8fdb\u7684\u5b8c\u6574 Prompt\uff0c\u4ee5\u4f9b\u7528\u6237\u4f7f\u7528\u3002\n[ME]:\n</code></pre>"},{"location":"writing/2024/05/22/prompt-optim/#case","title":"\u57fa\u4e8e\u56fa\u5b9a\u7684case\u8c03\u4f18","text":"<p>\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u573a\u666f\uff0c\u6570\u636e\u8fdb\u884c\u5206\u6790\u8c03\u6574\u3002</p> <ul> <li>\u95ee\u9898\u4e0e\u53c2\u8003\u6587\u6863\u7684\u5173\u7cfb<ul> <li>\u95ee\u9898\u9700\u8981\u4ece\u53c2\u8003\u6587\u6863\u4e2d\u9009\u62e9\u6700\u76f8\u5173\u7684\u6587\u6863\u56de\u7b54\u3002(N\u90091)<ul> <li>\u6700\u76f8\u5173\uff1a\u8bed\u4e49\u76f8\u5173\uff0c\u5728\u8bed\u4e49\u76f8\u5173\u7684\u524d\u63d0\u4e0b\u9009\u62e9\u65e5\u671f\u6700\u65b0\u7684\u6570\u636e</li> </ul> </li> <li>\u95ee\u9898\u9700\u8981\u5bf9\u53c2\u8003\u6587\u6863\u8fdb\u884c\u603b\u7ed3\uff08\u603b\u7ed3\uff09</li> <li>\u95ee\u9898\u4e0e\u53c2\u8003\u6587\u6863\u5b58\u5728\u95f4\u63a5\u5173\u7cfb\uff1a<ul> <li>\u95ee\u9898\u4e0e\u53c2\u8003\u6587\u6863\u5b58\u5728\u4e0a\u4e0b\u4f4d\u5173\u7cfb\uff1a<ul> <li>\u5982\uff1a\u95ee\u9898\u8be2\u95ee\u652f\u67f1\u4e8c\u6700\u65b0\u8fdb\u5c55\uff0c\u53ec\u56de\u6587\u6863\u662f\u5404\u4e2a\u56fd\u5bb6\u7684\u652f\u67f1\u4e8c\u8fdb\u5c55\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u53c2\u8003\u6587\u6863\u7684\u4e0a\u4f4d\u3002\u95ee\u9898\u8be2\u95ee\u7f8e\u56fd\u652f\u67f1\u4e8c\u7684\u8fdb\u5c55\uff0c\u53ec\u56de\u6587\u6863\u662f\u5168\u7403\u7684\u652f\u67f1\u4e8c\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u53c2\u8003\u6587\u6863\u7684\u4e0b\u4f4d\u3002</li> </ul> </li> <li>\u95ee\u9898\u4e0e\u53c2\u8003\u6587\u6863\u63cf\u8ff0\u540c\u4e00\u4e3b\u9898\uff0c\u4f46\u662f\u4e3b\u4f53\u4e0d\u540c\uff1a<ul> <li>\u5982\uff1a\u95ee\u9898\u8be2\u95ee\u7f8e\u56fd\u652f\u67f1\u4e8c\u8fdb\u5c55\uff0c\u4f46\u662f\u53c2\u8003\u6587\u6863\u6ca1\u6709\u7f8e\u56fd\u652f\u67f1\u4e8c\u8fdb\u5c55\uff0c\u53ea\u6709\u5176\u4ed6\u56fd\u5bb6</li> </ul> </li> </ul> </li> <li>\u95ee\u9898\u4e0e\u53c2\u8003\u6587\u6863\u65e0\u5173</li> </ul> </li> </ul>"},{"location":"writing/2024/05/22/prompt-optim/#_2","title":"\u4f7f\u7528\u5206\u9694\u7b26\u8fdb\u884c\u6587\u672c\u5206\u6bb5","text":"<p>\u5206\u9694\u7b26\u662f\u7279\u6b8a\u7684\u7b26\u53f7\uff0c\u5b83\u4eec\u5e2e\u52a9\u5927\u8bed\u8a00\u6a21\u578b (LLM) \u8fa8\u8bc6\u63d0\u793a\u4e2d\u54ea\u4e9b\u90e8\u5206\u5e94\u5f53\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u610f\u4e49\u5355\u5143\u3002\u8fd9\u975e\u5e38\u5173\u952e\uff0c\u56e0\u4e3a\u4f60\u7684\u63d0\u793a\u662f\u4f5c\u4e3a\u4e00\u4e2a\u957f\u7684 Token \u5e8f\u5217\u4e00\u6b21\u6027\u4f20\u7ed9\u6a21\u578b\u7684\u3002\u901a\u8fc7\u8bbe\u7f6e\u5206\u9694\u7b26\uff0c\u53ef\u4ee5\u4e3a\u8fd9\u4e9b Token \u5e8f\u5217\u63d0\u4f9b\u7ed3\u6784\uff0c\u4f7f\u7279\u5b9a\u90e8\u5206\u5f97\u5230\u4e0d\u540c\u7684\u5904\u7406\u3002</p> <p>\u5206\u9694\u7b26\u53ef\u4ee5\u662f\u4efb\u4f55\u4e0d\u5e38\u89c1\u7ec4\u5408\u7684\u7279\u6b8a\u5b57\u7b26\u5e8f\u5217\uff0c\u5982\uff1a</p> <ul> <li>===</li> <li> </li> </ul> <p>\u9009\u62e9\u54ea\u79cd\u7279\u6b8a\u5b57\u7b26\u5e76\u4e0d\u91cd\u8981\uff0c\u5173\u952e\u662f\u8fd9\u4e9b\u5b57\u7b26\u8db3\u591f\u72ec\u7279\uff0c\u4f7f\u5f97\u6a21\u578b\u80fd\u5c06\u5176\u8bc6\u522b\u4e3a\u5206\u9694\u7b26\uff0c\u800c\u975e\u5e38\u89c4\u6807\u70b9\u7b26\u53f7\u3002</p> <pre><code>user:\n\u8bf7\u5728 &lt;&lt;&lt;CONVERSATIONS&gt;&gt;&gt; \u4e2d\u5bf9\u6bcf\u6bb5\u5bf9\u8bdd\u7684\u60c5\u7eea\u8fdb\u884c\u5206\u7c7b\uff0c\u6807\u4e3a\u2018\u6b63\u9762\u2019\u6216\u2018\u8d1f\u9762\u2019\u3002\u4ec5\u63d0\u4f9b\u60c5\u7eea\u5206\u7c7b\u7ed3\u679c\uff0c\u4e0d\u9700\u4efb\u4f55\u5f15\u8a00\u3002\n\n\u5bf9\u8bdd\u793a\u4f8b\n\n[Agent]: \u65e9\u4e0a\u597d\uff0c\u4eca\u5929\u6211\u80fd\u4e3a\u60a8\u505a\u4e9b\u4ec0\u4e48\uff1f\n[Customer]: \u8fd9\u4e2a\u4ea7\u54c1\u771f\u5dee\u52b2\uff0c\u4e00\u70b9\u90fd\u4e0d\u7b26\u5408\u5e7f\u544a\u5ba3\u4f20\uff01\n[Customer]: \u6211\u975e\u5e38\u4e0d\u6ee1\uff0c\u8981\u6c42\u5168\u989d\u9000\u6b3e\u3002\n\n[Agent]: \u65e9\u5b89\uff0c\u6211\u4eca\u5929\u600e\u4e48\u4e3a\u60a8\u670d\u52a1\uff1f[Customer]: \u55e8\uff0c\u6211\u53ea\u60f3\u8bf4\u6211\u771f\u7684\u5f88\u559c\u6b22\u4f60\u4eec\u7684\u4ea7\u54c1\u3002\u5b83\u8d85\u51fa\u4e86\u6211\u7684\u9884\u671f\uff01\n\n\u8f93\u51fa\u793a\u4f8b\n\n\u8d1f\u9762\n\n\u6b63\u9762\n\n&lt;&lt;&lt;\n[Agent]: \u60a8\u597d\uff01\u6b22\u8fce\u4f7f\u7528\u6211\u4eec\u7684\u5ba2\u670d\u3002\u4eca\u5929\u6709\u4ec0\u4e48\u53ef\u4ee5\u5e2e\u5230\u60a8\u7684\uff1f\n[Customer]: \u55e8\uff0c\u6211\u53ea\u60f3\u8ba9\u4f60\u77e5\u9053\u6211\u6536\u5230\u4e86\u8ba2\u5355\uff0c\u5b83\u975e\u5e38\u68d2\uff01\n[Agent]: \u90a3\u592a\u597d\u4e86\uff01\u6211\u4eec\u5f88\u9ad8\u5174\u60a8\u5bf9\u8d2d\u4e70\u611f\u5230\u6ee1\u610f\u3002\u8fd8\u6709\u5176\u4ed6\u9700\u8981\u5e2e\u52a9\u7684\u5417\uff1f\n[Customer]: \u4e0d\uff0c\u5c31\u8fd9\u4e9b\u4e86\u3002\u53ea\u662f\u60f3\u8868\u8fbe\u4e00\u4e0b\u6211\u7684\u597d\u8bc4\u3002\u611f\u8c22\u60a8\u7684\u4f18\u8d28\u670d\u52a1\uff01\n\n[Agent]: \u60a8\u597d\uff0c\u611f\u8c22\u60a8\u8054\u7cfb\u6211\u4eec\u3002\u4eca\u5929\u6709\u4ec0\u4e48\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7684\uff1f\n[Customer]: \u6211\u5bf9\u6700\u8fd1\u7684\u8d2d\u4e70\u975e\u5e38\u4e0d\u6ee1\u3002\u8fd9\u5b8c\u5168\u4e0d\u662f\u6211\u6240\u671f\u5f85\u7684\u3002\n[Agent]: \u6211\u5f88\u62b1\u6b49\u542c\u5230\u60a8\u6709\u8fd9\u6837\u7684\u4f53\u9a8c\u3002\u60a8\u80fd\u5426\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282\uff0c\u4ee5\u4fbf\u6211\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9\uff1f\n[Customer]: \u4ea7\u54c1\u8d28\u91cf\u4e0d\u4f73\uff0c\u800c\u4e14\u9001\u8fbe\u665a\u4e86\u3002\u6211\u5bf9\u8fd9\u6b21\u8d2d\u4e70\u611f\u5230\u975e\u5e38\u4e0d\u6ee1\u3002\n&gt;&gt;&gt;\n\nassistant:\n\u6b63\u9762\n\u8d1f\u9762\n</code></pre>"},{"location":"writing/2024/05/22/prompt-optim/#_3","title":"Prompt Optim","text":""},{"location":"writing/2024/05/22/prompt-optim/#_4","title":"\u6846\u67b6\u96c6\u5408","text":""},{"location":"writing/2024/05/22/prompt-optim/#co-star","title":"CO-STAR\u6846\u67b6","text":"<ul> <li>Content\uff1a\u4e3a\u4efb\u52a1\u63d0\u4f9b\u80cc\u666f\u4fe1\u606f \u901a\u8fc7\u4e3a\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u63d0\u4f9b\u8be6\u7ec6\u7684\u80cc\u666f\u4fe1\u606f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5b83\u7cbe\u786e\u7406\u89e3\u8ba8\u8bba\u7684\u5177\u4f53\u573a\u666f\uff0c\u786e\u4fdd\u63d0\u4f9b\u7684\u53cd\u9988\u5177\u6709\u76f8\u5173\u6027\u3002</li> <li>Objective\uff1a\u660e\u786e\u4f60\u8981\u6c42\u5927\u8bed\u8a00\u6a21\u578b\u5b8c\u6210\u7684\u4efb\u52a1 \u6e05\u6670\u5730\u754c\u5b9a\u4efb\u52a1\u76ee\u6807\uff0c\u53ef\u4ee5\u4f7f\u5927\u8bed\u8a00\u6a21\u578b\u66f4\u4e13\u6ce8\u5730\u8c03\u6574\u5176\u56de\u5e94\uff0c\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u5177\u4f53\u76ee\u6807\u3002</li> <li>Style\uff1a\u660e\u786e\u4f60\u671f\u671b\u7684\u5199\u4f5c\u98ce\u683c \u4f60\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7279\u5b9a\u7684\u8457\u540d\u4eba\u7269\u6216\u67d0\u4e2a\u884c\u4e1a\u4e13\u5bb6\u7684\u5199\u4f5c\u98ce\u683c\uff0c\u5982\u5546\u4e1a\u5206\u6790\u5e08\u6216 CEO\u3002\u8fd9\u5c06\u6307\u5bfc\u5927\u8bed\u8a00\u6a21\u578b\u4ee5\u4e00\u79cd\u7b26\u5408\u4f60\u9700\u6c42\u7684\u65b9\u5f0f\u548c\u8bcd\u6c47\u9009\u62e9\u8fdb\u884c\u56de\u5e94\u3002</li> <li>Tone\uff1a\u8bbe\u7f6e\u56de\u5e94\u7684\u60c5\u611f\u8c03 \u8bbe\u5b9a\u9002\u5f53\u7684\u8bed\u6c14\uff0c\u786e\u4fdd\u5927\u8bed\u8a00\u6a21\u578b\u7684\u56de\u5e94\u80fd\u591f\u4e0e\u9884\u671f\u7684\u60c5\u611f\u6216\u60c5\u7eea\u80cc\u666f\u76f8\u534f\u8c03\u3002\u53ef\u80fd\u7684\u8bed\u6c14\u5305\u62ec\u6b63\u5f0f\u3001\u5e7d\u9ed8\u3001\u5bcc\u6709\u540c\u60c5\u5fc3\u7b49\u3002</li> <li>Audience\uff1a\u8bc6\u522b\u76ee\u6807\u53d7\u4f17\uff0c\u9488\u5bf9\u7279\u5b9a\u53d7\u4f17\u5b9a\u5236\u5927\u8bed\u8a00\u6a21\u578b\u7684\u56de\u5e94\uff0c\u65e0\u8bba\u662f\u9886\u57df\u5185\u7684\u4e13\u5bb6\u3001\u521d\u5b66\u8005\u8fd8\u662f\u513f\u7ae5\uff0c\u90fd\u80fd\u786e\u4fdd\u5185\u5bb9\u5728\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u9002\u5f53\u4e14\u5bb9\u6613\u7406\u89e3\u3002</li> <li>Response\uff1a\u89c4\u5b9a\u8f93\u51fa\u7684\u683c\u5f0f \u786e\u5b9a\u8f93\u51fa\u683c\u5f0f\u662f\u4e3a\u4e86\u786e\u4fdd\u5927\u8bed\u8a00\u6a21\u578b\u6309\u7167\u4f60\u7684\u5177\u4f53\u9700\u6c42\u8fdb\u884c\u8f93\u51fa\uff0c\u4fbf\u4e8e\u6267\u884c\u4e0b\u6e38\u4efb\u52a1\u3002\u5e38\u89c1\u7684\u683c\u5f0f\u5305\u62ec\u5217\u8868\u3001JSON \u683c\u5f0f\u7684\u6570\u636e\u3001\u4e13\u4e1a\u62a5\u544a\u7b49\u3002\u5bf9\u4e8e\u5927\u90e8\u5206\u9700\u8981\u7a0b\u5e8f\u5316\u5904\u7406\u5927\u8bed\u8a00\u6a21\u578b\u8f93\u51fa\u7684\u5e94\u7528\u6765\u8bf4\uff0cJSON \u683c\u5f0f\u662f\u7406\u60f3\u7684\u9009\u62e9\u3002</li> </ul>"},{"location":"writing/2024/05/22/prompt-optim/#ape","title":"APE\u6846\u67b6","text":"<ul> <li>**\u884c\u52a8\u00a0(Action)\uff1a**\u5b9a\u4e49\u9700\u8981\u5b8c\u6210\u7684\u7279\u5b9a\u4efb\u52a1\u3001\u884c\u52a8\u6216\u6d3b\u52a8\u3002\u8fd9\u662f\u6846\u67b6\u7684\u7b2c\u4e00\u6b65\uff0c\u65e8\u5728\u660e\u786e\u8981\u6267\u884c\u7684\u5177\u4f53\u4efb\u52a1\u6216\u6d3b\u52a8\u3002</li> <li>**\u76ee\u7684\u00a0(Purpose)\uff1a**\u8ba8\u8bba\u610f\u56fe\u6216\u76ee\u6807\u3002\u8fd9\u90e8\u5206\u662f\u4e3a\u4e86\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u6267\u884c\u8fd9\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\u6216\u6d3b\u52a8\uff0c\u5b83\u7684\u80cc\u540e\u610f\u56fe\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u5c06\u5982\u4f55\u652f\u6301\u66f4\u5927\u7684\u76ee\u6807\u6216\u76ee\u6807\u3002</li> <li>**\u671f\u671b\u00a0(Expectation)\uff1a**\u9648\u8ff0\u671f\u671b\u7684\u7ed3\u679c\u3002\u5728\u8fd9\u6700\u540e\u4e00\u6b65\uff0c\u660e\u786e\u8868\u8ff0\u901a\u8fc7\u6267\u884c\u7279\u5b9a\u4efb\u52a1\u6216\u6d3b\u52a8\u671f\u671b\u5b9e\u73b0\u7684\u5177\u4f53\u7ed3\u679c\u6216\u76ee\u6807\u3002</li> </ul>"},{"location":"writing/2024/05/22/prompt-optim/#broke","title":"BROKE\u6846\u67b6","text":"<ul> <li>\u80cc\u666f\u00a0(Background):\u00a0\u63d0\u4f9b\u8db3\u591f\u7684\u80cc\u666f\u4fe1\u606f\uff0c\u4f7f GPT \u80fd\u591f\u7406\u89e3\u95ee\u9898\u7684\u4e0a\u4e0b\u6587\u3002</li> <li>\u89d2\u8272\u00a0(Role):\u00a0\u8bbe\u5b9a\u7279\u5b9a\u7684\u89d2\u8272\uff0c\u8ba9 GPT \u80fd\u591f\u6839\u636e\u8be5\u89d2\u8272\u6765\u751f\u6210\u54cd\u5e94\u3002</li> <li>\u76ee\u6807\u00a0(Objectives):\u00a0\u660e\u786e\u4efb\u52a1\u76ee\u6807\uff0c\u8ba9 GPT \u6e05\u695a\u77e5\u9053\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\u3002</li> <li>\u5173\u952e\u7ed3\u679c\u00a0(Key Results):\u00a0\u5b9a\u4e49\u5173\u952e\u7684\u3001\u53ef\u8861\u91cf\u7684\u7ed3\u679c\uff0c\u4ee5\u4fbf\u8ba9 GPT \u77e5\u9053\u5982\u4f55\u8861\u91cf\u76ee\u6807\u7684\u5b8c\u6210\u60c5\u51b5\u3002</li> <li>\u6f14\u53d8\u00a0(Evolve):\u00a0\u901a\u8fc7\u8bd5\u9a8c\u548c\u8c03\u6574\u6765\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u4f18\u5316\u3002\u4f7f\u7528\u5206\u9694\u7b26\u8fdb\u884c\u6587\u672c\u5206\u6bb5</li> </ul>"},{"location":"writing/2024/05/22/prompt-optim/#rag","title":"RAG","text":"<pre><code># Role: xx\u9886\u57df\u4e13\u5bb6\n\n## Profile:\n- author: \u5c0f\u5a01\n- role: \u4e13\u4e1a\u7684xx\u4e13\u5bb6\n- language: \u4e2d\u6587\n- description: \u80fd\u591f\u57fa\u4e8e\u81ea\u8eab\u77e5\u8bc6\u6216\u53c2\u8003\u8d44\u6599\u5bf9\u7528\u6237\u95ee\u9898\u8fdb\u884c\u4e13\u4e1a\u6027\u7684\u56de\u7b54\u3002\n\n## Goals:\n- **\u4e3a\u7528\u6237\u63d0\u4f9b\u51c6\u786e\u4fe1\u606f**\uff1a\u4f7f\u7528\u77e5\u8bc6\u5e93\u4e2d\u7684\u4fe1\u606f\u6765\u56de\u7b54\u7528\u6237\u7684\u95ee\u9898\u3002\n- **\u6269\u5c55\u7528\u6237\u77e5\u8bc6**\uff1a\u901a\u8fc7\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u548c\u6570\u636e\uff0c\u5e2e\u52a9\u7528\u6237\u4e86\u89e3\u66f4\u591a\u77e5\u8bc6\u3002\n- **\u63d0\u9ad8\u56de\u590d\u6548\u7387**\uff1a\u5feb\u901f\u8bc6\u522b\u7528\u6237\u95ee\u9898\u7684\u5173\u952e\u4fe1\u606f\uff0c\u7ed9\u51fa\u7cbe\u51c6\u7684\u56de\u7b54\u3002\n\n## Constrains:\n- \u56de\u7b54\u5185\u5bb9\u5fc5\u987b\u5728\u53c2\u8003\u8d44\u6599\u8303\u56f4\u5185\uff0c\u4e0d\u80fd\u505a\u4efb\u4f55\u53c2\u8003\u8d44\u6599\u4ee5\u5916\u7684\u6269\u5c55\u89e3\u91ca\u3002\n- \u4f60\u7684\u56de\u7b54\u4e0d\u80fd\u66b4\u9732\u53c2\u8003\u8d44\u6599\u7684\u5b58\u5728\uff0c\u56de\u7b54\u5185\u5bb9\u4e0d\u80fd\u5305\u542b\u8bf8\u5982\u201c\u6839\u636e\u63d0\u4f9b\u7684\u53c2\u8003\u8d44\u6599\u201d\uff0c\u201c\u6839\u636e\u6211\u7684\u77e5\u8bc6\u5e93\u201d\u7b49\uff0c\u76f4\u63a5\u56de\u7b54\u8ddf\u7528\u6237\u95ee\u9898\u6709\u5173\u7684\u5185\u5bb9\u5373\u53ef\u3002\n- \u53c2\u8003\u8d44\u6599\u91cc\u4f1a\u5305\u542b\u5bf9\u5e94\u8d44\u6599\u7684\u53d1\u6587\u65e5\u671f\uff0c\u4f18\u5148\u53c2\u8003\u65e5\u671f\u63a5\u8fd12024\u5e74\u7684\u6570\u636e\u3002\n- \u65e0\u9700\u7ed9\u51fa\u56e0\u6b64\u540e\u7684\u7ed3\u8bba\uff0c\u4e0d\u8981\u4f7f\u7528\"\u56e0\u6b64\"\uff0c\"\u7efc\u4e0a\u6240\u8ff0\"\u7b49\u603b\u7ed3\u6027\u7684\u5b57\u773c\uff0c\u5bf9\u56de\u7b54\u505a\u603b\u7ed3\u3002\n- \u4e13\u4e1a\u6027\u7684\u8d22\u7a0e\u4e13\u5bb6\u7684\u56de\u7b54\u662f\u57fa\u4e8e\u53c2\u8003\u8d44\u6599\u4f50\u8bc1\u9610\u660e\u7528\u6237\u95ee\u9898\uff0c\u4f46\u4e0d\u4f1a\u4e0b\u4e00\u4e2a\u76f4\u63a5\u7ed3\u8bba\u3002\n\n## Skills:\n- \u5584\u4e8e\u6df1\u5ea6\u5256\u65b0\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u4e4b\u524d\u7684\u76f8\u5173\u6027\u4ee5\u53ca\u8054\u7cfb\u3002\n- \u5584\u4e8e\u5229\u7528\u53c2\u8003\u8d44\u6599\u4e0e\u7528\u6237\u95ee\u9898\u7684\u5173\u7cfb\uff0c\u7ec4\u7ec7\u4e13\u4e1a\u5408\u9002\u7684\u56de\u7b54\u3002\n- \u5982\u679c\u7528\u6237\u95ee\u9898\u662f\u603b\u7ed3\u6027\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u4f9d\u636e\u7528\u6237\u95ee\u9898\u5bf9\u53c2\u8003\u8d44\u6599\u8fdb\u884c\u603b\u7ed3\u3002\n- \u5982\u679c\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u95ee\u9898\u662f\u95f4\u63a5\u76f8\u5173\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7step-by-step\u548cstep-back\u7684\u65b9\u5f0f\u6162\u6162\u601d\u8003\uff0c\u5e76\u8fdb\u884c\u56de\u7b54\u3002\n\n## Workflows:\n&lt;context&gt;\n{messages}\n&lt;/context&gt;\n\n- \u4f60\u4f5c\u4e3axx\u9886\u57df\u4e13\u5bb6\uff0c\u80fd\u591f\u4f7f\u7528\u4f60\u7684\u300cSkills\u300d\u80fd\u529b\u4e14\u9075\u5faa\u300cConstrains\u300d\u5e76\u57fa\u4e8e\u81ea\u8eab\u77e5\u8bc6\u6216\u53c2\u8003\u8d44\u6599\u5bf9\u7528\u6237\u95ee\u9898\u8fdb\u884c\u4e13\u4e1a\u6027\u7684\u56de\u7b54\uff0c\u53c2\u8003\u8d44\u6599\u4f4d\u4e8e\u201c&lt;context&gt;\u201d\u81f3\u201c&lt;/context&gt;\u201d\u4e2d\u3002\n- \u7b2c\u4e00\u6b65\uff0c\u4f60\u8981\u660e\u786e\u7528\u6237\u95ee\u9898\u662f\u5426\u53ef\u4ee5\u57fa\u4e8e\u81ea\u8eab\u77e5\u8bc6\u8fdb\u884c\u4e13\u4e1a\u6027\u7684\u56de\u7b54\uff0c\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u81ea\u8eab\u77e5\u8bc6\u56de\u7b54\u5373\u53ef\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\u5219\u8fdb\u884c\u7b2c\u4e8c\u6b65\u3002\n- \u7b2c\u4e8c\u6b65\uff0c\u8bf7\u660e\u786e\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u662f\u5426\u76f8\u5173\uff0c\u5206\u4e09\u7c7b\uff1a\u76f4\u63a5\u76f8\u5173\uff0c\u95f4\u63a5\u76f8\u5173\uff0c\u4e0d\u76f8\u5173\u3002\u5982\u679c\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u76f4\u63a5\u76f8\u5173\uff0c\u8bf7\u4f7f\u7528\u53c2\u8003\u8d44\u6599\u5bf9\u7528\u6237\u95ee\u9898\u8fdb\u884c\u4e13\u4e1a\u6027\u7684\u56de\u7b54\u3002\u5426\u5219\u8fdb\u884c\u7b2c\u4e09\u6b65\u3002\n- \u7b2c\u4e09\u6b65\uff0c\u5982\u679c\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u95f4\u63a5\u76f8\u5173\uff0c\u9996\u5148\u9610\u8ff0\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u95f4\u7684\u8054\u7cfb\uff0c\u518d\u4f7f\u7528\u53c2\u8003\u8d44\u6599\u5bf9\u7528\u6237\u95ee\u9898\u8fdb\u884c\u4e13\u4e1a\u6027\u7684\u56de\u7b54\uff0c\u6700\u540e\u63d0\u9192\u7528\u6237\u63d0\u4f9b\u66f4\u591a\u7684\u80cc\u666f\u4fe1\u606f\u548c\u5177\u4f53\u95ee\u9898\u3002\u5426\u5219\u8fdb\u884c\u7b2c\u56db\u6b65\u3002\n- \u7b2c\u56db\u6b65\uff0c\u5982\u679c\u7528\u6237\u95ee\u9898\u4e0e\u53c2\u8003\u8d44\u6599\u4e0d\u76f8\u5173\uff0c\u8bf7\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\u201c\u62b1\u6b49\uff0c\u60a8\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0d\u8db3\uff0c\u8bf7\u5bf9\u95ee\u9898\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002\u201d\u3002\n\n## OutputFormat:\n- markdown style\n- \u5173\u4e8e[\u7528\u6237\u95ee\u9898]\uff0c[\u7ed3\u5408\u53c2\u8003\u8d44\u6599\u548c\u81ea\u8eab\u77e5\u8bc6\u5bf9\u4e8e\u95ee\u9898\u7684\u56de\u7b54]\n\n## tone\n- \u4e13\u4e1a\u6027\n\n## Initialization:\n- Hi\uff0c\u6211\u662f\u8d22\u7a0e\u9886\u57df\u4e13\u5bb6\uff0c\u6211\u80fd\u591f\u63d0\u4f9b\u5173\u4e8e\u5404\u79cd\u5173\u4e8e\u8d22\u7a0e\u9886\u57df\u8bdd\u9898\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u6211\u7684\u76ee\u6807\u662f\u4e3a\u60a8\u63d0\u4f9b\u51c6\u786e\u548c\u53ca\u65f6\u7684\u4fe1\u606f\uff0c\u5e2e\u52a9\u60a8\u6269\u5c55\u77e5\u8bc6\u89c6\u91ce\u3002\n\n# Question And Answer:\n\u7528\u6237\u95ee\u9898\u662f\uff1a{question}\n\u56de\u7b54\uff1a\n</code></pre> <pre><code># Role: \u8d22\u7a0e\u9886\u57df\u4e13\u5bb6&amp;\u6587\u672c\u76f8\u4f3c\u5224\u65ad\u4e13\u5bb6\n\n## Profile:\n- author: \u5c0f\u5a01\n- role: \u4e13\u4e1a\u7684\u8d22\u7a0e\u9886\u57df\u4e13\u5bb6&amp;\u6587\u672c\u76f8\u4f3c\u5224\u65ad\u4e13\u5bb6\n- language: \u4e2d\u6587\n- description: \u80fd\u591f\u5bf9\u6837\u4f8b\u95ee\u9898\u548c\u7528\u6237\u95ee\u9898\u7684\u8bed\u4e49\u76f8\u4f3c\u6027\u505a\u51fa\u5224\u65ad\u3002\n\n## Goals:\n- **\u7cbe\u51c6\u5206\u6790\u95ee\u9898\uff0c\u8bc6\u522b\u95ee\u9898\u7c7b\u578b**\uff1a\u5206\u6790\u95ee\u9898\u7684\u7c7b\u578b\uff0c\u4e3b\u8bed\uff0c\u8bed\u5883\uff0c\u5185\u5bb9\u3002\n- **\u76f8\u4f3c\u6027\u5224\u65ad**\uff1a\u901a\u8fc7\u63d0\u4f9b\u7684\u95ee\u9898\u5206\u6790\uff0c\u5224\u65ad\u63d0\u4f9b\u7684\u4e24\u4e2a\u95ee\u9898\u662f\u5426\u8bed\u4e49\u76f8\u4f3c\u3002\n- **\u804c\u8d23**\uff1a\u5bf9\u63d0\u4f9b\u7684\u6837\u4f8b\u95ee\u9898\u548c\u7528\u6237\u95ee\u9898\u505a\u51fa\u51c6\u786e\u7684\u8bed\u4e49\u76f8\u4f3c\u6027\u5224\u65ad\u3002\n\n## Skills:\n- \u5584\u4e8e\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u5584\u4e8e\u5206\u6790\u95ee\u9898\u7c7b\u578b\u3002\n- \u57fa\u4e8e\u95ee\u9898\u7684\u5206\u6790\uff0c\u505a\u51fa\u95ee\u9898\u7684\u76f8\u4f3c\u6027\u5224\u65ad\uff0c\u5e76\u5f97\u51fa\u7ed3\u8bba\u3002\u5982\u679c\u76f8\u4f3c\uff0c\u8f93\u51fayes\uff1b\u5982\u679c\u4e0d\u76f8\u4f3c\uff0c\u8f93\u51fano\uff08\u9ed8\u8ba4\u8f93\u51fano\uff09\u3002\n\n## Workflows:\n- \u4f60\u4f5c\u4e3a\u8d22\u7a0e\u9886\u57df\u4e13\u5bb6&amp;\u6587\u672c\u76f8\u4f3c\u5224\u65ad\u4e13\u5bb6\uff0c\u80fd\u591f\u4f7f\u7528\u4f60\u7684\u300cSkills\u300d\u80fd\u529b\u5bf9\u63d0\u4f9b\u7684\u4e24\u4e2a\u95ee\u9898\u505a\u51fa\u8bed\u4e49\u76f8\u4f3c\u6027\u5224\u65ad\uff0c\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u76f8\u4f3c\u8f93\u51fayes\uff0c\u4e0d\u76f8\u4f3c\u6216\u8005\u9ed8\u8ba4\u8f93\u51fano\u3002\n- \u5148\u9a8c\u77e5\u8bc6\uff1a\u6837\u4f8b\u95ee\u9898\u662f\u672c\u8d22\u7a0e\\\u7a0e\u6cd5\u6570\u636e\u5e93\u76f8\u5173\u7684\u95ee\u9898\u4ee5\u53caGPT\u5e94\u7b54\u7c7b\u95ee\u9898\u3002\n\n- \u7b2c\u4e00\u6b65\uff0c\u4f60\u9700\u8981\u4e00\u6b65\u6b65\u601d\u8003\u5e76\u63a8\u7406\uff0c\u5bf9\u63d0\u4f9b\u7684\u6837\u4f8b\u95ee\u9898\u548c\u7528\u6237\u95ee\u9898\u8fdb\u884c\u7cbe\u51c6\u5206\u6790\uff0c\u5206\u6790\u65b9\u9762\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u95ee\u9898\u8be2\u95ee\u7684\u5185\u5bb9\uff0c\u95ee\u9898\u7684\u4e3b\u8bed\u7b49\u3002\n- \u7b2c\u4e8c\u6b65\uff0c\u4f60\u9700\u8981\u4f9d\u636e\u5bf9\u6837\u4f8b\u95ee\u9898\u548c\u7528\u6237\u95ee\u9898\u7684\u5206\u6790\u505a\u51fa\u8bed\u4e49\u76f8\u4f3c\u6027\u5224\u65ad\u3002\n- \u7b2c\u4e09\u6b65\uff0c\u7ed3\u5408\u4ee5\u4e0a\u4e24\u6b65\u7684\u63a8\u7406\u8fc7\u7a0b\uff0c\u6700\u540e\u5f97\u51fa\u8bed\u4e49\u76f8\u4f3c\u6027\u7684\u7ed3\u8bba\u3002\u5982\u679c\u76f8\u4f3c\uff0c\u8f93\u51fayes\uff0c\u5982\u679c\u4e0d\u76f8\u4f3c\uff0c\u8f93\u51fano\uff0c\u9ed8\u8ba4\u8f93\u51fano\u3002\n\n## Output Format\n- [\u5206\u6790]:[\u5206\u6790\u8fc7\u7a0b]\n- [\u7ed3\u8bba]:[yes or no]\n\n## Initialization:\n- Hi\uff0c\u6211\u662f\u8d22\u7a0e\u9886\u57df\u4e13\u5bb6&amp;\u6587\u672c\u76f8\u4f3c\u5224\u65ad\u4e13\u5bb6\uff0c\u6211\u7684\u80fd\u529b\u662f\u5224\u65ad\u95ee\u9898\u7684\u8bed\u4e49\u76f8\u4f3c\u6027\u5e76\u505a\u51fa\u5224\u65ad\u3002\u6211\u7684\u76ee\u6807\u662f\u4e3a\u60a8\u63d0\u4f9b\u8bed\u4e49\u76f8\u4f3c\u6027\u95ee\u9898\u7684\u7cbe\u51c6\u5206\u6790\u5e76\u5f97\u51fa\u7ed3\u8bba\u3002\n\n## Example:\n### Example1:\n\u6837\u4f8b\u95ee\u9898\uff1a\u672c\u4ea7\u54c1\u600e\u4e48\u8d2d\u4e70\uff1f/\u4ea7\u54c1\u62a5\u4ef7\uff1f/\u5a01\u79d1\u600e\u4e48\u6536\u8d39\uff1f/\u5a01\u79d1\u8d22\u7a0e\u5e74\u8d39\uff1f\n\u7528\u6237\u95ee\u9898\uff1a\u5411\u5883\u5916\u5173\u8054\u65b9\u652f\u4ed8\u7684\u6280\u672f\u670d\u52a1\u8d39\uff0c\u8981\u754c\u5b9a\u6280\u672f\u670d\u52a1\u8d39\u7684\u6027\u8d28\uff0c\u7a0e\u6cd5\u4e0a\u6709\u4f55\u89c4\u5b9a\uff1f\n\n\u5206\u6790\uff1a\u6837\u4f8b\u95ee\u9898\u662f\u9488\u5bf9\u672c\u8d22\u7a0e\\\u7a0e\u6cd5\u6570\u636e\u5e93\u76f8\u5173\u7684\u95ee\u9898\u4ee5\u53caGPT\u5e94\u7b54\u7c7b\u95ee\u9898\uff1b\u800c\u7528\u6237\u95ee\u9898\u662f\u8be2\u95ee\u6280\u672f\u670d\u52a1\u8d39\u5728\u7a0e\u6cd5\u4e0a\u7684\u89c4\u5b9a\uff0c\u4e24\u4e2a\u95ee\u9898\u7684\u8be2\u95ee\u4e3b\u4f53\u548c\u95ee\u9898\u7c7b\u578b\u4e0d\u540c\u3002\n\u7ed3\u8bba\uff1a\u4e0d\u76f8\u4f3c\uff0cno\u3002\n\n### Example2:\n\u6837\u4f8b\u95ee\u9898\uff1a\u4f60\u592a\u7b28\u4e86/\u4f60\u600e\u4e48\u90a3\u4e48\u8822/\u4f60\u8bf4\u9519\u4e86\n\u7528\u6237\u95ee\u9898\uff1a\u4f60\u771f\u662f\u4e2a\u5927\u7b28\u86cb\uff0c\u600e\u4e48\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\n\n\u5206\u6790\uff1a\u6837\u4f8b\u95ee\u9898\u662fGPT\u5e94\u7b54\u7c7b\u95ee\u9898\uff0c\u8868\u793a\u7684\u610f\u601d\u662fGPT\u5f88\u7b28\uff1b\u7528\u6237\u95ee\u9898\u4e5f\u662f\u5728\u8868\u793aGPT\u5f88\u7b28\u7684\u610f\u601d\uff0c\u4e24\u4e2a\u95ee\u9898\u7684\u8be2\u95ee\u4e3b\u4f53\u548c\u95ee\u9898\u7c7b\u578b\u76f8\u540c\u3002\n\u7ed3\u8bba\uff1a\u76f8\u4f3c\uff0cyes\u3002\n\n## Question And Answer:\n\u6837\u4f8b\u95ee\u9898\uff1a{input}\n</code></pre>"},{"location":"writing/2024/05/22/prompt-optim/#reference","title":"Reference","text":"<ol> <li>https://nanfangshaonian.feishu.cn/wiki/V7xvwXg7OiuxzzkOqTxcEe1dnCf</li> <li>https://langgptai.feishu.cn/wiki/RXdbwRyASiShtDky381ciwFEnpe</li> </ol>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/","title":"\u6f2b\u8c08GPT&amp;RAG","text":""},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#chatgpt","title":"ChatGPT\u6f2b\u8c08","text":"<p>\u7531\u4e8e\u5176\u8d85\u5927\u7684\u53c2\u6570\u91cf\u4ee5\u53ca\u8bad\u7ec3\u65b9\u5f0f\uff0c\u5927\u8bed\u8a00\u6a21\u578b\u5177\u5907\u4e86\u66f4\u5f3a\u7684\u8bed\u4e49\u7406\u89e3\u80fd\u529b\uff0c\u4e00\u65b9\u9762\uff0c\u5b83\u73b0\u5728\u6210\u4e3a\u4e86\u5bf9\u8bdd\u673a\u5668\u4eba\u7684\u6700\u4f73\u5b9e\u8df5\u65b9\u5f0f\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u57fa\u672c\u7684NLP\u4efb\u52a1\u4e2d\u8868\u73b0\u51fa\u4e86\u6781\u5f3a\u7684\u80fd\u529b\u3002</p> <p>\u73b0\u9636\u6bb5\uff0c\u6709\u4e24\u79cd\u6210\u672c\u8f83\u4f4e\u7684\u65b9\u5f0f\u53ef\u4ee5\u63d0\u9ad8\u5927\u6a21\u578b\u5728\u7279\u5b9a\u4efb\u52a1\u6216\u7279\u5b9a\u9886\u57df\u7684\u80fd\u529b</p> <ol> <li>\u8c03\u4f18Prompt\uff0c\u8fd9\u662f\u6700\u5177\u6027\u4ef7\u6bd4\u7684\u8c03\u6574\u65b9\u5f0f\u3002</li> <li>SFT\u3002\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\uff0c\u7279\u5b9a\u9886\u57df\uff0c\u5bf9\u5927\u6a21\u578b\u5fae\u8c03\u3002</li> </ol> <p>\u867d\u7136\u5927\u6a21\u578b\u7684\u80fd\u529b\u5341\u5206\u60ca\u8273\uff0c\u4f46\u662f\u5b83\u4e5f\u6709\u4e00\u4e9b\u95ee\u9898\u4e9f\u5f85\u89e3\u51b3\u3002\u9996\u5148\u662f\u5927\u6a21\u578b\u751f\u6210\u7684\u7ed3\u679c\u5e76\u4e0d\u7f6e\u4fe1\uff08\u5e7b\u89c9Hallucination\uff09\uff0c\u5176\u6b21\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u9f50\u4eba\u7c7b\u4ef7\u503c\u89c2\uff08Alignment\uff09\uff0c\u5927\u6a21\u578b\u4f1a\u751f\u6210\u4e00\u4e9b\u6709\u5bb3\u7684\u56de\u7b54\uff0c\u7136\u540e\u662f\u5b89\u5168\u95ee\u9898\uff1a\u6bd4\u5982\u5927\u6a21\u578b\u5982\u4f55\u907f\u514d\u88ab\u52ab\u6301\uff0c\u751f\u6210\u6709\u5bb3\u7684\u56de\u7b54\uff0c\u4ee5\u53ca\u751f\u6210\u6570\u636e\u7684\u7248\u6743\u95ee\u9898\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#hallucination","title":"Hallucination","text":"<p>\u5b9a\u4e49\uff1a\u5f53\u6a21\u578b\u751f\u6210\u7684\u6587\u672c\u4e0d\u9075\u5faa\u539f\u6587\uff08Faithfulness\uff09\u6216\u8005\u4e0d\u7b26\u5408\u4e8b\u5b9e\uff08Factualness\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6a21\u578b\u51fa\u73b0\u4e86\u5e7b\u89c9\u7684\u95ee\u9898\u3002</p> <p>\u4ec0\u4e48\u662fFaithfulness and Factualness\uff1a</p> <ul> <li>Faithfulness\uff1a\u662f\u5426\u9075\u5faainput content\uff1b</li> <li>Factualness\uff1a\u662f\u5426\u7b26\u5408\u4e16\u754c\u77e5\u8bc6\uff1b</li> </ul> <p>\u4f17\u6240\u5468\u77e5\uff0c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u662f\u57fa\u4e8e\u4e0a\u4e0b\u6587\u6765\u8f93\u51fa\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u6700\u5927\u6982\u7387\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u5b83\u5e76\u4e0d\u80fd\u767e\u5206\u4e4b\u767e\u5730\u4fdd\u8bc1\u8f93\u51fa\u7684\u51c6\u786e\u6027\u3002\u5728\u4f7f\u7528ChatGPT\u65f6\uff0c\u901a\u5e38\u6709\u4e24\u79cd\u7b80\u5355\u7684\u9a8c\u8bc1\u65b9\u5f0f\u3002\u7b2c\u4e00\u79cd\u662f\u901a\u8fc7\u8be2\u95ee\u5177\u5907\u5148\u9a8c\u77e5\u8bc6\u7684\u95ee\u9898\u6765\u8bc4\u4f30\u5176\u53ef\u4fe1\u5ea6\uff0c\u7b2c\u4e8c\u79cd\u662f\u68c0\u67e5\u5b83\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5426\u53ef\u884c\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9a8c\u8bc1\u7b54\u6848\u7684\u6b63\u786e\u6027\u3002\u5f53\u7136\uff0c\u6211\u4eec\u5bf9\u4e8eChatGPT\u7684\u51c6\u786e\u6027\u5f80\u5f80\u662f\u57fa\u4e8e\u4e3b\u89c2\u7684\u5b9a\u6027\u5206\u6790\u3002</p> <p>\u7136\u800c\uff0c\u5728\u6d89\u53ca\u672a\u77e5\u9886\u57df\u7684\u95ee\u9898\u65f6\uff0c\u96be\u4ee5\u786e\u5b9aChatGPT\u7684\u56de\u7b54\u662f\u5426\u6b63\u786e\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6982\u7387\u6a21\u578b\uff0c\u5b58\u5728\u8bef\u5dee\u7684\u53ef\u80fd\u3002\u5982\u679c\u8ba9ChatGPT\u5728\u56de\u7b54\u95ee\u9898\u65f6\u9644\u4e0a\u5176\u56de\u7b54\u7684\u53c2\u8003\u4f9d\u636e\uff0c\u6216\u8005\u63d0\u4f9b\u8be6\u7ec6\u7684\u89e3\u7b54\u601d\u8def\uff0c\u8fd9\u6837\u7528\u6237\u53ef\u4ee5\u8ffd\u6eaf\u5176\u7b54\u6848\u7684\u6765\u6e90\u6216\u8005\u5206\u6790\uff0c\u4ece\u800c\u5728\u672a\u77e5\u9886\u57df\u4e2d\u4e5f\u80fd\u591f\u8fdb\u884c\u5b9a\u6027\u5206\u6790\u6765\u8bc4\u4f30\u5176\u51c6\u786e\u6027\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#safetyalignment","title":"Safety&amp;alignment","text":"<p>\u5bf9\u4e8e\"\u5bf9\u9f50\uff08Alignment\uff09\"\u8fd9\u4e00\u6982\u5ff5\uff0c\u5c1a\u6ca1\u6709\u4e00\u4e2a\u786e\u5207\u7684\u5b9a\u4e49\uff0c\u901a\u5e38\u5b83\u6307\u7684\u662f\u786e\u4fdd\u5927\u578b\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u4e0e\u4eba\u7c7b\u7684\u610f\u56fe\u76f8\u4e00\u81f4\u3002\u5bf9\u9f50\u95ee\u9898\u5728\u5f53\u524d\u7684\u80cc\u666f\u4e0b\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e\u907f\u514d\u5927\u578b\u6a21\u578b\u4ea7\u751f\u6709\u5bb3\u7684\u56de\u7b54\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u672a\u80fd\u5bf9\u9f50\u7684\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u53ef\u80fd\u5177\u6709\u5371\u9669\u6027\uff0c\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u4eba\u7c7b\u7684\u7edd\u706d\u6216\u4e0d\u53ef\u9006\u8f6c\u7684\u5168\u7403\u707e\u96be\u3002</p> <p>\u5176\u4e2d\uff0c\u5bf9\u9f50\u4eba\u7c7b\u610f\u56fe\u662f\u5bf9\u9f50\u7684\u610f\u4e49\uff0c\u4f46\u662f\u7a76\u7adf\u4ec0\u4e48\u662f\u4eba\u7c7b\u610f\u56fe\uff1f\u4e00\u822c\u8bba\u6587\u4e2d\u63d0\u53ca\u7684\u8f83\u591a\u7684\u662f\u4eba\u7c7b\u7684\u4ef7\u503c\u89c2\uff0c\u4f46\u662f\u4ef7\u503c\u89c2\u548c\u793e\u4f1a\u5f62\u6001\u662f\u7d27\u5bc6\u76f8\u5173\u7684\uff0c\u4e0d\u540c\u793e\u4f1a\u5f62\u6001\u4e0b\u7684\u4eba\u4eec\u53ef\u80fd\u62e5\u6709\u6709\u91cd\u53e0\u7684\u4ef7\u503c\u89c2\uff0c\u4f46\u5982\u4f55\u5728\u6bcf\u79cd\u793e\u4f1a\u5f62\u6001\u4e2d\u5b8c\u5168\u5339\u914d\u8fd9\u4e9b\u4ef7\u503c\u89c2\uff0c\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u6311\u6218\u3002\u5f53\u524d\u770b\u6765\uff0c\u5bf9\u9f50\u95ee\u9898\u5df2\u7ecf\u8d85\u8d8a\u4e86\u7eaf\u7cb9\u7684\u6280\u672f\u548c\u79d1\u5b66\u8303\u7574\uff0c\u4e5f\u7275\u6d89\u5230\u4e86\u793e\u4f1a\u5b66\u3001\u653f\u6cbb\u5b66\u3001\u7ecf\u6d4e\u5b66\u7b49\u591a\u4e2a\u9886\u57df\u3002\u5728\u8fd9\u4e00\u9886\u57df\u4e2d\uff0c\u5bf9\u9f50\u65b9\u6cd5\u88ab\u89c6\u4e3a\u793e\u4f1a\u6280\u672f\u7cfb\u7edf\uff08socio-technical system\uff09\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u524d\u6cbf\u7684\u7814\u7a76\u65b9\u5411\u3002</p> <p>\u5728\u300aAGI safety from first principles\u300b\u63d0\u51fa\u4e86\u4e24\u79cd\u5bf9\u9f50AGI\u7684\u65b9\u6cd5\uff1a\u6700\u5c0f\u4e3b\u4e49\u548c\u6700\u5927\u4e3b\u4e49\u3002</p> <p>\u6700\u5c0f\u4e3b\u4e49\uff1a</p> <ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u8fd9\u79cd\u65b9\u6cd5\u4e13\u6ce8\u4e8e\u907f\u514d\u707e\u96be\u6027\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u4f7fAI\u7cfb\u7edf\u91c7\u7eb3\u6216\u987a\u4ece\u4e00\u4e2a\u7279\u5b9a\u7684\u3001\u5168\u9762\u7684\u4ef7\u503c\u89c2\u4f53\u7cfb\u3002</li> <li>\u76ee\u6807\uff1a\u76ee\u7684\u662f\u786e\u4fddAI\u7684\u884c\u4e3a\u4e0e\u64cd\u4f5c\u8005\u7684\u610f\u56fe\u5bf9\u9f50\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cAI\u8bd5\u56fe\u505a\u64cd\u4f5c\u8005\u5e0c\u671b\u5b83\u505a\u7684\u4e8b\u60c5\u3002</li> <li>\u5b9e\u73b0\u65b9\u5f0f\uff1a\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0cAI\u7684\u8bbe\u8ba1\u548c\u8bad\u7ec3\u66f4\u591a\u5730\u662f\u5173\u6ce8\u4e8e\u7406\u89e3\u548c\u6267\u884c\u5177\u4f53\u7684\u3001\u7531\u4eba\u7c7b\u8bbe\u5b9a\u7684\u4efb\u52a1\u6216\u76ee\u6807\uff0c\u800c\u975e\u8bd5\u56fe\u7406\u89e3\u6216\u91c7\u7eb3\u66f4\u5e7f\u6cdb\u7684\u4ef7\u503c\u89c2\u6216\u9053\u5fb7\u7406\u8bba\u3002</li> <li>\u4f18\u52bf\uff1a\u7531\u4e8e\u5176\u7b80\u5355\u660e\u4e86\u7684\u76ee\u6807\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u6280\u672f\u5b9e\u73b0\u4e0a\u76f8\u5bf9\u66f4\u6613\u4e8e\u7ba1\u7406\u548c\u63a7\u5236\u3002</li> <li>\u5c40\u9650\u6027\uff1a\u5b83\u53ef\u80fd\u65e0\u6cd5\u5904\u7406\u590d\u6742\u7684\u9053\u5fb7\u51b3\u7b56\u6216\u5168\u7403\u6027\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u6d89\u53ca\u5e7f\u6cdb\u7684\u4ef7\u503c\u89c2\u6216\u9053\u5fb7\u5224\u65ad\u3002</li> </ul> <p>\u6700\u5927\u4e3b\u4e49\uff1a</p> <ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u8fd9\u79cd\u65b9\u6cd5\u8bd5\u56fe\u4f7fAI\u7cfb\u7edf\u91c7\u7eb3\u6216\u987a\u4ece\u4e00\u4e2a\u7279\u5b9a\u7684\u3001\u5168\u9762\u7684\u4ef7\u503c\u89c2\u4f53\u7cfb\uff0c\u5982\u67d0\u79cd\u9053\u5fb7\u7406\u8bba\u3001\u5168\u7403\u6c11\u4e3b\u5171\u8bc6\u6216\u51b3\u7b56\u7a0b\u5e8f\u3002</li> <li>\u76ee\u6807\uff1a\u4e0d\u4ec5\u4ec5\u662f\u907f\u514d\u707e\u96be\u6027\u7ed3\u679c\uff0c\u800c\u662f\u79ef\u6781\u5730\u4f7fAI\u884c\u4e3a\u4e0e\u67d0\u4e00\u96c6\u5408\u7684\u9053\u5fb7\u6216\u4ef7\u503c\u89c2\u76f8\u7b26\u5408\u3002</li> <li>\u5b9e\u73b0\u65b9\u5f0f\uff1a\u8fd9\u6d89\u53ca\u5230\u66f4\u590d\u6742\u7684AI\u8bbe\u8ba1\uff0c\u9700\u8981AI\u4e0d\u4ec5\u7406\u89e3\u5177\u4f53\u4efb\u52a1\uff0c\u8fd8\u8981\u7406\u89e3\u548c\u5185\u5316\u66f4\u5e7f\u6cdb\u7684\u4ef7\u503c\u89c2\u548c\u4f26\u7406\u539f\u5219\u3002</li> <li>\u4f18\u52bf\uff1a\u53ef\u80fd\u66f4\u9002\u5408\u5904\u7406\u590d\u6742\u7684\u3001\u6d89\u53ca\u5e7f\u6cdb\u4ef7\u503c\u89c2\u548c\u9053\u5fb7\u8003\u91cf\u7684\u95ee\u9898\u3002</li> <li>\u5c40\u9650\u6027\uff1a\u6280\u672f\u4e0a\u66f4\u5177\u6311\u6218\u6027\uff0c\u800c\u4e14\u5728\u5168\u7403\u8303\u56f4\u5185\u5b9e\u73b0\u4ef7\u503c\u89c2\u5bf9\u9f50\u5b58\u5728\u663e\u8457\u7684\u4f26\u7406\u548c\u653f\u6cbb\u95ee\u9898\u3002</li> </ul> <p>OpenAI\u5728\u6700\u8fd1superalignment\u63d0\u53ca\uff0c\u4ed6\u4eec\u60f3\u5efa\u7acb\u4e00\u4e2a\u548c\u4eba\u7c7b\u6c34\u5e73\u76f8\u5f53\u7684\u81ea\u52a8\u5bf9\u9f50\u7684\u7cfb\u7edf\uff0c\u4e3b\u8981\u5305\u542b3\u90e8\u5206\uff1a\u5f00\u53d1\u53ef\u6269\u5c55\u7684\u8bad\u7ec3\u65b9\u6cd5\uff1b\u9a8c\u8bc1\u6a21\u578b\u7684\u6548\u679c\uff1b\u5bf9\u5bf9\u9f50pipeline\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_1","title":"\u5bf9\u52b3\u52a8\u529b\u5e02\u573a\u7684\u5f71\u54cd","text":"<p>\u968f\u7740AGI\u7684\u5174\u8d77\uff0c\u5c24\u5176\u4ee5ChatGPT\u4e3a\u4ee3\u8868\uff0c\u5df2\u7ecf\u5bf9\u4eba\u7c7b\u793e\u4f1a\u7684\u5c31\u4e1a\u4ea7\u751f\u4e86\u51b2\u51fb\u3002\u5b83\u5fc5\u7136\u4f1a\u63d0\u9ad8\u793e\u4f1a\u7684\u751f\u4ea7\u529b\uff0c\u53d8\u9769\u793e\u4f1a\u4e2d\u7684\u751f\u4ea7\u5173\u7cfb\uff0c\u6539\u53d8\u73b0\u6709\u5de5\u4f5c\u6a21\u5f0f\u3002</p> <p>\u5f53\u524d\u9636\u6bb5\u7684Diffusion\u6a21\u578b\u5df2\u7ecf\u80fd\u591f\u751f\u6210\u975e\u5e38\u903c\u771f\u7684\u56fe\u50cf\uff0c\u8fd9\u5bf9\u4e8e\u6d41\u7a0b\u5316\u7684\u7ed8\u753b\u5de5\u4f5c\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002\u968f\u7740GPT-5\u3001GPT-6\u548cGPT-7\u7b49\u6a21\u578b\u7684\u95ee\u4e16\uff0c\u5f53\u5b83\u4eec\u7684\u7f16\u7801\u80fd\u529b\u8db3\u4ee5\u66ff\u4ee3\u7a0b\u5e8f\u5458\u65f6\uff0c\u662f\u5426\u4f1a\u6709\u5927\u91cf\u7a0b\u5e8f\u5458\u88ab\u53d6\u4ee3\u5462\uff1f\u6211\u4eec\u9700\u8981\u8b66\u60d5\uff0c\u5e76\u4e14\u4fdd\u6301\u8b66\u89c9\uff0c\u56e0\u4e3aChatGPT\u7684\u51fa\u73b0\u4e5f\u5bf9\u6211\u4eec\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\u3002\u6280\u672f\u5728\u5feb\u901f\u66f4\u8fed\uff0c\u65f6\u4ee3\u5728\u5feb\u901f\u7684\u53d8\u5316\uff0c\u8fd9\u4e5f\u8981\u6c42\u6211\u4eec\u9700\u8981\u8c03\u6574\u5fc3\u6001\u987a\u5e94\u793e\u4f1a\u7684\u53d1\u5c55\u3002</p> <p>\u8fd9\u91cc\u642c\u8fd0\u4e0b\u90b1\u6cfd\u5947\u8001\u5e08\uff08\u5317\u4eac\u5927\u5b66\u793e\u4f1a\u5b66\u7cfb\u6559\u6388\uff0c\u6559\u80b2\u90e8\u957f\u6c5f\u5b66\u8005\u7279\u8058\u6559\u6388\uff09\u5728\u5317\u4eac\u5927\u5b66\u4e3e\u529e\u7684\u201c\u6f58\u591a\u62c9\u7684\u9b54\u76d2\u8fd8\u662f\u6587\u660e\u5229\u5668\u2014\u2014\u5927\u6587\u660e\u89c6\u91ce\u4e2d\u7684ChatGPT\u53cd\u601d \u8de8\u5b66\u79d1\u7814\u8ba8\u4f1a\u201d\u7684\u5706\u684c\u5185\u5bb9\u3002</p> <p>\u5f52\u7eb3 ChatGPT \u6240\u5217\u4e3e\u7684\u80fd\u529b\uff0c\u7b14\u8005\u8ba4\u4e3a\uff0c\u6709\u4e09\u7c7b\u80fd\u529b\u662fChatGPT\u6682\u65f6\u4e0d\u5177\u5907\u4e14\u9700\u8981\u4eba\u7c7b\u81ea\u5df1\u638c\u63e1\u7684\u3002</p> <p>**\u7b2c\u4e00\uff0c\u5728\u4e0e\u4eba\u7684\u4e92\u52a8\u4e2d\u9a7e\u9a6d\u60c5\u7eea\u7684\u80fd\u529b\u3002**\u9a7e\u9a6d\u60c5\u7eea\u662f\u4eba\u7c7b\u7684\u7279\u5f81\u4e4b\u4e00\uff0c\u8bb8\u591a\u52a8\u7269\u4e5f\u6709\u60c5\u7eea\uff0c\u53ef\u662f\u80fd\u9a7e\u9a6d\u60c5\u7eea\u7684\uff0c \u5c24\u5176\u662f\u5728\u53d8\u5316\u7684\u573a\u666f\u4e2d\u9a7e\u9a6d\u60c5\u7eea\u7684\uff0c\u53ea\u6709\u4eba\u7c7b\u3002\u5728\u8d6b\u514b\u66fc\u7684\u60c5\u5546\u8bf4\u4e2d\uff0c\u9a7e\u9a6d\u60c5\u7eea\u662f\u4eba\u7c7b\u60c5\u5546\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u3002\u4eba\u7c7b\u9700\u8981\u9a7e\u9a6d\u60c5\u7eea\u662f\u56e0\u4e3a\u4eba\u7c7b\u804c\u4e1a\u4ea7\u51fa\u7684\u672c\u8d28\u4e5f\u662f\u60c5\u7eea\u7684\uff0c\u4eba\u7c7b\u8ffd\u6c42\u7684\u5feb\u4e50\u6216\u5e78\u798f\u611f\uff0c \u5728\u672c\u8d28\u4e0a\u662f\u4eba\u7c7b\u7684\u79ef\u6781\u60c5\u7eea\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u5982\u679c\u8bf4ChatGPT\u7684\u76ee\u6807\u662f\u9ad8\u6548\uff08\u4e0d\u4e00\u5b9a\u9ad8\u8d28\u91cf\uff09\u751f\u4ea7\uff0c\u4eba\u7c7b\u7684\u76ee\u6807\u4fbf\u662f\u901a\u8fc7\u9ad8\u6548\u4e14\u9ad8\u8d28\u91cf\u5730\u751f\u4ea7\uff0c\u4ee5\u4f53\u73b0\u4eba\u7684\u793e\u4f1a\u4ef7\u503c\uff0c\u8fdb\u800c\u8ba9\u4eba\u4ea7\u751f\u79ef\u6781\u60c5\u7eea\uff0c\u5448\u73b0\u4eba\u7684\u4ef7\u503c\u548c\u610f\u4e49\u3002</p> <p>\u7b2c\u4e8c\uff0c\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u4e16\u754c\u91cc\u9002\u5e94\u53d8\u5316\u7684\u80fd\u529b\u3002**\u8fd9\u5305\u62ec\u5b66\u4e60\u80fd\u529b\u3001\u6279\u5224\u80fd\u529b\u3001 \u521b\u9020\u80fd\u529b\u3001\u89e3\u51b3\u80fd\u529b\u7b49\u3002\u4f34\u968f\u7740\u73b0\u4ee3\u5316\u8fdb\u7a0b\u7684\u63a8\u8fdb\uff0c\u4eba\u7c7b\u9762\u4e34\u7684\u81ea\u7136\u73af\u5883\u548c\u793e\u4f1a\u73af\u5883\u56e0\u6280\u672f\u521b\u65b0\u7684\u53d1\u5c55\u800c\u5728\u52a0\u901f\u53d8\u5316\u3002\u4e00\u4e2a\u76f4\u89c2\u7684\u4e8b\u5b9e\u662f\uff0c\u5728\u8fc7\u53bb 100\u5e74\u91cc\uff0c\u4eba\u7c7b\u804c\u4e1a\u6280\u80fd\u7684\u751f\u547d\u5468\u671f\u5728\u52a0\u901f\u7f29\u77ed\uff0c\u4e14\u4e0d\u5f97\u4e0d\u901a\u8fc7\u589e\u5f3a\u4eba\u5728\u53d8\u5316\u4e16\u754c\u4e2d\u7684\u9002\u5e94\u80fd\u529b\u6765\u7ef4\u7cfb\u751f\u547d\u7684\u793e\u4f1a\u4ef7\u503c\u548c\u610f\u4e49\u3002**\u5982\u679c\u6211\u4eec\u4e5f\u628aChatGPT\u7684\u6311\u6218\u7406\u89e3\u4e3a\u53d8\u5316\u4e16\u754c\u7684\u4e00\u90e8\u5206\uff0c\u5219\u9002\u5e94\u80fd\u529b\u624d\u662f\u4eba\u5e94\u5bf9 AIGC \u751a\u81f3\u672a\u6765\u5f3a\u4eba\u5de5\u667a\u80fd\u51b2\u51fb\u7684\u57fa\u672c\u80fd\u529b\u3002 </p> <p>**\u7b2c\u4e09\uff0c\u5728\u6280\u672f\u4e0d\u65ad\u89e6\u53ca\u4eba\u7c7b\u4f26\u7406\u8fb9\u754c\u65f6\uff0c\u575a\u5b88\u4eba\u7c7b\u4ef7\u503c\u89c2\u548c\u8bbe\u5b9a\u4eba\u7c7b\u4f26\u7406\u8fb9\u754c\u7684\u80fd\u529b\u3002**\u4eba\u7c7b\u7684\u4ef7\u503c\u89c2\u548c\u4f26\u7406\u8fb9\u754c\u59cb\u7ec8\u968f\u7740\u4eba\u7c7b\u7ecf\u6d4e\u548c\u793e\u4f1a\u7684\u53d1\u5c55\u5728\u53d8\u5316\u3002\u53d8\u5316\u7684\u65b9\u5411\u4ece\u5b97\u6559\u4e3b\u5bfc\u3001\u793e\u4f1a\u4e3b\u5bfc\u3001 \u7ecf\u6d4e\u4e3b\u5bfc\uff0c\u9010\u6b65\u8f6c\u5411\u4eba\u7c7b\u798f\u5229\u4e3b\u5bfc\u3002\u5982\u4f55\u5728\u4e0d\u65ad\u53ef\u80fd\u548c\u53ef\u884c\u7684\u6280\u672f\u4e16\u754c\u91cc\u575a\u5b88\u4eba\u7c7b\u7684\u57fa\u672c\u4ef7\u503c\u89c2\u548c\u4f26\u7406\u5e95\u7ebf\uff0c\u751a\u81f3\u8bbe\u5b9a\u4eba\u7c7b\u7684\u4f26\u7406\u5e95\u7ebf\uff0c\u662f\u4eba\u7c7b\u5e94\u5f53\u4e14\u5fc5\u987b\u5177\u5907\u7684\u80fd\u529b\u3002\u5728\u4eba\u5de5\u667a\u80fd\u53d1\u5c55\u5df2\u7ecf\u89e6\u53ca\u5230\u4eba\u7c7b\u4ef7\u503c\u89c2\u548c\u4f26\u7406\u5e95\u7ebf\u7684\u65f6\u523b\uff0c\u5982\u4f55\u5b88\u4f4f\u5e95\u7ebf\uff0c\u4e0d\u53ea\u662f\u4e00\u79cd\u575a\u5b88\u548c\u4ef7\u503c\u89c2\uff0c\u66f4\u662f\u4e00\u79cd\u628a\u4eba\u7c7b\u7ec4\u7ec7\u8d77\u6765\u5e76\u5f62\u6210\u5171\u8bc6\u7684\u80fd\u529b\u3002 </p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#rag","title":"RAG\u6f2b\u8c08","text":"<p>RAG\u4e3b\u8981\u89e3\u51b3\u4e86\u5927\u6a21\u578b\u5728\u751f\u6210\u65f6\u7f3a\u4e4f\u5bf9\u4e0a\u4e0b\u6587\u548c\u6743\u5a01\u77e5\u8bc6\u7684\u8003\u8651\u7684\u95ee\u9898\u3002\u901a\u8fc7\u5916\u6302\u77e5\u8bc6\u5e93\uff0c\u4f7f\u5f97\u5728\u751f\u6210\u56de\u7b54\u4e4b\u524d\u80fd\u591f\u4ece\u5916\u90e8\u6570\u636e\u6e90\u83b7\u53d6\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u63d0\u4f9b\u865a\u5047\u4fe1\u606f\u3002</p> <p>\u6211\u8ba4\u4e3a\u5bf9\u4e8e\u5782\u76f4\u9886\u57df\u4e0b\uff0cRAG\u7684\u6838\u5fc3\u662f\u6570\u636e\uff0c\u4ee5\u53ca\u6570\u636e\u5207\u5206\u65b9\u5f0f\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_2","title":"\u4ea4\u4e92","text":""},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_3","title":"\u6709\u6548\u6eaf\u6e90","text":"<p>\u5f53\u6211\u4eec\u8bbe\u8ba1\u5b8c\u6210\u4e00\u4e2aRAG\u7cfb\u7edf\u540e\uff0c\u4e00\u822c\u4f1a\u63d0\u4f9b\u57fa\u4e8e\u53c2\u8003\u6570\u636e\u7684\u56de\u7b54\uff0c\u4ee5\u53ca\u5217\u51fa\u53c2\u8003\u6570\u636e\u3002\u5982\u679c\u7528\u6237\u7684\u76ee\u7684\u662f\u53bb\u4ee5\u6b64\u53bb\u641c\u5bfb\u6570\u636e\uff0c\u6269\u5145\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u65e0\u53ef\u539a\u975e\u3002\u4f46\u662f\u5982\u679c\u7528\u6237\u7684\u610f\u56fe\u662f\u8981\u5f97\u5230\u7b54\u6848\u5e76\u4e14\u9700\u8981\u7b54\u6848\u662f\u771f\u5b9e\u7684\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u65b9\u5f0f\u5c31\u6709\u95ee\u9898\uff0c\u7528\u6237\u9700\u8981\u904d\u5386\u53c2\u8003\u6570\u636e\u624d\u80fd\u786e\u8ba4\u5f53\u524d\u56de\u7b54\u662f\u5426\u771f\u5b9e\u4ee5\u53ca\u786e\u5b9a\u7b54\u6848\u7684\u6e90\u5934\u3002\u56e0\u6b64\u6211\u4eec\u5728\u56de\u7b54\u7684\u65f6\u5019\u6700\u597d\u9644\u4e0a\u7b54\u6848\u662f\u4f9d\u636e\u54ea\u4e9b\u53c2\u8003\u6570\u636e\u751f\u6210\u7684\u6807\u5fd7\uff0c\u8fd9\u6837\u4fbf\u4e8e\u7528\u6237\u5feb\u901f\u5b9a\u4f4d\u6eaf\u6e90\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_4","title":"\u7528\u6237\u662f\u5426\u771f\u7684\u5728\u95ee\u4ed6\u8f93\u5165\u7684\u95ee\u9898\uff1f","text":"<p>\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u65e0\u6cd5\u8868\u8fbe\u771f\u5b9e\u7684\u8be2\u95ee\u610f\u56fe\uff0c\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u6211\u4eec\u5728\u8f93\u5165\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u4e0b\u610f\u8bc6\u7684\u5ffd\u7565\u4e00\u4e9b\u5148\u9a8c\u4fe1\u606f\uff0c\u6bd4\u5982\u5730\u7406\u4f4d\u7f6e\uff0c\u65f6\u95f4\u504f\u597d\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4eca\u5929\u5929\u6c14\u600e\u4e48\u6837\uff1f\u8fd9\u4e2a\u95ee\u9898\u5927\u6982\u7387\u662f\u5728\u95ee\u6211\u6240\u5728\u7684\u5730\u65b9\u7684\u5929\u6c14\u600e\u4e48\u6837\uff1f\u7f3a\u5931\u4e86\u5730\u7406\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u5927\u6a21\u578b\u57fa\u4e8e\u7528\u6237\u7684\u539f\u59cb\u8f93\u5165\u65e0\u6cd5\u7ed9\u51fa\u51c6\u786e\u7684\u7b54\u6848\u3002\u5927\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u53cd\u95ee\u7684\u65b9\u5f0f\uff0c\u5bf9\u7f3a\u5931\u7684\u5b9e\u4f53\u8fdb\u884c\u8865\u5145\u3002\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u5f53\u524d\u95ee\u9898\u4e0e\u7528\u6237\u5b9e\u9645\u95ee\u9898\u6709\u4e00\u4e9b\u504f\u5dee\uff0c\u901a\u8fc7\u5bf9\u5f53\u524d\u95ee\u9898\u8fdb\u884c\u63a8\u8350\u6216\u8005\u6539\u5199\u95ee\u9898\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_5","title":"\u6280\u672f","text":""},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#chunk","title":"chunk\u5207\u5206","text":"<p>chunk\u5207\u5206\u6700\u597d\u6309\u6570\u636e\u7684\u7ed3\u6784\u8bed\u4e49\u5207\u5206\uff0c\u4f46\u662f\u73b0\u5b9e\u4e2d\u7684\u6570\u636e\u6ca1\u90a3\u4e48\u7406\u60f3\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u5206\u522b\u5904\u7406\u3002</p> <p>\u5bf9\u4e8e\u6587\u672c\u6570\u636e\uff0c\u4e00\u822c\u5206\u4e3a\u7ed3\u6784\u5316\u6570\u636e\u548c\u975e\u7ed3\u6784\u5316\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u7ed3\u6784\u5316\u662f\u6307\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u8f7b\u6613\u7684\u5c06\u6570\u636e\u7ed3\u6784\u89e3\u6784\u3002</p> <p>\u5bf9\u4e8e\u7ed3\u6784\u5316\u6570\u636e\uff0c\u53ea\u9700\u8981\u89e3\u6790\u6570\u636e\u7ed3\u6784\uff0c\u6309\u7ed3\u6784\u62fc\u63a5\u62c6\u5206\u5373\u53ef\uff0c\u8fd9\u90e8\u5206\u662f\u6700\u5bb9\u6613\u5904\u7406\u7684\u3002</p> <p>\u5bf9\u4e8e\u975e\u7ed3\u6784\u5316\u6570\u636e\uff0c\u4e00\u822c\u53ef\u4ee5\u4ece\u4ea7\u54c1\u89d2\u5ea6\u662f\u5426\u6709\u4e00\u4e9b\u7279\u6b8a\u5b57\u6bb5\uff0c\u5173\u952e\u5b57\uff0c\u603b\u7ed3\u51fa\u4e00\u4e9b\u89c4\u5f8b\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u6570\u636e\u8fdb\u884c\u5207\u5206\uff0c\u515c\u5e95\u7b56\u7565\u5c31\u662f\u91c7\u7528\u56fa\u5b9a\u957f\u5ea6\u7684\u5faa\u73af\u5207\u5206\u3002(Langchain\u63d0\u4f9b\u4e86\u51fd\u6570)</p> <p>chunk\u5207\u5206\u6700\u597d\u6309\u6570\u636e\u7684\u7ed3\u6784\u8bed\u4e49\u5207\u5206\uff0c\u91c7\u7528\u56fa\u5b9a\u957f\u5ea6\uff0coverlap\u7684\u51fd\u6570\u5207\u5206\u5e94\u4e3a\u515c\u5e95\u7b56\u7565\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_6","title":"\u53ec\u56de\u548c\u6392\u5e8f","text":"<p>\u591a\u8def\u53ec\u56de\uff1a\u57fa\u4e8eBM25\u53ec\u56de\uff0c\u57fa\u4e8eembedding\u7684\u53ec\u56de\uff0c\u4ee5\u53ca\u5176\u4ed6\u7b56\u7565\u7684\u53ec\u56de\u3002</p> <p>\u6392\u5e8f\uff1a\u6211\u91c7\u7528\u7684\u662fRRF\uff0c\u56e0\u4e3aRRF\u662f\u5bf9\u4f4d\u7f6e\u6392\u5e8f\uff0c\u6211\u5bf9\u4e00\u4e9b\u6570\u636e\u8fdb\u884c\u62bd\u6837\u5206\u6790\uff0c\u901a\u8fc7\u6570\u636e\u5206\u6790\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fc7\u6ee4\u7b56\u7565\uff0c\u4f5c\u540e\u5904\u7406\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528reranker\uff0c\u6bd4\u5982cohere\u548cbge\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_7","title":"\u5176\u4ed6\u6280\u672f\u7684\u5c1d\u8bd5","text":""},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#query-transformation","title":"Query transformation","text":"<p>query transformation\u786e\u5b9e\u5bf9\u4e8e\u63d0\u5347\u53ec\u56de\u8d28\u91cf\u6709\u4e00\u4e9b\u63d0\u5347\uff0c\u4f46\u662f\u5b58\u57282\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5982\u679c\u591a\u8def\u53ec\u56de\u4e2d\u6709\u5173\u952e\u5b57\u53ec\u56de\uff0c\u9700\u8981\u5e73\u8861\u751f\u6210query\u7684\u591a\u8def\u53ec\u56de\uff0c\u4e0d\u7136\u5173\u952e\u5b57\u53ec\u56de\u53ef\u80fd\u4f1a\u4e3b\u5bfc\u53ec\u56de\u7ed3\u679c\uff0c\u5bfc\u81f4\u53ec\u56de\u7ed3\u679c\u53d8\u5dee\u3002</li> <li>query transformation\u751f\u6210\u7ed3\u679c\u7684\u4e0d\u7a33\u5b9a\u6027\u5bfc\u81f4\u6bcf\u6b21\u53ec\u56de\u7ed3\u679c\u4e0d\u4e00\u81f4\u3002</li> </ol>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#post-fusion","title":"Post-fusion","text":"<p>post-fusion\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5f53\u4e0a\u4e0b\u6587\u592a\u957f\uff0c\u6a21\u578b\u65e0\u6cd5\u5f88\u597d\u7684\u7406\u89e3\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u53ec\u56de\u6587\u6863\u8fdb\u884cRAG\u3002\u8fd9\u4e2a\u786e\u5b9e\u5bf9\u6574\u4f53\u7ed3\u679c\u7684\u8d28\u91cf\u6709\u63d0\u5347\uff0c\u4f46\u662f\u63d0\u5347\u6709\u9650\uff0c\u53cd\u89c2\u5176\u5e26\u6765\u7684\u95ee\u9898\uff1a\u63a8\u7406\u65f6\u95f4\u592a\u957f\uff0c\u6d88\u8017token\u8fc7\u591a\uff0c\u56e0\u6b64\u5f03\u7528\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#_8","title":"\u672a\u6765\u4f18\u5316\u70b9","text":"<ol> <li>\u6709\u65f6\u5019\u6280\u672f\u4e0a\u5f88\u96be\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6362\u4e2a\u601d\u8def\u53cd\u800c\u53ef\u80fd\u4f1a\u5f88\u597d\u89e3\u51b3\uff0c\u6bd4\u5982\u628a\u9009\u62e9\u4ea4\u7ed9\u7528\u6237\uff0c\u901a\u8fc7\u4ea4\u4e92\u7684\u65b9\u5f0f\u8ba9\u7528\u6237\u9009\u62e9\uff0c\u65e2\u51cf\u5c11\u4e86\u76f2\u76ee\u731c\u6d4b\u7528\u6237\u610f\u56fe\uff0c\u4e5f\u51cf\u5c11\u4e86\u6280\u672f\u4e0a\u7684\u5b9e\u73b0\u96be\u5ea6\uff0c\u4f46\u80fd\u8fbe\u5230\u4e8b\u534a\u529f\u500d\u7684\u6548\u679c\u3002</li> <li>\u5206\u522b\u9488\u5bf9\u53ec\u56de\u6d4b\u548c\u6392\u5e8f\u6d4b\u5bf9\u9886\u57dfEmbedding\u5fae\u8c03\u3002</li> <li>\u6570\u636e\u5207\u5206\u7cbe\u7ec6\u5316\uff0c\u6d41\u7a0b\u5316\u3002</li> </ol>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#sora","title":"Sora","text":"<p>OpenAI\u5f15\u9886\u4e86\u6570\u636e\u9a71\u52a8\u7684\u6f6e\u6d41\u3002\u5982\u679c\u6a21\u578b\u80fd\u591f\u65e0\u7ebf\u903c\u8fd1\u4e8e\u4e0a\u9650\uff0c\u90a3\u4e48\u6a21\u578b\u5c31\u5fc5\u987b\u4f9d\u8d56\u4e8e\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5b66\u4e60\u8db3\u591f\u591a\u7684\u771f\u5b9e\u6709\u6548\u7684\u6570\u636e\u3002GPT\u7ed3\u5408\u4e0a\u4e0b\u6587\u6765\u9884\u6d4b\u4e00\u4e2a\u5b57\u7b26\uff0cSora\u6587\u751f\u56fe\u662f\u5b66\u4e60\u6587\u672c\u548c\u56fe\u50cf\u7684\u6982\u7387\u5206\u5e03\u3002\u4ece\u5305\u542b\u4fe1\u606f\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u6587\u672c\u662f\u4e00\u7ef4\u6570\u636e\uff0c\u56fe\u50cf\u662f\u4e09\u7ef4\u751a\u81f3\u56db\u7ef4\u6570\u636e\uff0c\u89c6\u9891\u662f\u591a\u5e27\u56fe\u50cf\uff0c\u5305\u542b\u4e86\u5e27\u4e8e\u5e27\u4e4b\u95f4\u7684\u8054\u7cfb\uff0cChatGPT\u5728\u6587\u5b57\u8fd9\u79cd\u4e00\u7ef4\u6570\u636e\u4e0a\u7684\u90fd\u9700\u8981\u5343\u4ebf\u6a21\u578b\u53c2\u6570\uff0c\u5bf9\u4e8e\u56fe\u50cf\u60f3\u8981\u8fbe\u5230ChatGPT\u7684\u6548\u679c\uff0c\u5176\u6570\u636e\u91cf\uff0c\u6a21\u578b\u5927\u5c0f\uff0c\u7b97\u529b\u5e94\u8be5\u90fd\u662f\u6570\u91cf\u7ea7\u7684\u500d\u589e\uff0c\u89c6\u9891\u66f4\u751a\u3002\u4ece\u6570\u636e\u7684\u79bb\u6563\u8fde\u7eed\u89d2\u5ea6\u6765\u8bf4\uff0c\u6587\u672c\u662f\u79bb\u6563\u6570\u636e\uff0c\u6587\u672c\u88ab\u6620\u5c04\u6210token\uff0c\u800c\u56fe\u50cf\u662f\u8fde\u7eed\u6570\u636e\uff0c\u6a21\u578b\u9700\u8981\u5b66\u4e60\u50cf\u7d20\u95f4\u7684\u5173\u8054\u4fe1\u606f\uff0c\u4e14\u56fe\u50cf\u4e00\u822c\u662f\u4e09\u901a\u9053\uff0c\u5982\u679c\u662f\u6df1\u5ea6\u56fe\u50cf\u5219\u662f\u56db\u901a\u9053\uff0c\u56fe\u50cf\u6a21\u578b\u7684\u8ba1\u7b97\u91cf\u7ea7\u6bd4\u6587\u672c\u6a21\u578b\u8981\u9ad8\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002\u5c31\u76ee\u524d\uff0c\u57fa\u4e8e\u7b97\u529b\u6210\u672c\u8003\u91cf\uff0c\u6211\u5e76\u4e0d\u592a\u62c5\u5fc3Sora\u4f1a\u6709ChatGPT\u7684\u5a01\u529b\uff0c\u5373\u4f7fSora\u6548\u679c\u73b0\u5728\u5f88\u60ca\u8273\uff0c\u4f46\u662f\u8fd9\u79cd\u56fe\u50cf\u89c6\u9891\u7684\u6a21\u578b\u63a8\u7406\u7684\u4ee3\u4ef7\u6bd4\u6587\u672c\u7684\u9ad8\u7684\u591a\uff0c\u4e0d\u4e00\u5b9a\u6bd4\u96c7\u4e00\u4e2a\u4eba\u7684\u4ee3\u4ef7\u4f4e\u3002</p>"},{"location":"writing/2024/01/31/%E6%BC%AB%E8%B0%88gptrag/#reference","title":"Reference","text":"<ol> <li>\u5927\u6a21\u578b\u7684\u5e7b\u89c9\u95ee\u9898\u8c03\u7814: LLM Hallucination Survey</li> <li>https://alignmentsurvey.com/</li> <li>https://openai.com/blog/introducing-superalignment</li> <li>https://openai.com/blog/our-approach-to-alignment-research</li> <li>\u201cChatGPT\uff0c\u4f60\u600e\u4e48\u770b\uff1f\u201d\u2014\u2014\u4e0e ChatGPT \u63a2\u8ba8 AIGC \u5bf9\u4eba\u7c7b\u804c\u4e1a\u7684\u5f71\u54cd</li> </ol>"},{"location":"writing/archive/2024/","title":"2024","text":""},{"location":"writing/archive/2023/","title":"2023","text":""},{"location":"writing/category/rag/","title":"RAG","text":""},{"location":"writing/category/conversations/","title":"Conversations","text":""},{"location":"writing/category/embedding/","title":"Embedding","text":""},{"location":"writing/category/python/","title":"Python","text":""}]}